<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.antennahouse.com/names/XSL/Settings" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" xmlns:axs="http://www.antennahouse.com/names/XSL/Settings" xmlns:axh="http://www.antennahouse.com/names/XSL/Hyphenations">
  <xs:import namespace="http://www.antennahouse.com/names/XSL/Extensions" schemaLocation="axf.xsd"/>
  <xs:import namespace="http://www.antennahouse.com/names/XSL/Hyphenations" schemaLocation="axh.xsd"/>
  <xs:import namespace="http://www.w3.org/1999/XSL/Format" schemaLocation="fo.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--
    Schema for Antenna House Option Setting File.
    
    Copyright 2015-2024 Antenna House, Inc.
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
  -->
  <!-- default namespace = "" -->
  <xs:simpleType name="ah.boolean">
    <xs:restriction base="xs:token">
      <xs:enumeration value="false"/>
      <xs:enumeration value="true"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="bpil-penalty-hyphenation.model">
    <xs:restriction base="xs:integer">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="1000"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="compression.list">
    <xs:restriction base="xs:token">
      <xs:enumeration value="auto"/>
      <xs:enumeration value="zlib"/>
      <xs:enumeration value="jpeg"/>
      <xs:enumeration value="jpeg2000"/>
      <xs:enumeration value="keeplzw"/>
      <xs:enumeration value="auto2k"/>
      <xs:enumeration value="keeplzw2k"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="downsampling.list">
    <xs:restriction base="xs:token">
      <xs:enumeration value="none"/>
      <xs:enumeration value="average"/>
      <xs:enumeration value="bicubic"/>
      <xs:enumeration value="subsampling"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dpi.model">
    <xs:restriction base="xs:positiveInteger">
      <xs:minInclusive value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="jpeg-quality.model">
    <xs:restriction base="xs:positiveInteger">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="length.model">
    <xs:restriction base="xs:token">
      <xs:pattern value="[+\-]?(([0-9]+(\.[0-9]*)?)|\.[0-9]+)(cm|mm|in|pt|pc|px|ex|jpt|q|dpi|dd|cc|rem|ch|wch|lh|rlh|vw|vh|vmin|vmax|pvw|pvh|pvmin|pvmax|gr)"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="monochrome.compression.list">
    <xs:restriction base="xs:token">
      <xs:enumeration value="ccitt4"/>
      <xs:enumeration value="ccitt3"/>
      <xs:enumeration value="runlength"/>
      <xs:enumeration value="zlib"/>
      <xs:enumeration value="none"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="named-length.list">
    <xs:restriction base="xs:token">
      <xs:enumeration value="veryverythinmathspace"/>
      <xs:enumeration value="verythinmathspace"/>
      <xs:enumeration value="thinmathspace"/>
      <xs:enumeration value="mediummathspace"/>
      <xs:enumeration value="thickmathspace"/>
      <xs:enumeration value="verythickmathspace"/>
      <xs:enumeration value="veryverythickmathspace"/>
      <xs:enumeration value="negativeveryverythinmathspace"/>
      <xs:enumeration value="negativeverythinmathspace"/>
      <xs:enumeration value="negativethinmathspace"/>
      <xs:enumeration value="negativemediummathspace"/>
      <xs:enumeration value="negativethickmathspace"/>
      <xs:enumeration value="negativeverythickmathspace"/>
      <xs:enumeration value="negativeveryverythickmathspace"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="pass-through.model">
    <xs:union>
      <xs:simpleType>
        <xs:restriction>
          <xs:simpleType>
            <xs:list>
              <xs:simpleType>
                <xs:restriction base="xs:token">
                  <xs:enumeration value="all"/>
                  <xs:enumeration value="gif"/>
                  <xs:enumeration value="-gif"/>
                  <xs:enumeration value="tiff"/>
                  <xs:enumeration value="-tiff"/>
                  <xs:enumeration value="png"/>
                  <xs:enumeration value="-png"/>
                  <xs:enumeration value="jpeg"/>
                  <xs:enumeration value="-jpeg"/>
                  <xs:enumeration value="jpeg2000"/>
                  <xs:enumeration value="-jpeg2000"/>
                  <xs:enumeration value="jbig2"/>
                  <xs:enumeration value="-jbig2"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:list>
          </xs:simpleType>
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="none"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="pdf-version.list">
    <xs:restriction base="xs:token">
      <xs:enumeration value="PDF1.3"/>
      <xs:enumeration value="PDF1.4"/>
      <xs:enumeration value="PDF1.5"/>
      <xs:enumeration value="PDF1.6"/>
      <xs:enumeration value="PDF1.7"/>
      <xs:enumeration value="PDF2.0"/>
      <xs:enumeration value="PDF/X-1a:2001"/>
      <xs:enumeration value="PDF/X-3:2002"/>
      <xs:enumeration value="PDF/X-1a:2003"/>
      <xs:enumeration value="PDF/X-2:2003"/>
      <xs:enumeration value="PDF/X-3:2003"/>
      <xs:enumeration value="PDF/X-4:2010"/>
      <xs:enumeration value="PDF/A-1a:2005"/>
      <xs:enumeration value="PDF/A-1b:2005"/>
      <xs:enumeration value="PDF1.4/A-2a:2011"/>
      <xs:enumeration value="PDF1.5/A-2a:2011"/>
      <xs:enumeration value="PDF1.6/A-2a:2011"/>
      <xs:enumeration value="PDF1.7/A-2a:2011"/>
      <xs:enumeration value="PDF1.4/A-2b:2011"/>
      <xs:enumeration value="PDF1.5/A-2b:2011"/>
      <xs:enumeration value="PDF1.6/A-2b:2011"/>
      <xs:enumeration value="PDF1.7/A-2b:2011"/>
      <xs:enumeration value="PDF1.4/A-2u:2011"/>
      <xs:enumeration value="PDF1.5/A-2u:2011"/>
      <xs:enumeration value="PDF1.6/A-2u:2011"/>
      <xs:enumeration value="PDF1.7/A-2u:2011"/>
      <xs:enumeration value="PDF1.4/A-3a:2012"/>
      <xs:enumeration value="PDF1.5/A-3a:2012"/>
      <xs:enumeration value="PDF1.6/A-3a:2012"/>
      <xs:enumeration value="PDF1.7/A-3a:2012"/>
      <xs:enumeration value="PDF1.4/A-3b:2012"/>
      <xs:enumeration value="PDF1.5/A-3b:2012"/>
      <xs:enumeration value="PDF1.6/A-3b:2012"/>
      <xs:enumeration value="PDF1.7/A-3b:2012"/>
      <xs:enumeration value="PDF1.4/A-3u:2012"/>
      <xs:enumeration value="PDF1.5/A-3u:2012"/>
      <xs:enumeration value="PDF1.6/A-3u:2012"/>
      <xs:enumeration value="PDF1.7/A-3u:2012"/>
      <xs:enumeration value="PDF1.5/UA-1:2014"/>
      <xs:enumeration value="PDF1.6/UA-1:2014"/>
      <xs:enumeration value="PDF1.7/UA-1:2014"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="script.list">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Latn"/>
      <xs:enumeration value="Grek"/>
      <xs:enumeration value="Cyrl"/>
      <xs:enumeration value="Armn"/>
      <xs:enumeration value="Geor"/>
      <xs:enumeration value="Ethi"/>
      <xs:enumeration value="Arab"/>
      <xs:enumeration value="Syrc"/>
      <xs:enumeration value="Hebr"/>
      <xs:enumeration value="Deva"/>
      <xs:enumeration value="Beng"/>
      <xs:enumeration value="Guru"/>
      <xs:enumeration value="Gujr"/>
      <xs:enumeration value="Orya"/>
      <xs:enumeration value="Taml"/>
      <xs:enumeration value="Telu"/>
      <xs:enumeration value="Knda"/>
      <xs:enumeration value="Mlym"/>
      <xs:enumeration value="Sinh"/>
      <xs:enumeration value="Thai"/>
      <xs:enumeration value="Khmr"/>
      <xs:enumeration value="Laoo"/>
      <xs:enumeration value="Mymr"/>
      <xs:enumeration value="Hang"/>
      <xs:enumeration value="Hans"/>
      <xs:enumeration value="Hant"/>
      <xs:enumeration value="Jpan"/>
      <xs:enumeration value="Zsye"/>
      <xs:enumeration value="Zsym"/>
      <xs:enumeration value="."/>
      <xs:enumeration value=""/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ah.errorNumber">
    <xs:restriction base="xs:token">
      <xs:pattern value="[0-9]+|0x[0-9a-fA-F]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attributeGroup name="language-code-space.atts">
    <xs:attribute name="language" use="required">
      <xs:annotation>
        <xs:documentation>Language for which to apply the space</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="code">
      <xs:annotation>
        <xs:documentation>Character code for which to apply the space</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="space" use="required" type="xs:decimal">
      <xs:annotation>
        <xs:documentation>Amount of space to apply</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <!-- start = formatter-config -->
  <xs:element name="formatter-config" type="axs:formatter-config.model"/>
  <xs:complexType name="formatter-config.model">
    <xs:sequence>
      <xs:element minOccurs="0" ref="axs:formatter-settings"/>
      <xs:element minOccurs="0" ref="axs:font-settings"/>
      <xs:element minOccurs="0" ref="axs:pdf-settings"/>
      <xs:element minOccurs="0" ref="axs:ps-settings"/>
      <xs:element minOccurs="0" ref="axs:mathml-settings"/>
      <xs:element minOccurs="0" ref="axs:svg-settings"/>
      <xs:element minOccurs="0" ref="axs:svg-render-settings"/>
      <xs:element minOccurs="0" ref="axs:cgm-settings"/>
      <xs:element minOccurs="0" ref="axs:text-settings"/>
      <xs:element minOccurs="0" ref="axs:xslt-settings"/>
      <xs:element minOccurs="0" ref="axs:analyzer-settings"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="formatter-settings">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="axs:formatter-settings.model">
          <xs:attributeGroup ref="axs:formatter-settings.attlist"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="formatter-settings.model">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:list-style-type"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:quotationmark"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:script-chars"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:script-languge-in-CJK"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:space-end-punctuation"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:space-start-punctuation"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:space-between-digit-and-punctuation"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:usercss"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:multimedia"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:GS1-128"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:UAX50"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:unbreakable-words"/>
    </xs:sequence>
  </xs:complexType>
  <xs:attributeGroup name="formatter-settings.attlist">
    <xs:attribute name="abbreviation-character-count" type="xs:integer">
      <xs:annotation>
        <xs:documentation>Number of characters considered an abbreviation when a line break is inserted</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append-non-end-of-line-characters" type="xs:token">
      <xs:annotation>
        <xs:documentation>Additional non-end-of-line characters</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="append-non-starter-characters" type="xs:token">
      <xs:annotation>
        <xs:documentation>Additional non-starter characters</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="apply-default-html-css-to-XML" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to apply the Default CSS for HTML (html.css) even for XML+CSS</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="auto-break-footnote" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to automatically break footnotes when axf:footnote-max-height=​"auto": true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="auto-formatter-type">
      <xs:annotation>
        <xs:documentation>Formatter type when unclear if HTML or XHTML: html | xhtml</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="html"/>
          <xs:enumeration value="xhtml"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="avoid-orphan-single-word" type="xs:string">
      <xs:annotation>
        <xs:documentation>Languages that are not allowed to have single-letter words at the end of the line</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="avoid-widow-words-cjk-punctuation" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to count the last punctuation to be included in one character when axf:avoid-widow-word="true" is specified in CJK: true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="axf-formatter-config" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether &lt;axf:formatter-config&gt; is allowed</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="baseline-mode">
      <xs:annotation>
        <xs:documentation>Mode for handling baselines of mixed scripts: 4 = XSL Formatter V4; 5 = Antenna House Formatter V5; 6 = Antenna House Formatter V6</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="4"/>
          <xs:enumeration value="5"/>
          <xs:enumeration value="6"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="bold-ratio" type="xs:decimal"/>
    <xs:attribute name="border-medium-width" type="axs:length.model"/>
    <xs:attribute name="border-thick-width" type="axs:length.model"/>
    <xs:attribute name="border-thin-width" type="axs:length.model"/>
    <xs:attribute name="boxshadow-resolution-dpi">
      <xs:annotation>
        <xs:documentation>DPI of image when blurring a box shadow.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:positiveInteger">
          <xs:minInclusive value="72"/>
          <xs:maxInclusive value="1440"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="bpil">
      <xs:annotation>
        <xs:documentation>Languages or scripts to which to apply Knuth-Plass Breaking Paragraphs into Lines [BPIL]</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="bpil-limit-chars">
      <xs:annotation>
        <xs:documentation>Maximum number of characters to which [BPIL] applies: &lt;integer&gt;</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:positiveInteger">
          <xs:minInclusive value="1000"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="bpil-minimum-line-width" type="xs:positiveInteger">
      <xs:annotation>
        <xs:documentation>Minimum line width (in em) to which to apply [BPIL]: &lt;number&gt;</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="bpil-penalty-hyphenation" type="axs:bpil-penalty-hyphenation.model">
      <xs:annotation>
        <xs:documentation>Frequency of hyphenation in [BPIL] with a value of 0 to 1000</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="condensed-text-align-last">
      <xs:annotation>
        <xs:documentation>Initial value when 'axf:condensed-text-align-last="auto"': true | false | justify</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:union memberTypes="axs:ah.boolean">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="justify"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="css-allow-bare-expression" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether expressions not enclosed in 'calc()' are allowed: true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="css-child-match-root" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether pseudo-classes match root element: true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="css-debug" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to enable the CSS debugging feature in the GUI: true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="css-float-in-float" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether nested floats are allowed in CSS: true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="css-media-type">
      <xs:annotation>
        <xs:documentation>@media tokens that apply to Antenna House Formatter</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="default-CJK" type="xs:NCName">
      <xs:annotation>
        <xs:documentation>Language to be applied when the script for a CJK character is ambiguous</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="default-color">
      <xs:annotation>
        <xs:documentation>Default color for text</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="default-font-size" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>Default font size</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="default-from-page-master-region" type="axs:ah.boolean"/>
    <xs:attribute name="default-html-charset" type="xs:NCName"/>
    <xs:attribute name="default-lang">
      <xs:annotation>
        <xs:documentation>Default language code</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="default-lang2" type="xs:NCName">
      <xs:annotation>
        <xs:documentation>Default language to use when 'default-lang' is empty</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="default-page-height" type="xs:NMTOKEN"/>
    <xs:attribute name="default-page-margin-bottom"/>
    <xs:attribute name="default-page-margin-left"/>
    <xs:attribute name="default-page-margin-right"/>
    <xs:attribute name="default-page-margin-top"/>
    <xs:attribute name="default-page-width" type="xs:NMTOKEN"/>
    <xs:attribute name="descendant-or-self-files" type="axs:ah.boolean"/>
    <xs:attribute name="display-alttext" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to display axf:alttext content when no image in &lt;fo:external-graphic&gt; or &lt;img&gt;</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="double-hyphen-translineation">
      <xs:annotation>
        <xs:documentation>Comma-separated languages for which to also place a hyphen at the start of a line</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="error-if-overflow" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to perform 'error-if-overflow' checks when 'overflow="auto"'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="except-non-end-of-line-characters"/>
    <xs:attribute name="except-non-starter-characters"/>
    <xs:attribute name="external-entity" type="axs:ah.boolean"/>
    <xs:attribute name="family-name-syntax">
      <xs:annotation>
        <xs:documentation>How strictly to check 'font-family' syntax: auto | loose | strict</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="auto"/>
          <xs:enumeration value="loose"/>
          <xs:enumeration value="strict"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="fix-css-img-percentage" type="axs:ah.boolean"/>
    <xs:attribute name="fixed-width-space-treatment">
      <xs:annotation>
        <xs:documentation>Whether to insert a substitute glyph when a font does not include a white-space glyph: false | true | always</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:union memberTypes="axs:ah.boolean">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="always"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="hair-space-width">
      <xs:annotation>
        <xs:documentation>Width, in em, of HAIR SPACE (U+200A)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href-page-link" type="axs:ah.boolean"/>
    <xs:attribute name="hyphen-min">
      <xs:annotation>
        <xs:documentation>Whether to enable &lt;hyphen-min&gt; in the Hyphenation Exception Dictionary: false | true | without-exceptions</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:union memberTypes="axs:ah.boolean">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="without-exceptions"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="hyphenation-keep-mode">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="word"/>
          <xs:enumeration value="line"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="HyphenationOption" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to use custom hyphenation processing or TeX hyphenation dictionaries: 'true' | 'false'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hyphenation-TeX">
      <xs:annotation>
        <xs:documentation>Comma-delimited list of languages to hyphenate when HyphenationOption="true"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ignore-certificate-error" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to ignore certificate errors: true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="intrusion-displace-mode" type="xs:integer"/>
    <xs:attribute name="issue-scale-to-fit" type="axs:ah.boolean"/>
    <xs:attribute name="jamo-ligature" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to process the ligature of Hangul Jamo (U+1100 to U+11FF)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="justify-leader" type="axs:ah.boolean"/>
    <xs:attribute name="justify-rowspan-height" type="axs:ah.boolean"/>
    <xs:attribute name="keep-footnote-anchor" type="axs:ah.boolean"/>
    <xs:attribute name="latin-ligature" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to process ligatures in European languages</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="no-disp-warnings">
      <xs:annotation>
        <xs:documentation>Suppress specific error messages</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction>
          <xs:simpleType>
            <xs:list itemType="axs:ah.errorNumber"/>
          </xs:simpleType>
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="non-starter-ideographic-space" type="axs:ah.boolean"/>
    <xs:attribute name="normal-line-height"/>
    <xs:attribute name="normalize">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="none"/>
          <xs:enumeration value="nfc"/>
          <xs:enumeration value="nfd"/>
          <xs:enumeration value="nfkc"/>
          <xs:enumeration value="nfkd"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="oblique-skew" type="xs:integer">
      <xs:annotation>
        <xs:documentation>Angle when emulating font-style="oblique" or "backslant": &lt;number&gt;</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="osdc-cmd">
      <xs:annotation>
        <xs:documentation>Full path to OSDC ('SBCCmd' or 'SBCCmd.exe') program</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="osdc-param">
      <xs:annotation>
        <xs:documentation>Additional command-line parameters when running OSDC</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="overflow-limit-block" type="xs:NMTOKEN"/>
    <xs:attribute name="overflow-limit-inline" type="xs:NMTOKEN"/>
    <xs:attribute name="pair-kerning" type="axs:ah.boolean"/>
    <xs:attribute name="printer-marks-line-length"/>
    <xs:attribute name="printer-marks-line-width"/>
    <xs:attribute name="printer-marks-zero-margin"/>
    <xs:attribute name="PrinterOrientation" type="xs:NCName"/>
    <xs:attribute name="PscriptPassThrough" type="axs:ah.boolean"/>
    <xs:attribute name="punctuation-spacing"/>
    <xs:attribute name="punctuation-trim" type="axs:ah.boolean"/>
    <xs:attribute name="pxpi" type="xs:integer"/>
    <xs:attribute name="ruby-align">
      <xs:annotation>
        <xs:documentation>Whether the size matches the viewBox setting when the width and height of the root element are omitted in SVG: reference | viewBox</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="SeparatePrinterDuplexJob" type="axs:ah.boolean"/>
    <xs:attribute name="small-caps-emulation-always" type="axs:ah.boolean"/>
    <xs:attribute name="small-caps-emulation-size">
      <xs:annotation>
        <xs:documentation>Scale-down ratio when the font does not have small-caps</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="small-caps-emulation-x-height" type="axs:ah.boolean"/>
    <xs:attribute name="splitting-blocks-space" type="axs:ah.boolean"/>
    <xs:attribute name="tab-overlap-treatment">
      <xs:annotation>
        <xs:documentation>Behavior when tab alignment makes letters overlap: ignore-tab | next-tab</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="ignore-tab"/>
          <xs:enumeration value="next-tab"/>
          <xs:enumeration value=""/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="table-auto-layout-limit" type="xs:integer"/>
    <xs:attribute name="table-is-reference-area" type="axs:ah.boolean"/>
    <xs:attribute name="text-autospace" type="axs:ah.boolean"/>
    <xs:attribute name="text-autospace-mode">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="6"/>
          <xs:enumeration value="7"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="text-autospace-width"/>
    <xs:attribute name="text-decoration-baseline-mode" type="xs:integer"/>
    <xs:attribute name="text-decoration-mode" type="xs:integer"/>
    <xs:attribute name="text-justify-mode" type="xs:integer"/>
    <xs:attribute name="text-kashida-space"/>
    <xs:attribute name="text-orientation-mode" type="xs:integer"/>
    <xs:attribute name="textshadow-blur-cannot-embed-font" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to apply blur to a font that is not allowed to be embedded: false | true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="textshadow-resolution-minimum-dpi" type="axs:dpi.model">
      <xs:annotation>
        <xs:documentation>Minimum resolution of the image when applying blur in text-shadow: &lt;positive-integer&gt;</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="textshadow-resolution-pixel-per-em" type="axs:dpi.model">
      <xs:annotation>
        <xs:documentation>Image resolution when applying blur in text-shadow: &lt;positive-integer&gt;</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="text-underline-mode" type="xs:integer"/>
    <xs:attribute name="thin-space-width"/>
    <xs:attribute name="two-pass-formatting" type="axs:ah.boolean"/>
    <xs:attribute name="unresolved-internal-destination">
      <xs:annotation>
        <xs:documentation>Error level for an unresolved internal-destination</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="0"/>
          <xs:enumeration value="1"/>
          <xs:enumeration value="2"/>
          <xs:enumeration value="3"/>
          <xs:enumeration value="4"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="use-default-page-margin-CSS" type="axs:ah.boolean"/>
    <xs:attribute name="use-default-page-margin-XSL" type="axs:ah.boolean"/>
    <xs:attribute name="vertical-block-width-mode" type="xs:integer"/>
    <xs:attribute name="vertical-coloring-text"/>
    <xs:attribute name="vertical-underline-side" type="xs:NCName"/>
    <xs:attribute name="viewport-length-units-mode" type="xs:integer"/>
    <xs:attribute name="watermark-fill-color">
      <xs:annotation>
        <xs:documentation>Fill color for 'watermark-text'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="watermark-font-family"/>
    <xs:attribute name="watermark-font-style"/>
    <xs:attribute name="watermark-font-weight"/>
    <xs:attribute name="watermark-opacity">
      <xs:annotation>
        <xs:documentation>Opacity for 'watermark-text'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="watermark-stroke-color">
      <xs:annotation>
        <xs:documentation>Stroke color for 'watermark-text'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="watermark-stroke-width">
      <xs:annotation>
        <xs:documentation>Stroke width for 'watermark-text'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="watermark-rotate">
      <xs:annotation>
        <xs:documentation>Angle of rotation for 'watermark-text'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="watermark-scale">
      <xs:annotation>
        <xs:documentation>Magnification for 'watermark-text'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="watermark-text"/>
    <xs:attribute name="watermark2-font-family"/>
    <xs:attribute name="watermark2-font-style"/>
    <xs:attribute name="watermark2-font-weight"/>
    <xs:attribute name="watermark2-text"/>
    <xs:attribute name="white-space-collapse-mode">
      <xs:annotation>
        <xs:documentation>Compatibility mode for 'white-space-collapse'</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="6"/>
          <xs:enumeration value="7"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="xml-catalog">
      <xs:annotation>
        <xs:documentation>Location of XML Catalog file</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="zwsp-mode">
      <xs:annotation>
        <xs:documentation>ZERO WIDTH SPACE (U+200B) compatibility mode: 5 | 6</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="5"/>
          <xs:enumeration value="6"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="list-style-type">
    <xs:annotation>
      <xs:documentation>Characters to use for standard 'list-style-type' values</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="box">
        <xs:annotation>
          <xs:documentation>Character to use for list-style-type="box"</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="check">
        <xs:annotation>
          <xs:documentation>Character to use for list-style-type="check"</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="circle">
        <xs:annotation>
          <xs:documentation>Character to use for list-style-type="cirle"</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="diamond">
        <xs:annotation>
          <xs:documentation>Character to use for list-style-type="diamond"</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="disc">
        <xs:annotation>
          <xs:documentation>Character to use for list-style-type="disc"</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="hyphen">
        <xs:annotation>
          <xs:documentation>Character to use for list-style-type="hyphen"</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="square">
        <xs:annotation>
          <xs:documentation>Character to use for list-style-type="square"</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="quotationmark">
    <xs:complexType>
      <xs:attribute name="language" use="required"/>
      <xs:attribute name="code" use="required"/>
      <xs:attribute name="quotetype" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="QU"/>
            <xs:enumeration value="OP"/>
            <xs:enumeration value="CL"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="script-chars">
    <xs:complexType>
      <xs:attribute name="script"/>
      <xs:attribute name="code"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="script-languge-in-CJK">
    <xs:complexType>
      <xs:attribute name="script" use="required"/>
      <xs:attribute name="language"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="space-end-punctuation">
    <xs:annotation>
      <xs:documentation>Space to add after a punctuation character</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="axs:language-code-space.atts"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="space-start-punctuation">
    <xs:annotation>
      <xs:documentation>Space to add before a punctuation character</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="axs:language-code-space.atts"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="space-between-digit-and-punctuation">
    <xs:annotation>
      <xs:documentation>Space to add between a digit and a punctuation character</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="axs:language-code-space.atts"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="space-between-punctuation-and-digit">
    <xs:annotation>
      <xs:documentation>Space to add between a digit and a punctuation character</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="axs:language-code-space.atts"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="usercss">
    <xs:annotation>
      <xs:documentation>One or more user CSS stylesheets</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="axs:css"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="css">
    <xs:annotation>
      <xs:documentation>User CSS stylesheet</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="path" use="required" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>Path to user CSS stylesheet</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="multimedia">
    <xs:annotation>
      <xs:documentation>Additional 'content-type' values for multimedia formats</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="audio">
        <xs:annotation>
          <xs:documentation>Additional audio content type</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="video">
        <xs:annotation>
          <xs:documentation>Additional video content type</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="flash">
        <xs:annotation>
          <xs:documentation>Additional Flash content type</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="GS1-128">
    <xs:complexType>
      <xs:attribute name="AI" use="required"/>
      <xs:attribute name="format" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="UAX50">
    <xs:complexType>
      <xs:attribute name="code" use="required"/>
      <xs:attribute name="SVO">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="U"/>
            <xs:enumeration value="R"/>
            <xs:enumeration value="V"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="MVO">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="U"/>
            <xs:enumeration value="R"/>
            <xs:enumeration value="V"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="font-settings">
    <xs:annotation>
      <xs:documentation>Settings for fonts</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:script-font">
          <xs:annotation>
            <xs:documentation>Mapping from generic font to actual font for a script</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:font-alias">
          <xs:annotation>
            <xs:documentation>Alias one font name to another</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="auto-fallback-font" type="axs:ah.boolean"/>
      <xs:attribute name="barcode-text-font">
        <xs:annotation>
          <xs:documentation>Font for a linear barcode</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="OCRB"/>
            <xs:enumeration value="monospace"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="default-font-family" type="xs:NCName">
        <xs:annotation>
          <xs:documentation>Default font family</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="fallback-glyph">
        <xs:annotation>
          <xs:documentation>Whether, and at what level, to report when a glyph is not found in a fallback font</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="0"/>
            <xs:enumeration value="1"/>
            <xs:enumeration value="2"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="font-selection-mode">
        <xs:annotation>
          <xs:documentation>Font selection method: 5 = disregard 'font-selection-strategy'; 6 = act on 'font-selection-strategy="character-by-character"'</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="5"/>
            <xs:enumeration value="6"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="font-selection-strategy" type="xs:NCName"/>
      <xs:attribute name="font-stretch-mode" type="xs:integer"/>
      <xs:attribute name="missing-font">
        <xs:annotation>
          <xs:documentation>Whether to warn when font not found: [ 0 = no message; 1 = level 1 error message; 2 = level 2 error message ]</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="0"/>
            <xs:enumeration value="1"/>
            <xs:enumeration value="2"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="missing-glyph">
        <xs:annotation>
          <xs:documentation>Whether to warn when glyph not found: [ 0 = no message; 1 = level 1 error message; 2 = level 2 error message ]</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="0"/>
            <xs:enumeration value="1"/>
            <xs:enumeration value="2"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="missing-glyph-all" type="axs:ah.boolean"/>
      <xs:attribute name="use-windows-api" type="axs:ah.boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="script-font">
    <xs:complexType>
      <xs:attributeGroup ref="axs:script-font.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="script-font.attlist">
    <xs:attribute name="cursive">
      <xs:annotation>
        <xs:documentation>Generic cursive font for script</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fallback">
      <xs:annotation>
        <xs:documentation>Generic fallback font for script</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fantasy">
      <xs:annotation>
        <xs:documentation>Generic fantasy font for script</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="monospace">
      <xs:annotation>
        <xs:documentation>Generic monospace font for script</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sans-serif">
      <xs:annotation>
        <xs:documentation>Generic sans-serif font for script</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="script" type="axs:script.list">
      <xs:annotation>
        <xs:documentation>Script code</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="serif">
      <xs:annotation>
        <xs:documentation>Generic serif font for script</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="font-alias">
    <xs:complexType>
      <xs:attributeGroup ref="axs:font-alias.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="font-alias.attlist">
    <xs:attribute name="src" use="required">
      <xs:annotation>
        <xs:documentation>Name of font to alias</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="dst" use="required">
      <xs:annotation>
        <xs:documentation>Name of font to use in place of source font</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="unbreakable-words">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="axs:unbreakable-words.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="unbreakable-words.attlist">
    <xs:attribute name="src">
      <xs:annotation>
        <xs:documentation>External &lt;unbreakable-words&gt; document</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="pdf-settings">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="axs:pdf-settings.model">
          <xs:attributeGroup ref="axs:pdf-settings.attlist"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="pdf-settings.attlist">
    <xs:attribute name="allow-deprecated-annotation" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to allow annotation types that are deprecated in PDF 2.0</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="allow-embedding-lower-versions" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to allow PDF 1.x files in PDF 2.0</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="allow-javascript" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether JavaScript specified by openaction or axf:action-type is enabled: true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="allow-nest-alt-text" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to set alt text in descendants of tags with alt text: true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="check-tag-relationship" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to check the parent-child relationship between tags: true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="color-compression" type="axs:compression.list">
      <xs:annotation>
        <xs:documentation>Compression method for color image transformed into bitmap in PDF file: auto | zlib | jpeg | jpeg2000 | keeplzw | auto2k | keeplzw2k</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="color-compression-default" type="axs:compression.list">
      <xs:annotation>
        <xs:documentation>Compression method for color image transformed into bitmap in PDF file: auto | zlib | jpeg | jpeg2000 | keeplzw | auto2k | keeplzw2k</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="color-compression-minimum" type="axs:compression.list">
      <xs:annotation>
        <xs:documentation>Compression method for color image transformed into bitmap in PDF file: auto | zlib | jpeg | jpeg2000 | keeplzw | auto2k | keeplzw2k</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="color-conversion">
      <xs:annotation>
        <xs:documentation>How to convert the RGB or CMYK color space to DeviceGray or DeviceCMYK: none | black | gray | all-gray | all-cmyk</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="none"/>
          <xs:enumeration value="black"/>
          <xs:enumeration value="gray"/>
          <xs:enumeration value="all-gray"/>
          <xs:enumeration value="all-cmyk"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="color-conversion-k100" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to always convert black to K100 when 'color-conversion="all-cmyk"'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="color-downsampling" type="axs:downsampling.list"/>
    <xs:attribute name="color-downsampling-above-dpi" type="axs:dpi.model"/>
    <xs:attribute name="color-downsampling-target-dpi" type="axs:dpi.model"/>
    <xs:attribute name="color-downsampling-default" type="axs:downsampling.list"/>
    <xs:attribute name="color-downsampling-above-dpi-default" type="axs:dpi.model"/>
    <xs:attribute name="color-downsampling-target-dpi-default" type="axs:dpi.model"/>
    <xs:attribute name="color-downsampling-minimum" type="axs:downsampling.list"/>
    <xs:attribute name="color-downsampling-above-dpi-minimum" type="axs:dpi.model"/>
    <xs:attribute name="color-downsampling-target-dpi-minimum" type="axs:dpi.model"/>
    <xs:attribute name="color-jpeg-quality" type="axs:jpeg-quality.model"/>
    <xs:attribute name="color-jpeg-quality-default" type="axs:jpeg-quality.model"/>
    <xs:attribute name="color-jpeg-quality-minimum" type="axs:jpeg-quality.model"/>
    <xs:attribute name="color-profile"/>
    <xs:attribute name="convert-colorspace" type="axs:ah.boolean"/>
    <xs:attribute name="decimal-part-digits">
      <xs:annotation>
        <xs:documentation>Number of digits after the decimal point of real numbers to be output in PDF: 1 to 6</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:positiveInteger">
          <xs:minInclusive value="1"/>
          <xs:maxInclusive value="6"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="decimal-part-digits-default">
      <xs:simpleType>
        <xs:restriction base="xs:positiveInteger">
          <xs:minInclusive value="1"/>
          <xs:maxInclusive value="6"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="decimal-part-digits-minimum">
      <xs:simpleType>
        <xs:restriction base="xs:positiveInteger">
          <xs:minInclusive value="1"/>
          <xs:maxInclusive value="6"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="default-output-intent"/>
    <xs:attribute name="embed-all-fonts">
      <xs:annotation>
        <xs:documentation>Whether to embed all embeddable fonts in PDF: false | true | base14</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:union memberTypes="axs:ah.boolean">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="base14"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="embed-font-encoding"/>
    <xs:attribute name="embed-std-output-intent" type="axs:ah.boolean"/>
    <xs:attribute name="embed-subset-font-percentage" type="xs:integer"/>
    <xs:attribute name="encrypt-metadata" type="axs:ah.boolean"/>
    <xs:attribute name="encryption-level">
      <xs:annotation>
        <xs:documentation>Key length when encrypting the PDF file: 40rc4 | 128rc4 | 128aes | 256aes</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="40rc4"/>
          <xs:enumeration value="40RC4"/>
          <xs:enumeration value="128rc4"/>
          <xs:enumeration value="128RC4"/>
          <xs:enumeration value="128aes"/>
          <xs:enumeration value="128AES"/>
          <xs:enumeration value="256aes"/>
          <xs:enumeration value="256AES"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="EPS-processor">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="none"/>
          <xs:enumeration value="distiller"/>
          <xs:enumeration value="ghostscript"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="error-on-embed-fault" type="axs:ah.boolean"/>
    <xs:attribute name="error-on-missing-glyph" type="axs:ah.boolean"/>
    <xs:attribute name="error-on-pdfx-fault" type="axs:ah.boolean"/>
    <xs:attribute name="error-on-tagged-pdf-fault" type="axs:ah.boolean"/>
    <xs:attribute name="fallback-alttext">
      <xs:annotation>
        <xs:documentation>Fallback string when 'axf:alttext' is not specified</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ghostscript">
      <xs:annotation>
        <xs:documentation>Full path to Ghostscript</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="gif-pass-through" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Available up to V6.2. Use 'pass-through' instead.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="grayscale-compression" type="axs:compression.list"/>
    <xs:attribute name="grayscale-compression-default" type="axs:compression.list"/>
    <xs:attribute name="grayscale-compression-minimum" type="axs:compression.list"/>
    <xs:attribute name="grayscale-downsampling" type="axs:downsampling.list"/>
    <xs:attribute name="grayscale-downsampling-above-dpi" type="axs:dpi.model"/>
    <xs:attribute name="grayscale-downsampling-target-dpi" type="axs:dpi.model"/>
    <xs:attribute name="grayscale-downsampling-default" type="axs:downsampling.list"/>
    <xs:attribute name="grayscale-downsampling-above-dpi-default" type="axs:dpi.model"/>
    <xs:attribute name="grayscale-downsampling-target-dpi-default" type="axs:dpi.model"/>
    <xs:attribute name="grayscale-downsampling-minimum" type="axs:downsampling.list"/>
    <xs:attribute name="grayscale-downsampling-above-dpi-minimum" type="axs:dpi.model"/>
    <xs:attribute name="grayscale-downsampling-target-dpi-minimum" type="axs:dpi.model"/>
    <xs:attribute name="grayscale-jpeg-quality" type="axs:jpeg-quality.model"/>
    <xs:attribute name="grayscale-jpeg-quality-default" type="axs:jpeg-quality.model"/>
    <xs:attribute name="grayscale-jpeg-quality-minimum" type="axs:jpeg-quality.model"/>
    <xs:attribute name="gs-add-options"/>
    <xs:attribute name="image-color-profile" type="axs:ah.boolean"/>
    <xs:attribute name="image-compression" type="xs:NCName"/>
    <xs:attribute name="image-downsampling" type="xs:NCName"/>
    <xs:attribute name="image-downsampling-above-dpi" type="axs:dpi.model"/>
    <xs:attribute name="image-downsampling-target-dpi" type="axs:dpi.model"/>
    <xs:attribute name="import-3D-annotation" type="axs:ah.boolean"/>
    <xs:attribute name="import-3Dannotation" type="axs:ah.boolean"/>
    <xs:attribute name="import-annotation-types"/>
    <xs:attribute name="import-tagged-pdf" type="axs:ah.boolean"/>
    <xs:attribute name="import-textmarkup-annotation" type="axs:ah.boolean"/>
    <xs:attribute name="joboptions"/>
    <xs:attribute name="jpeg-quality" type="axs:jpeg-quality.model"/>
    <xs:attribute name="linearized" type="axs:ah.boolean"/>
    <xs:attribute name="mediabox-origin-zero" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether the origin of /MediaBox is adjusted to '(0,0)': true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="monochrome-compression" type="axs:monochrome.compression.list"/>
    <xs:attribute name="monochrome-compression-default" type="axs:monochrome.compression.list"/>
    <xs:attribute name="monochrome-compression-minimum" type="axs:monochrome.compression.list"/>
    <xs:attribute name="monochrome-downsampling" type="axs:downsampling.list"/>
    <xs:attribute name="monochrome-downsampling-above-dpi" type="axs:dpi.model"/>
    <xs:attribute name="monochrome-downsampling-target-dpi" type="axs:dpi.model"/>
    <xs:attribute name="monochrome-downsampling-default" type="axs:downsampling.list"/>
    <xs:attribute name="monochrome-downsampling-above-dpi-default" type="axs:dpi.model"/>
    <xs:attribute name="monochrome-downsampling-target-dpi-default" type="axs:dpi.model"/>
    <xs:attribute name="monochrome-downsampling-minimum" type="axs:downsampling.list"/>
    <xs:attribute name="monochrome-downsampling-above-dpi-minimum" type="axs:dpi.model"/>
    <xs:attribute name="monochrome-downsampling-target-dpi-minimum" type="axs:dpi.model"/>
    <xs:attribute name="multimedia-treatment">
      <xs:annotation>
        <xs:documentation>Whether to embed multimedia in PDF when axf:multimedia-treatment="auto": embed | absolute-link | relative-link | richmedia | richmedia-windowed</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="embed"/>
          <xs:enumeration value="absolute-link"/>
          <xs:enumeration value="relative-link"/>
          <xs:enumeration value="richmedia"/>
          <xs:enumeration value="richmedia-windowed"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="new-tagging-mode" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to enable the role map and axf:pdftag="''" support: true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="no-accessibility" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to permit text access for screen reader devices of PDF files: false | true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="no-adding-or-changing-comments" type="axs:ah.boolean"/>
    <xs:attribute name="no-assemble-doc" type="axs:ah.boolean"/>
    <xs:attribute name="no-changing" type="axs:ah.boolean"/>
    <xs:attribute name="no-content-copying" type="axs:ah.boolean"/>
    <xs:attribute name="no-fill-form" type="axs:ah.boolean"/>
    <xs:attribute name="object-compression" type="axs:ah.boolean"/>
    <xs:attribute name="object-compression-default" type="axs:ah.boolean"/>
    <xs:attribute name="object-compression-minimum" type="axs:ah.boolean"/>
    <xs:attribute name="overprint" type="xs:NCName"/>
    <xs:attribute name="owner-password"/>
    <xs:attribute name="page-labels" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to apply page labels to page numbers: true | false</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pages-max-kids" type="xs:integer">
      <xs:annotation>
        <xs:documentation>Maximum number of elements in the /Kids array of the PDF /Pages dictionary</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pass-through" type="axs:pass-through.model"/>
    <xs:attribute name="pass-through-default" type="axs:pass-through.model"/>
    <xs:attribute name="pass-through-minimum" type="axs:pass-through.model"/>
    <xs:attribute name="pdf-version" type="axs:pdf-version.list"/>
    <xs:attribute name="printing-allowed" type="xs:NCName"/>
    <xs:attribute name="rasterize-resolution" type="xs:integer"/>
    <xs:attribute name="real-value-limit">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="0"/>
          <xs:enumeration value="1"/>
          <xs:enumeration value="2"/>
          <xs:enumeration value="3"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="real-value-limit-modify" type="axs:ah.boolean"/>
    <xs:attribute name="reverse-page" type="axs:ah.boolean"/>
    <xs:attribute name="rgb-conversion" type="xs:NCName"/>
    <xs:attribute name="signature" type="axs:ah.boolean"/>
    <xs:attribute name="signature-name" type="xs:NCName"/>
    <xs:attribute name="tagged-pdf" type="axs:ah.boolean"/>
    <xs:attribute name="text-and-lineart-compression" type="axs:ah.boolean"/>
    <xs:attribute name="text-and-lineart-compression-default" type="axs:ah.boolean"/>
    <xs:attribute name="text-and-lineart-compression-minimum" type="axs:ah.boolean"/>
    <xs:attribute name="transparency" type="axs:ah.boolean"/>
    <xs:attribute name="transparency-color-space" type="xs:NCName"/>
    <xs:attribute name="use-launch-for-local-file" type="axs:ah.boolean"/>
    <xs:attribute name="user-password"/>
    <xs:attribute name="xmp-padding" type="xs:integer">
      <xs:annotation>
        <xs:documentation>Padding size to assist XMP editing in place when embedding XMP</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:complexType name="pdf-settings.model">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:embed-font"/>
      <xs:sequence minOccurs="0">
        <xs:element ref="axs:tag-role-map"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:embed-font"/>
      </xs:sequence>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="embed-font">
    <xs:complexType>
      <xs:attribute name="font" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="tag-role-map">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="axs:tag-element"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="tag-element">
    <xs:complexType>
      <xs:attribute name="tag-base-name" use="required" type="xs:token"/>
      <xs:attribute name="tag-derived-name" use="required" type="xs:token"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="cgm-settings">
    <xs:complexType>
      <xs:attribute name="output-text" type="axs:ah.boolean"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ps-settings">
    <xs:complexType>
      <xs:attribute name="noembed-font" type="axs:ah.boolean">
        <xs:annotation>
          <xs:documentation>Whether fonts are embedded in PostScript output: true | false</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="transparency" type="axs:ah.boolean">
        <xs:annotation>
          <xs:documentation>Whether transparency is processed when outputting pdfmark: true | false</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="use-launch-for-local-file" type="axs:ah.boolean">
        <xs:annotation>
          <xs:documentation>Whether anexternal link is transformed into “Open the file” or “World Wide Web link”: true | false</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="mathml-settings">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:variant-font"/>
        <xs:element minOccurs="0" ref="axs:operator-dictionary"/>
      </xs:sequence>
      <xs:attributeGroup ref="axs:mathml-settings.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="variant-font">
    <xs:complexType>
      <xs:attribute name="center-shift"/>
      <xs:attribute name="fontfamily" use="required"/>
      <xs:attribute name="mathvariant" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value=""/>
            <xs:enumeration value="normal"/>
            <xs:enumeration value="bold"/>
            <xs:enumeration value="italic"/>
            <xs:enumeration value="bold-italic"/>
            <xs:enumeration value="double-struck"/>
            <xs:enumeration value="bold-fraktur"/>
            <xs:enumeration value="script"/>
            <xs:enumeration value="bold-script"/>
            <xs:enumeration value="fraktur"/>
            <xs:enumeration value="sans-serif"/>
            <xs:enumeration value="bold-sans-serif"/>
            <xs:enumeration value="sans-serif-italic"/>
            <xs:enumeration value="sans-serif-bold-italic"/>
            <xs:enumeration value="monospace"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="operator-dictionary">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:entry"/>
      </xs:sequence>
      <xs:attribute name="src"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="entry">
    <xs:complexType>
      <xs:attribute name="operator" use="required"/>
      <xs:attribute name="form" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="prefix"/>
            <xs:enumeration value="infix"/>
            <xs:enumeration value="postfix"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="priority" type="xs:integer"/>
      <xs:attribute name="lspace">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="0"/>
            <xs:enumeration value="1"/>
            <xs:enumeration value="2"/>
            <xs:enumeration value="3"/>
            <xs:enumeration value="4"/>
            <xs:enumeration value="5"/>
            <xs:enumeration value="6"/>
            <xs:enumeration value="7"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="rspace">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="0"/>
            <xs:enumeration value="1"/>
            <xs:enumeration value="2"/>
            <xs:enumeration value="3"/>
            <xs:enumeration value="4"/>
            <xs:enumeration value="5"/>
            <xs:enumeration value="6"/>
            <xs:enumeration value="7"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="minsize"/>
      <xs:attribute name="maxsize"/>
      <xs:attribute name="accent">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="fence">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="separator">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="stretchy">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="symmetric">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="largeop">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="moveablelimits">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="linebreakstyle">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="before"/>
            <xs:enumeration value="after"/>
            <xs:enumeration value="duplicate"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="mathml-settings.attlist">
    <xs:attribute name="mathDisplay">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="inline"/>
          <xs:enumeration value="block"/>
          <xs:enumeration value="context"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="scriptsizemultiplier" type="xs:decimal"/>
    <xs:attribute name="scriptsizemultiplierMscarries" type="xs:decimal"/>
    <xs:attribute name="scriptminsize" type="xs:NMTOKEN"/>
    <xs:attribute name="scriptmaxsize" type="xs:NMTOKEN"/>
    <xs:attribute name="largeop-multiplier" type="xs:decimal"/>
    <xs:attribute name="error-display" type="xs:NCName"/>
    <xs:attribute name="fraktur" type="xs:NCName"/>
    <xs:attribute name="mode" type="xs:NCName"/>
    <xs:attribute name="monospace" type="xs:NCName"/>
    <xs:attribute name="opspace-multiplier" type="xs:decimal"/>
    <xs:attribute name="sans-serif" type="xs:NCName"/>
    <xs:attribute name="script" type="xs:NCName"/>
    <xs:attribute name="script-maxnest" type="xs:integer"/>
  </xs:attributeGroup>
  <!--
    ,
    attribute  { xsd:NMTOKEN }?,
    attribute  { xsd:decimal }?,
    attribute scriptsizemultiplier { xsd:decimal }?
  -->
  <xs:element name="munderover">
    <xs:complexType>
      <xs:attributeGroup ref="axs:munderover.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="munderover.attlist">
    <xs:attribute name="bar-padding"/>
    <xs:attribute name="bar-width"/>
    <xs:attribute name="integral-largeop-overscript-space" type="xs:decimal"/>
    <xs:attribute name="integral-largeop-underscript-space" type="xs:decimal"/>
    <xs:attribute name="integral-overscript-space" type="xs:decimal"/>
    <xs:attribute name="integral-underscript-space" type="xs:decimal"/>
    <xs:attribute name="limit-size" use="required"/>
    <xs:attribute name="overaccent-shift" use="required"/>
    <xs:attribute name="overbar-space" use="required"/>
    <xs:attribute name="overscript-space" use="required"/>
    <xs:attribute name="tendsto-arror-variable" type="axs:ah.boolean"/>
    <xs:attribute name="underaccent-shift" use="required"/>
    <xs:attribute name="underbar-space" use="required"/>
    <xs:attribute name="underscript-space" use="required"/>
  </xs:attributeGroup>
  <xs:element name="svg-render-settings">
    <xs:complexType>
      <xs:attributeGroup ref="axs:svg-render-settings.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="svg-render-settings.attlist">
    <xs:attribute name="current-color-eval-at-painting" type="axs:ah.boolean"/>
    <xs:attribute name="image-element-eval-as-svg20" type="axs:ah.boolean"/>
    <xs:attribute name="inherit-svg-fill-color" type="axs:ah.boolean"/>
    <xs:attribute name="outermost-svg-eval-as-isolate" type="axs:ah.boolean"/>
    <xs:attribute name="radial-gradient-eval-as-svg20" type="axs:ah.boolean"/>
    <xs:attribute name="rasterize-dpi" type="xs:decimal"/>
    <xs:attribute name="rasterize-size-lower-limit" type="xs:decimal"/>
    <xs:attribute name="rasterize-size-upper-limit" type="xs:decimal"/>
    <xs:attribute name="responsive-svg-size"/>
    <xs:attribute name="use-element-eval-as-shadow-element" type="axs:ah.boolean"/>
    <xs:attribute name="width-height-as-presentation-attribute" type="axs:ah.boolean"/>
  </xs:attributeGroup>
  <xs:element name="svg-settings">
    <xs:complexType>
      <xs:attributeGroup ref="axs:svg-settings.attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="svg-settings.attlist">
    <xs:attribute name="copy-image-path">
      <xs:annotation>
        <xs:documentation>Destination directory when 'image-processing' is 'copy-all' or 'copy'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="copy-image-prefix">
      <xs:annotation>
        <xs:documentation>Prefix to add to files copied to 'copy-image-path' directory</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="create-copy-image-path" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to create 'copy-image-path' directory if it does not exist</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="format"/>
    <xs:attribute name="gzip-compression" type="axs:ah.boolean"/>
    <xs:attribute name="image-conversion">
      <xs:annotation>
        <xs:documentation>Format for image to be embedded that is not already JPEG or PNG: auto | jpeg | png</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="auto"/>
          <xs:enumeration value="jpeg"/>
          <xs:enumeration value="png"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="image-processing">
      <xs:annotation>
        <xs:documentation>How to treat a referenced image: embed-all | link | copy-all | copy</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="embed-all"/>
          <xs:enumeration value="link"/>
          <xs:enumeration value="copy-all"/>
          <xs:enumeration value="copy"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="jpeg-quality" type="axs:jpeg-quality.model">
      <xs:annotation>
        <xs:documentation>Image quality for images that cannot be embedded directly in SVG</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="rename-copy-image" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to add 'copy-image-prefix' prefix when copying files</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="singlefile" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether multi-page formatted result is output as a single SVG file</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="singlefile-number" type="axs:ah.boolean">
      <xs:annotation>
        <xs:documentation>Whether to add a sequence number to a one-page formatted document when 'singlefile="false"'</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="svg-version">
      <xs:annotation>
        <xs:documentation>SVG version to create</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="2.0"/>
          <xs:enumeration value="1.1"/>
          <xs:enumeration value="Basic"/>
          <xs:enumeration value="Tiny"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="text-settings">
    <xs:complexType/>
  </xs:element>
  <xs:element name="xslt-settings">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="axs:xslt-settings.model">
          <xs:attributeGroup ref="axs:xslt-settings.attlist"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="xslt-settings.attlist">
    <xs:attribute name="command">
      <xs:annotation>
        <xs:documentation>Command line of external XSLT processor. Must include '%1', '%2', and '%3. Can include '%param'. On Windows, can be empty or '@MSXML'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="msxml" type="axs:ah.boolean"/>
    <xs:attribute name="msxmlver" type="xs:integer">
      <xs:annotation>
        <xs:documentation>Highest MSXML version to use: 6 | 5 | 4 | 3 | 0</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="param-option">
      <xs:annotation>
        <xs:documentation>Template for passing XSLT parameters. Must include '%p' and '%v'.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:complexType name="xslt-settings.model">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="axs:param"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="param">
    <xs:complexType>
      <xs:attribute name="name" use="required" type="xs:NCName"/>
      <xs:attribute name="value" use="required" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="analyzer-settings">
    <xs:complexType>
      <xs:attribute name="hyphen-limit" type="xs:positiveInteger"/>
      <xs:attribute name="line-end-limit" type="xs:positiveInteger"/>
      <xs:attribute name="line-end-repeat-limit" type="xs:positiveInteger"/>
      <xs:attribute name="line-start-limit" type="xs:positiveInteger"/>
      <xs:attribute name="line-start-repeat-limit" type="xs:positiveInteger"/>
      <xs:attribute name="page-widow-limit-em"/>
      <xs:attribute name="page-widow-limit-percent"/>
      <xs:attribute name="paragraph-widow-limit-em"/>
      <xs:attribute name="paragraph-widow-limit-percent"/>
    </xs:complexType>
  </xs:element>
</xs:schema>

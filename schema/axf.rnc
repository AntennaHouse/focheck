# Copyright 2015 Antenna House, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

default namespace axf = "http://www.antennahouse.com/names/XSL/Extensions"
namespace fo = "http://www.w3.org/1999/XSL/Format"
namespace local = ""

include "axf-inherited.rnc" {
#
# Overrides to patterns in 'fo-inherited.rnc' (and patterns in
# modules that it includes).
#

# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#fo.change-bar-begin
fo_change-bar-begin.model =
    ( fo_float? )

# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.document-info
fo_root.model =
    ( (axf_document-info*,
       fo_layout-master-set,
       axf_document-info*,
       fo_declarations?,
       axf_document-info*,
       fo_bookmark-tree?,
       axf_document-info*,
       (fo_page-sequence|fo_page-sequence-wrapper)+) )

# AH Formatter allows fo:region-* in any order.
fo_simple-page-master.model =
    ( (fo_region-body+ &
       fo_region-before? &
       fo_region-after? &
       fo_region-start? &
       fo_region-end?) )

# AH Formatter allows empty fo:static-content.
fo_static-content.model =
    ( ( (block.fo.list | neutral.fo.list)* ) & (point.fo.list)* )

# AH Formatter allows fo:block-container to omit block FOs.
fo_block-container.model =
    fo_marker*,
    ( ( (block.fo.list | neutral.fo.list)* ) & (point.fo.list)* )

# AH Formatter allows fo:inline-container to omit block FOs.
fo_inline-container.model =
    fo_marker*,
    ( ( (block.fo.list | neutral.fo.list)* ) & (point.fo.list)* )

# AH Formatter allows empty fo:list-item.
fo_list-item.model =
    fo_marker*,
    ( (fo_list-item-label,fo_list-item-body)? & (point.fo.list)* )

# AH Formatter allows fo:list-item-label omit block FOs.
fo_list-item-label.model =
    fo_marker*,
    ( ( (block.fo.list | neutral.fo.list)* ) & (point.fo.list)* )

# AH Formatter allows fo:table-cell to omit block FOs.
# axf:table-cell-repeated-marker used when cell repeats.
fo_table-cell.model =
    fo_marker*,
    axf_table-cell-repeated-marker?,
    ( ( (block.fo.list | neutral.fo.list)* ) & (point.fo.list)* )

# For fo:instream-foreign-object
# Exclude axf:* elements and attributes from counting as 'non-xsl'.
non-xsl =
  ( attribute * - ( local:* | axf:* | xml:* ) { text }*,
    element * - ( local:* | fo:* | axf:* ) { attribute * { text }*, anything }* )

#
# End of overrides to patterns in 'fo-inherited.rnc'.
#
}

#
# Antenna House extension elements
#

# <axf:document-info/>
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.document-info
axf_document-info =
  ## Document information such as an author and title that can be embedded in the PDF
  element axf:document-info {
    ## Name of the document information
    attribute name { ('document-title' | 'subject' | 'author' | 'author-title' |
                       'description-writer' | 'keywords' | 'copyright-status' |
		       'copyright-notice' | 'copyright-info-url' | 'xmp' | 'pagemode' |
		       'pagelayout' | 'hidetoolbar' | 'hidemenubar' | 'hidewindowui' |
		       'fitwindow' | 'centerwindow' | 'displaydoctitle' | 'openaction' )},
    ## Value of the document information.  Some information has constraints on the allowed values.
    attribute value { text },
    empty
}

# <axf:footnote-number/>
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.footnote-number
axf_footnote-number =
  ## Generates a footnote number
  element axf:footnote-number {
    id,
    empty
}

# <axf:footnote-number-citation/>
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.footnote-number-citation
axf_footnote-number-citation =
  ## Cites a footnote number
  element axf:footnote-number-citation {
    attribute ref-id { text },
    empty
}

# <axf:table-cell-repeated-marker>
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.table-cell-repeated-marker
axf_table-cell-repeated-marker =
  ## Contents used when axf:repeat-cell-content-at-break="true"
  element axf:table-cell-repeated-marker {
    (text|inline.fo.list|block.fo.list)*
  }

#
# Antenna House extensions to patterns in included modules.
#

#
# Extensions to FO models
#

inline.fo.list |=
    axf_footnote-number |
    axf_footnote-number-citation

#
# Extensions to FO attlists
#

fo_simple-page-master.attlist &=
    axf_bleed,
    axf_bleed-top,
    axf_bleed-bottom,
    axf_bleed-left,
    axf_bleed-right,
    axf_crop-area-visibility,
    axf_crop-offset,
    axf_crop-offset-top,
    axf_crop-offset-bottom,
    axf_crop-offset-left,
    axf_crop-offset-right,
    axf_printer-marks,
    axf_printer-marks-line-color,
    axf_printer-marks-line-length,
    axf_printer-marks-line-width,
    axf_printer-marks-spine-width,
    axf_printer-marks-zero-margin

fo_basic-link.attlist &=
    axf_action-type,
    text-decoration

fo_block.attlist &=
    axf_destination-type,
    height,
    max-height,
    max-width,
    min-height,
    min-width,
    text-decoration,
    width,
    axf.block.attlist

fo_block-container.attlist &=
    axf_column-count,
    axf_column-gap,
    axf_destination-type,
    axf.block.attlist

fo_footnote.attlist &=
    space-before

fo_list-block.attlist &=
    axf.block.attlist

fo_table.attlist &=
    axf.block.attlist

fo_table-and-caption.attlist &=
    axf.block.attlist

fo_table-cell.attlist &=
    axf_repeat-cell-content-at-break

fo_table-column.attlist &=
    id

#
# Extensions to property groups
#

common-border-padding-and-background-properties &=
    axf_border-radius,
    axf_border-top-left-radius,
    axf_border-top-right-radius,
    axf_border-bottom-left-radius,
    axf_border-bottom-right-radius


#
# Antenna House extension properties
#

# List of extension properties common to all block-level formatting
# objects
axf.block.attlist =
    axf_outline-expand,
    axf_outline-group,
    axf_outline-level,
    axf_outline-title,
    axf_outline-color,
    axf_outline-font-style,
    axf_outline-font-weight

# @axf:action-type
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.action-type
axf_action-type =
    ## Specifies the action of external link or form action
    attribute axf:action-type { 'gotor' | 'launch' | 'uri' | 'reset' | 'submit' | 'auto' }?

# @axf:border-radius
# @axf:border-top-left-radius
# @axf:border-top-right-radius
# @axf:border-bottom-left-radius
# @axf:border-bottom-right-radius
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.border-radius
axf_border-radius =
    ## Radii of the rounded corners: [<length>|<percentage>] [<length>|<percentage>]?
    attribute axf:border-radius { text }?
axf_border-top-left-radius =
    ## Radii of the top-left corner: [<length>|<percentage>] [<length>|<percentage>]?
    attribute axf:border-top-left-radius { text }?
axf_border-top-right-radius =
    ## Radii of the top-right corner: [<length>|<percentage>] [<length>|<percentage>]?
    attribute axf:border-top-right-radius { text }?
axf_border-bottom-left-radius =
    ## Radii of the bottom-left corner: [<length>|<percentage>] [<length>|<percentage>]?
    attribute axf:border-bottom-left-radius { text }?
axf_border-bottom-right-radius =
    ## Radii of the bottom-right corner: [<length>|<percentage>] [<length>|<percentage>]?
    attribute axf:border-bottom-right-radius { text }?

# @axf:bleed
# @axf:bleed-top
# @axf:bleed-bottom
# @axf:bleed-left
# @axf:bleed-right
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.bleed
axf_bleed =
    ## Wdth of the bleed region: <length>
    attribute axf:bleed { text }?
axf_bleed-top =
    ## Wdth of the top bleed region: <length>
    attribute axf:bleed-top { text }?
axf_bleed-bottom =
    ## Wdth of the bottom bleed region: <length>
    attribute axf:bleed-bottom { text }?
axf_bleed-left =
    ## Wdth of the left bleed region: <length>
    attribute axf:bleed-left { text }?
axf_bleed-right =
    ## Wdth of the right bleed region: <length>
    attribute axf:bleed-right { text }?

# @axf:column-count
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.column-count
axf_column-count =
    ## The number of columns: <number>
    attribute axf:column-count { text }?

# @axf:column-gap
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.column-gap
axf_column-gap =
    ## The gap between columns: <length> | <percentage>
    attribute axf:column-gap { text }?

# @axf:crop-area-visibility
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.crop-area-visibility
axf_crop-area-visibility =
    ## Whether to display the area beyond the finished page size
    attribute axf:crop-area-visibility { 'hidden' | 'visible' }?

# @axf:crop-offset
# @axf:crop-offset-top
# @axf:crop-offset-bottom
# @axf:crop-offset-left
# @axf:crop-offset-right
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.crop-offset
axf_crop-offset =
    ## Distance from the physical edges to the trim size of the output medium: <length>
    attribute axf:crop-offset { text }?
axf_crop-offset-top =
    ## Distance from the physical top edge to the trim size of the output medium: <length>
    attribute axf:crop-offset-top { text }?
axf_crop-offset-bottom =
    ## Distance from the physical bottom edge to the trim size of the output medium: <length>
    attribute axf:crop-offset-bottom { text }?
axf_crop-offset-left =
    ## Distance from the physical left edge to the trim size of the output medium: <length>
    attribute axf:crop-offset-left { text }?
axf_crop-offset-right =
    ## Distance from the physical right edge to the trim size of the output medium: <length>
    attribute axf:crop-offset-right { text }?

# @axf:destination-type
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.destination-type
axf_destination-type =
    ## The way a link opens in a link destination
    attribute axf:destination-type { text }?

# @axf:outline-expand
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.outline-expand
axf_outline-expand =
    ## Whether to display the lower hierarchy of bookmark items or not
    attribute axf:outline-expand { 'true' | 'false' }?

# @axf:outline-group
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.outline-group
axf_outline-group =
    ## Name of the output group: <string>
    attribute axf:outline-group { text }?

# @axf:outline-level
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.outline-level
axf_outline-level =
    ## The hierarchy level of bookmark items: <number>
    attribute axf:outline-level { text }?

# @axf:outline-title
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.outline-title
axf_outline-title =
    ## String which appears as a title of bookmark: <string>
    attribute axf:outline-title { text }?

# @axf:outline-color
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.outline-color
axf_outline-color =
    ## Color which appears as a title of bookmark
    attribute axf:outline-color { text }?

# @axf:outline-font-style
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf_outline-font-style
axf_outline-font-style =
    ## Font style which appears as a title of bookmark
    attribute axf:outline-font-style { 'normal' | 'italic' }?

# @axf:outline-font-weight
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf:outline-font-weight
axf_outline-font-weight =
    ## Font weight which appears as a title of bookmark
    attribute axf:outline-font-weight { 'normal' | 'bold' }?

# @axf:printer-marks
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.printer-marks
axf_printer-marks =
    ## Printing marks, such as a crop mark
    attribute axf:printer-marks { text }?

# @axf:printer-marks-line-color
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.printer-marks-line-color
axf_printer-marks-line-color =
    ## Line color of printer marks: <line> | auto
    attribute axf:printer-marks-line-color { text }?

# @axf:printer-marks-line-length
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.printer-marks-line-length
axf_printer-marks-line-length =
    ## Line length of printer marks: <length> | auto
    attribute axf:printer-marks-line-length { text }?

# @axf:printer-marks-line-width
# Line width of printer marks: <length> | auto
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.printer-marks-line-width
axf_printer-marks-line-width =
    ## Line width of printer marks
    attribute axf:printer-marks-line-width { text }?

# @axf:printer-marks-zero-margin
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.printer-marks-zero-margin
axf_printer-marks-zero-margin =
    ## Margin between the page and the printer marks when bleed is 0: <length> | auto
    attribute axf:printer-marks-zero-margin { text }?

# @axf:printer-marks-spine-width
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.printer-marks-spine-width
axf_printer-marks-spine-width =
    ## Spine width of the facing page: <length>
    attribute axf:printer-marks-spine-width { text }?

# @axf:repeat-cell-content-at-break
#
# http://www.antennahouse.com/product/ahf60/docs/ahf-ext.html#axf.repeat-cell-content-at-break
axf_repeat-cell-content-at-break =
    ## Whether to copy the contents of a cell when a cell breaks
    attribute axf:repeat-cell-content-at-break { 'true' | 'false' }?

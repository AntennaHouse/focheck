<?xml version="1.0" encoding="UTF-8"?>
<!--
  Autogenerated file.  Do not edit.
  Generated using 'focheck' version 0.2.0
  Created: 2015-06-04
  
  Copyright 2015 Antenna House, Inc.
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<grammar ns="http://www.w3.org/1999/XSL/Format" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <start>
    <ref name="fo_root"/>
  </start>
  <!-- FOs -->
  <define name="fo_root">
    <element name="root">
      <a:documentation>This is the top node of the formatting object tree. It holds an fo:layout-master-set formatting object (which holds all masters used in the document), an optional fo:declarations, an optional fo:bookmark-tree, and one or more fo:page-sequence or fo:page-sequence-wrapper objects. Each fo:page-sequence represents a sequence of pages that result from formatting the content children of the fo:page-sequence. An fo:page-sequence-wrapper can also occur as the child of fo:root. An fo:page-sequence-wrapper can contain zero or more fo:page-sequence objects or fo:page-sequence-wrappers. The fo:page-sequence-wrapper is used to specify inherited properties for the fo:page-sequence objects it wraps; it has no additional formatting semantics.</a:documentation>
      <ref name="fo_root.attlist"/>
      <ref name="fo_root.model"/>
    </element>
  </define>
  <define name="fo_root.model">
    <ref name="fo_layout-master-set"/>
    <optional>
      <ref name="fo_declarations"/>
    </optional>
    <optional>
      <ref name="fo_bookmark-tree"/>
    </optional>
    <oneOrMore>
      <choice>
        <ref name="fo_page-sequence"/>
        <ref name="fo_page-sequence-wrapper"/>
      </choice>
    </oneOrMore>
  </define>
  <define name="fo_root.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="media-usage"/>
  </define>
  <define name="fo_declarations">
    <element name="declarations">
      <a:documentation>The fo:declarations formatting object is used to group global declarations for a stylesheet.</a:documentation>
      <ref name="fo_declarations.model"/>
    </element>
  </define>
  <define name="fo_declarations.model">
    <zeroOrMore>
      <ref name="fo_color-profile"/>
    </zeroOrMore>
  </define>
  <define name="fo_color-profile">
    <element name="color-profile">
      <a:documentation>The fo:color-profile formatting object is used to declare an ICC Color Profile for a stylesheet. The color-profile is referenced again via the name specified in the "color-profile-name" property.</a:documentation>
      <ref name="fo_color-profile.attlist"/>
      <ref name="fo_color-profile.model"/>
    </element>
  </define>
  <define name="fo_color-profile.model">
    <empty/>
  </define>
  <define name="fo_color-profile.attlist">
    <ref name="color-profile-name"/>
    <ref name="rendering-intent"/>
    <ref name="src"/>
  </define>
  <define name="fo_page-sequence">
    <element name="page-sequence">
      <a:documentation>The fo:page-sequence formatting object is used to specify how to create a (sub-)sequence of pages within a document; for example, a chapter of a report. The content of these pages comes from flow children of the fo:page-sequence as assigned by the flow-map in effect for that fo:page-sequence. The layout of these pages comes from the fo:page-sequence-master or page-master referenced by the master-reference trait on the fo:page-sequence. The sequence of areas returned by each of the flow-object children of the fo:page-sequence are made descendants of the generated pages as described below.</a:documentation>
      <ref name="fo_page-sequence.attlist"/>
      <ref name="fo_page-sequence.model"/>
    </element>
  </define>
  <define name="fo_page-sequence.model">
    <optional>
      <ref name="fo_title"/>
    </optional>
    <optional>
      <ref name="fo_folio-prefix"/>
    </optional>
    <optional>
      <ref name="fo_folio-suffix"/>
    </optional>
    <zeroOrMore>
      <ref name="fo_static-content"/>
    </zeroOrMore>
    <oneOrMore>
      <ref name="fo_flow"/>
    </oneOrMore>
  </define>
  <define name="fo_page-sequence.attlist">
    <ref name="country"/>
    <ref name="flow-map-reference"/>
    <ref name="force-page-count"/>
    <ref name="format"/>
    <ref name="grouping-separator"/>
    <ref name="grouping-size"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="initial-page-number"/>
    <ref name="language"/>
    <ref name="letter-value"/>
    <ref name="master-reference"/>
    <ref name="reference-orientation"/>
    <ref name="writing-mode"/>
  </define>
  <define name="fo_page-sequence-wrapper">
    <element name="page-sequence-wrapper">
      <a:documentation>The fo:page-sequence-wrapper formatting object is used to specify inherited properties for a group of fo:page-sequence formatting objects.</a:documentation>
      <ref name="fo_page-sequence-wrapper.attlist"/>
      <ref name="fo_page-sequence-wrapper.model"/>
    </element>
  </define>
  <define name="fo_page-sequence-wrapper.model">
    <zeroOrMore>
      <choice>
        <ref name="fo_page-sequence"/>
        <ref name="fo_page-sequence-wrapper"/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="fo_page-sequence-wrapper.attlist">
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
  </define>
  <define name="fo_layout-master-set">
    <element name="layout-master-set">
      <a:documentation>The fo:layout-master-set is a wrapper around all masters used in the document. This includes page-sequence-masters, page-masters, and flow-maps.</a:documentation>
      <ref name="fo_layout-master-set.model"/>
    </element>
  </define>
  <define name="fo_layout-master-set.model">
    <oneOrMore>
      <choice>
        <ref name="fo_simple-page-master"/>
        <ref name="fo_page-sequence-master"/>
        <ref name="fo_flow-map"/>
      </choice>
    </oneOrMore>
  </define>
  <define name="fo_page-sequence-master">
    <element name="page-sequence-master">
      <a:documentation>The fo:page-sequence-master is used to specify the constraints on and the order in which a given set of page-masters will be used in generating a sequence of pages. Pages are automatically generated when the fo:page-sequence-master is used in formatting an fo:page-sequence.</a:documentation>
      <ref name="fo_page-sequence-master.attlist"/>
      <ref name="fo_page-sequence-master.model"/>
    </element>
  </define>
  <define name="fo_page-sequence-master.model">
    <oneOrMore>
      <choice>
        <ref name="fo_single-page-master-reference"/>
        <ref name="fo_repeatable-page-master-reference"/>
        <ref name="fo_repeatable-page-master-alternatives"/>
      </choice>
    </oneOrMore>
  </define>
  <define name="fo_page-sequence-master.attlist">
    <ref name="master-name"/>
  </define>
  <define name="fo_single-page-master-reference">
    <element name="single-page-master-reference">
      <a:documentation>An fo:single-page-master-reference is the simplest sub-sequence-specifier. It specifies a sub-sequence consisting of a single instance of a single page-master. It is used to specify the use of a particular page-master at a given point in the sequence of pages that would be generated using the fo:page-sequence-master that is the parent of the fo:single-page-master-reference.</a:documentation>
      <ref name="fo_single-page-master-reference.attlist"/>
      <ref name="fo_single-page-master-reference.model"/>
    </element>
  </define>
  <define name="fo_single-page-master-reference.model">
    <empty/>
  </define>
  <define name="fo_single-page-master-reference.attlist">
    <ref name="master-reference"/>
  </define>
  <define name="fo_repeatable-page-master-reference">
    <element name="repeatable-page-master-reference">
      <a:documentation>An fo:repeatable-page-master-reference is the next simplest sub-sequence-specifier. It specifies a sub-sequence consisting of repeated instances of a single page-master. The number of repetitions may be bounded or potentially unbounded.</a:documentation>
      <ref name="fo_repeatable-page-master-reference.attlist"/>
      <ref name="fo_repeatable-page-master-reference.model"/>
    </element>
  </define>
  <define name="fo_repeatable-page-master-reference.model">
    <empty/>
  </define>
  <define name="fo_repeatable-page-master-reference.attlist">
    <ref name="master-reference"/>
    <ref name="maximum-repeats"/>
  </define>
  <define name="fo_repeatable-page-master-alternatives">
    <element name="repeatable-page-master-alternatives">
      <a:documentation>The fo:repeatable-page-master-alternatives formatting object is the most complex sub-sequence-specifier. It specifies a sub-sequence consisting of repeated instances of a set of alternative page-masters. The number of repetitions may be bounded or potentially unbounded. Which of the alternative page-masters is used at any point in the sequence depends on the evaluation of a condition on the use of the alternative. Typical conditions include, testing whether the page which is generated using the alternative is the first or last page in a page-sequence or is the page blank. The full set of conditions allows different page-masters to be used for the first page, for odd and even pages, for blank pages, etc.</a:documentation>
      <ref name="fo_repeatable-page-master-alternatives.attlist"/>
      <ref name="fo_repeatable-page-master-alternatives.model"/>
    </element>
  </define>
  <define name="fo_repeatable-page-master-alternatives.model">
    <oneOrMore>
      <ref name="fo_conditional-page-master-reference"/>
    </oneOrMore>
  </define>
  <define name="fo_repeatable-page-master-alternatives.attlist">
    <ref name="maximum-repeats"/>
  </define>
  <define name="fo_conditional-page-master-reference">
    <element name="conditional-page-master-reference">
      <a:documentation>The fo:conditional-page-master-reference is used to identify a page-master that is to be used when the conditions on its use are satisfied. This allows different page-masters to be used, for example, for even and odd pages, for the first page in a page-sequence, or for blank pages. This usage is typical in chapters of a book or report where the first page has a different layout than the rest of the chapter and the headings and footings on even and odd pages may be different as well.</a:documentation>
      <ref name="fo_conditional-page-master-reference.attlist"/>
      <ref name="fo_conditional-page-master-reference.model"/>
    </element>
  </define>
  <define name="fo_conditional-page-master-reference.model">
    <empty/>
  </define>
  <define name="fo_conditional-page-master-reference.attlist">
    <ref name="blank-or-not-blank"/>
    <ref name="master-reference"/>
    <ref name="odd-or-even"/>
    <ref name="page-position"/>
  </define>
  <define name="fo_simple-page-master">
    <element name="simple-page-master">
      <a:documentation>The fo:simple-page-master is used in the generation of pages and specifies the geometry of the page. The page is subdivided into regions: one or more region-body, and up to four other regions: region-before, region-after, region-start, and region-end.</a:documentation>
      <ref name="fo_simple-page-master.attlist"/>
      <ref name="fo_simple-page-master.model"/>
    </element>
  </define>
  <define name="fo_simple-page-master.model">
    <oneOrMore>
      <ref name="fo_region-body"/>
    </oneOrMore>
    <optional>
      <ref name="fo_region-before"/>
    </optional>
    <optional>
      <ref name="fo_region-after"/>
    </optional>
    <optional>
      <ref name="fo_region-start"/>
    </optional>
    <optional>
      <ref name="fo_region-end"/>
    </optional>
  </define>
  <define name="fo_simple-page-master.attlist">
    <ref name="common-margin-properties-block"/>
    <ref name="master-name"/>
    <ref name="page-height"/>
    <ref name="page-width"/>
    <ref name="reference-orientation"/>
    <ref name="size"/>
    <ref name="writing-mode"/>
  </define>
  <define name="fo_region-body">
    <element name="region-body">
      <a:documentation>Used in constructing a simple-page-master. This region specifies a viewport/reference pair that is located in the "center" of the fo:simple-page-master. The overflow trait controls how much of the underlying region-reference-area is visible; that is, whether the region-reference-area is clipped by its parent region-viewport-area.</a:documentation>
      <ref name="fo_region-body.attlist"/>
      <ref name="fo_region-body.model"/>
    </element>
  </define>
  <define name="fo_region-body.model">
    <empty/>
  </define>
  <define name="fo_region-body.attlist">
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-margin-properties-block"/>
    <ref name="clip"/>
    <ref name="column-count"/>
    <ref name="column-gap"/>
    <ref name="display-align"/>
    <ref name="overflow"/>
    <ref name="reference-orientation"/>
    <ref name="region-name"/>
    <ref name="writing-mode"/>
  </define>
  <define name="fo_region-before">
    <element name="region-before">
      <a:documentation>Used in constructing a simple-page-master. This region specifies a viewport/reference pair that is located on the "before" side of the page-reference-area. In lr-tb writing-mode, this region corresponds to the header region. The overflow trait controls how much of the underlying region-reference-area is visible; that is, whether the region-reference-area is clipped by its parent region-viewport-area.</a:documentation>
      <ref name="fo_region-before.attlist"/>
      <ref name="fo_region-before.model"/>
    </element>
  </define>
  <define name="fo_region-before.model">
    <empty/>
  </define>
  <define name="fo_region-before.attlist">
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="clip"/>
    <ref name="display-align"/>
    <ref name="extent"/>
    <ref name="overflow"/>
    <ref name="precedence"/>
    <ref name="reference-orientation"/>
    <ref name="region-name"/>
    <ref name="writing-mode"/>
  </define>
  <define name="fo_region-after">
    <element name="region-after">
      <a:documentation>Used in constructing a simple-page-master. This region specifies a viewport/reference pair that is located on the "after" side of the page-reference-area. In lr-tb writing-mode, this region corresponds to the footer region. The overflow trait controls how much of the underlying region-reference-area is visible; that is, whether the region-reference-area is clipped by its parent region-viewport-area.</a:documentation>
      <ref name="fo_region-after.attlist"/>
      <ref name="fo_region-after.model"/>
    </element>
  </define>
  <define name="fo_region-after.model">
    <empty/>
  </define>
  <define name="fo_region-after.attlist">
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="clip"/>
    <ref name="display-align"/>
    <ref name="extent"/>
    <ref name="overflow"/>
    <ref name="precedence"/>
    <ref name="reference-orientation"/>
    <ref name="region-name"/>
    <ref name="writing-mode"/>
  </define>
  <define name="fo_region-start">
    <element name="region-start">
      <a:documentation>Used in constructing a simple-page-master. This region specifies a viewport/reference pair that is located on the "start" side of the page-reference-area. In lr-tb writing-mode, this region corresponds to a left sidebar. The overflow trait controls how much of the underlying region-reference-area is visible; that is, whether the region-reference-area is clipped by its parent region-viewport-area.</a:documentation>
      <ref name="fo_region-start.attlist"/>
      <ref name="fo_region-start.model"/>
    </element>
  </define>
  <define name="fo_region-start.model">
    <empty/>
  </define>
  <define name="fo_region-start.attlist">
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="clip"/>
    <ref name="display-align"/>
    <ref name="extent"/>
    <ref name="overflow"/>
    <ref name="reference-orientation"/>
    <ref name="region-name"/>
    <ref name="writing-mode"/>
  </define>
  <define name="fo_region-end">
    <element name="region-end">
      <a:documentation>Used in constructing a simple-page-master. This region specifies a viewport/reference pair that is located on the "end" side of the page-reference-area. In lr-tb writing-mode, this region corresponds to a right sidebar. The overflow trait controls how much of the underlying region-reference-area is visible; that is, whether the region-reference-area is clipped by its parent region-viewport-area.</a:documentation>
      <ref name="fo_region-end.attlist"/>
      <ref name="fo_region-end.model"/>
    </element>
  </define>
  <define name="fo_region-end.model">
    <empty/>
  </define>
  <define name="fo_region-end.attlist">
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="clip"/>
    <ref name="display-align"/>
    <ref name="extent"/>
    <ref name="overflow"/>
    <ref name="reference-orientation"/>
    <ref name="region-name"/>
    <ref name="writing-mode"/>
  </define>
  <define name="fo_flow">
    <element name="flow">
      <a:documentation>The content of the fo:flow formatting object is a sequence of flow objects that provides the flowing text content that is distributed into pages.</a:documentation>
      <ref name="fo_flow.attlist"/>
      <ref name="fo_flow.model"/>
    </element>
  </define>
  <define name="fo_flow.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <oneOrMore>
        <choice>
          <ref name="block.fo.list"/>
          <ref name="neutral.fo.list.block"/>
        </choice>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_flow.attlist">
    <ref name="flow-name"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
  </define>
  <define name="fo_static-content">
    <element name="static-content">
      <a:documentation>The fo:static-content formatting object holds a sequence or a tree of formatting objects that is to be presented in a single region or repeated in like-named regions on one or more pages in the page-sequence. Its common use is for repeating or running headers and footers.</a:documentation>
      <ref name="fo_static-content.attlist"/>
      <ref name="fo_static-content.model"/>
    </element>
  </define>
  <define name="fo_static-content.model">
    <interleave>
      <oneOrMore>
        <choice>
          <ref name="block.fo.list"/>
          <ref name="neutral.fo.list.block"/>
        </choice>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_static-content.attlist">
    <ref name="flow-name"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
  </define>
  <define name="fo_title">
    <element name="title">
      <a:documentation>The fo:title formatting object is used to associate a title with a given page-sequence. This title may be used by an interactive User Agent to identify the pages. For example, the content of the fo:title can be formatted and displayed in a "title" window or in a "tool tip".</a:documentation>
      <ref name="fo_title.attlist"/>
      <ref name="fo_title.model"/>
    </element>
  </define>
  <define name="fo_title.model">
    <interleave>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="inline.fo.list"/>
          <ref name="neutral.fo.list.inline"/>
        </choice>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="inline.out-of-line.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_title.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-font-properties"/>
    <ref name="common-margin-properties-inline"/>
    <ref name="color"/>
    <ref name="line-height"/>
    <ref name="visibility"/>
  </define>
  <define name="fo_flow-map">
    <element name="flow-map">
      <a:documentation>The fo:flow-map is used to specify the assignment of flows to regions.</a:documentation>
      <ref name="fo_flow-map.attlist"/>
      <ref name="fo_flow-map.model"/>
    </element>
  </define>
  <define name="fo_flow-map.model">
    <oneOrMore>
      <ref name="fo_flow-assignment"/>
    </oneOrMore>
  </define>
  <define name="fo_flow-map.attlist">
    <ref name="flow-map-name"/>
  </define>
  <define name="fo_flow-assignment">
    <element name="flow-assignment">
      <a:documentation>The fo:flow-assignment is used to specify the assignment of one sequence of flows to a sequence of regions.</a:documentation>
      <ref name="fo_flow-assignment.model"/>
    </element>
  </define>
  <define name="fo_flow-assignment.model">
    <ref name="fo_flow-source-list"/>
    <ref name="fo_flow-target-list"/>
  </define>
  <define name="fo_flow-source-list">
    <element name="flow-source-list">
      <a:documentation>The fo:flow-source-list is used to specify the sequence of flows to assign in a particular fo:flow-assignment.</a:documentation>
      <ref name="fo_flow-source-list.model"/>
    </element>
  </define>
  <define name="fo_flow-source-list.model">
    <oneOrMore>
      <ref name="fo_flow-name-specifier"/>
    </oneOrMore>
  </define>
  <define name="fo_flow-name-specifier">
    <element name="flow-name-specifier">
      <a:documentation>The fo:flow-name-specifier is used to specify one flow in a source-list.</a:documentation>
      <ref name="fo_flow-name-specifier.attlist"/>
      <ref name="fo_flow-name-specifier.model"/>
    </element>
  </define>
  <define name="fo_flow-name-specifier.model">
    <empty/>
  </define>
  <define name="fo_flow-name-specifier.attlist">
    <ref name="flow-name-reference"/>
  </define>
  <define name="fo_flow-target-list">
    <element name="flow-target-list">
      <a:documentation>The fo:flow-target-list is used to specify the sequence of regions to which flows are assigned in a particular fo:flow-assignment.</a:documentation>
      <ref name="fo_flow-target-list.model"/>
    </element>
  </define>
  <define name="fo_flow-target-list.model">
    <oneOrMore>
      <ref name="fo_region-name-specifier"/>
    </oneOrMore>
  </define>
  <define name="fo_region-name-specifier">
    <element name="region-name-specifier">
      <a:documentation>The fo:region-name-specifier is used to specify one region in a target-list.</a:documentation>
      <ref name="fo_region-name-specifier.attlist"/>
      <ref name="fo_region-name-specifier.model"/>
    </element>
  </define>
  <define name="fo_region-name-specifier.model">
    <empty/>
  </define>
  <define name="fo_region-name-specifier.attlist">
    <ref name="region-name-reference"/>
  </define>
  <define name="fo_block">
    <element name="block">
      <a:documentation>The fo:block formatting object is commonly used for formatting paragraphs, titles, headlines, figure and table captions, etc.</a:documentation>
      <ref name="fo_block.attlist"/>
      <ref name="fo_block.model"/>
    </element>
  </define>
  <define name="fo_block.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <optional>
      <ref name="fo_initial-property-set"/>
    </optional>
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="block.fo.list"/>
            <ref name="neutral.fo.list"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_block.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-font-properties"/>
    <ref name="common-hyphenation-properties"/>
    <ref name="common-margin-properties-block"/>
    <ref name="break-after"/>
    <ref name="break-before"/>
    <ref name="clear"/>
    <ref name="color"/>
    <ref name="hyphenation-keep"/>
    <ref name="hyphenation-ladder-count"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="intrusion-displace"/>
    <ref name="keep-together"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="last-line-end-indent"/>
    <ref name="line-height"/>
    <ref name="line-height-shift-adjustment"/>
    <ref name="line-stacking-strategy"/>
    <ref name="linefeed-treatment"/>
    <ref name="orphans"/>
    <ref name="page-break-after"/>
    <ref name="page-break-before"/>
    <ref name="span"/>
    <ref name="text-align"/>
    <ref name="text-align-last"/>
    <ref name="text-altitude"/>
    <ref name="text-depth"/>
    <ref name="text-indent"/>
    <ref name="visibility"/>
    <ref name="white-space-collapse"/>
    <ref name="white-space-treatment"/>
    <ref name="widows"/>
    <ref name="wrap-option"/>
  </define>
  <define name="fo_block-container">
    <element name="block-container">
      <a:documentation>The fo:block-container flow object is used to generate a block-level reference-area, typically containing text blocks with a different writing-mode. In addition, it can also be used with a different reference-orientation to rotate its content.</a:documentation>
      <ref name="fo_block-container.attlist"/>
      <ref name="fo_block-container.model"/>
    </element>
  </define>
  <define name="fo_block-container.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <oneOrMore>
        <choice>
          <ref name="block.fo.list"/>
          <ref name="neutral.fo.list.block"/>
        </choice>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_block-container.attlist">
    <ref name="common-absolute-position-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-margin-properties-block"/>
    <ref name="block-progression-dimension"/>
    <ref name="break-after"/>
    <ref name="break-before"/>
    <ref name="clear"/>
    <ref name="clip"/>
    <ref name="display-align"/>
    <ref name="height"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="inline-progression-dimension"/>
    <ref name="intrusion-displace"/>
    <ref name="keep-together"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="max-height"/>
    <ref name="max-width"/>
    <ref name="min-height"/>
    <ref name="min-width"/>
    <ref name="overflow"/>
    <ref name="page-break-after"/>
    <ref name="page-break-before"/>
    <ref name="reference-orientation"/>
    <ref name="span"/>
    <ref name="width"/>
    <ref name="writing-mode"/>
    <ref name="z-index"/>
  </define>
  <define name="fo_bidi-override">
    <element name="bidi-override">
      <a:documentation>The fo:bidi-override formatting object is used when the Unicode BIDI algorithm fails. It forces a string of text to be written in a specific direction.</a:documentation>
      <ref name="fo_bidi-override.attlist"/>
      <ref name="fo_bidi-override.model"/>
    </element>
  </define>
  <define name="fo_bidi-override.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="block.fo.list"/>
            <ref name="neutral.fo.list"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_bidi-override.attlist">
    <ref name="common-relative-position-properties"/>
    <ref name="common-font-properties"/>
    <ref name="color"/>
    <ref name="direction"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="letter-spacing"/>
    <ref name="line-height"/>
    <ref name="score-spaces"/>
    <ref name="unicode-bidi"/>
    <ref name="word-spacing"/>
  </define>
  <define name="fo_character">
    <element name="character">
      <a:documentation>The fo:character flow object represents a character that is mapped to a glyph for presentation. It is an atomic unit to the formatter.</a:documentation>
      <ref name="fo_character.attlist"/>
      <ref name="fo_character.model"/>
    </element>
  </define>
  <define name="fo_character.model">
    <empty/>
  </define>
  <define name="fo_character.attlist">
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-font-properties"/>
    <ref name="common-hyphenation-properties"/>
    <ref name="common-margin-properties-inline"/>
    <ref name="alignment-adjust"/>
    <ref name="alignment-baseline"/>
    <ref name="baseline-shift"/>
    <ref name="character"/>
    <ref name="color"/>
    <ref name="dominant-baseline"/>
    <ref name="glyph-orientation-horizontal"/>
    <ref name="glyph-orientation-vertical"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="letter-spacing"/>
    <ref name="line-height"/>
    <ref name="score-spaces"/>
    <ref name="suppress-at-line-break"/>
    <ref name="text-altitude"/>
    <ref name="text-decoration"/>
    <ref name="text-depth"/>
    <ref name="text-shadow"/>
    <ref name="text-transform"/>
    <ref name="treat-as-word-space"/>
    <ref name="vertical-align"/>
    <ref name="visibility"/>
    <ref name="word-spacing"/>
  </define>
  <define name="fo_initial-property-set">
    <element name="initial-property-set">
      <a:documentation>The fo:initial-property-set auxiliary formatting object specifies formatting properties for the first line of an fo:block.</a:documentation>
      <ref name="fo_initial-property-set.attlist"/>
      <ref name="fo_initial-property-set.model"/>
    </element>
  </define>
  <define name="fo_initial-property-set.model">
    <empty/>
  </define>
  <define name="fo_initial-property-set.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-font-properties"/>
    <ref name="color"/>
    <ref name="letter-spacing"/>
    <ref name="line-height"/>
    <ref name="score-spaces"/>
    <ref name="text-decoration"/>
    <ref name="text-shadow"/>
    <ref name="text-transform"/>
    <ref name="word-spacing"/>
  </define>
  <define name="fo_external-graphic">
    <element name="external-graphic">
      <a:documentation>The fo:external-graphic flow object is used for a graphic where the graphics data resides outside of the fo:element tree.</a:documentation>
      <ref name="fo_external-graphic.attlist"/>
      <ref name="fo_external-graphic.model"/>
    </element>
  </define>
  <define name="fo_external-graphic.model">
    <empty/>
  </define>
  <define name="fo_external-graphic.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-margin-properties-inline"/>
    <ref name="alignment-adjust"/>
    <ref name="alignment-baseline"/>
    <ref name="allowed-height-scale"/>
    <ref name="allowed-width-scale"/>
    <ref name="baseline-shift"/>
    <ref name="block-progression-dimension"/>
    <ref name="clip"/>
    <ref name="content-height"/>
    <ref name="content-type"/>
    <ref name="content-width"/>
    <ref name="display-align"/>
    <ref name="dominant-baseline"/>
    <ref name="height"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="inline-progression-dimension"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="line-height"/>
    <ref name="max-height"/>
    <ref name="max-width"/>
    <ref name="min-height"/>
    <ref name="min-width"/>
    <ref name="overflow"/>
    <ref name="scaling"/>
    <ref name="scaling-method"/>
    <ref name="src"/>
    <ref name="text-align"/>
    <ref name="vertical-align"/>
    <ref name="width"/>
  </define>
  <define name="fo_instream-foreign-object">
    <element name="instream-foreign-object">
      <a:documentation>The fo:instream-foreign-object flow object is used for an inline graphic or other "generic" object where the object data resides as descendants of the fo:instream-foreign-object, typically as an XML element subtree in a non-XSL namespace.</a:documentation>
      <ref name="fo_instream-foreign-object.attlist"/>
      <ref name="fo_instream-foreign-object.model"/>
    </element>
  </define>
  <define name="fo_instream-foreign-object.model">
    <interleave>
      <ref name="non-xsl"/>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_instream-foreign-object.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-margin-properties-inline"/>
    <ref name="alignment-adjust"/>
    <ref name="alignment-baseline"/>
    <ref name="allowed-height-scale"/>
    <ref name="allowed-width-scale"/>
    <ref name="baseline-shift"/>
    <ref name="block-progression-dimension"/>
    <ref name="clip"/>
    <ref name="content-height"/>
    <ref name="content-type"/>
    <ref name="content-width"/>
    <ref name="display-align"/>
    <ref name="dominant-baseline"/>
    <ref name="height"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="inline-progression-dimension"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="line-height"/>
    <ref name="max-height"/>
    <ref name="max-width"/>
    <ref name="min-height"/>
    <ref name="min-width"/>
    <ref name="overflow"/>
    <ref name="scaling"/>
    <ref name="scaling-method"/>
    <ref name="text-align"/>
    <ref name="vertical-align"/>
    <ref name="width"/>
  </define>
  <define name="fo_inline">
    <element name="inline">
      <a:documentation>The fo:inline formatting object is commonly used for formatting a portion of text with a background or enclosing it in a border.</a:documentation>
      <ref name="fo_inline.attlist"/>
      <ref name="fo_inline.model"/>
    </element>
  </define>
  <define name="fo_inline.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="block.fo.list"/>
            <ref name="neutral.fo.list"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_inline.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-font-properties"/>
    <ref name="common-margin-properties-inline"/>
    <ref name="alignment-adjust"/>
    <ref name="alignment-baseline"/>
    <ref name="baseline-shift"/>
    <ref name="block-progression-dimension"/>
    <ref name="color"/>
    <ref name="dominant-baseline"/>
    <ref name="height"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="inline-progression-dimension"/>
    <ref name="keep-together"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="line-height"/>
    <ref name="max-height"/>
    <ref name="max-width"/>
    <ref name="min-height"/>
    <ref name="min-width"/>
    <ref name="text-decoration"/>
    <ref name="vertical-align"/>
    <ref name="visibility"/>
    <ref name="width"/>
    <ref name="wrap-option"/>
  </define>
  <define name="fo_inline-container">
    <element name="inline-container">
      <a:documentation>The fo:inline-container flow object is used to generate an inline reference-area, typically containing text blocks with a different writing-mode.</a:documentation>
      <ref name="fo_inline-container.attlist"/>
      <ref name="fo_inline-container.model"/>
    </element>
  </define>
  <define name="fo_inline-container.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <oneOrMore>
        <choice>
          <ref name="block.fo.list"/>
          <ref name="neutral.fo.list.block"/>
        </choice>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_inline-container.attlist">
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-margin-properties-inline"/>
    <ref name="alignment-adjust"/>
    <ref name="alignment-baseline"/>
    <ref name="baseline-shift"/>
    <ref name="block-progression-dimension"/>
    <ref name="clip"/>
    <ref name="display-align"/>
    <ref name="dominant-baseline"/>
    <ref name="height"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="inline-progression-dimension"/>
    <ref name="keep-together"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="line-height"/>
    <ref name="max-height"/>
    <ref name="max-width"/>
    <ref name="min-height"/>
    <ref name="min-width"/>
    <ref name="overflow"/>
    <ref name="reference-orientation"/>
    <ref name="vertical-align"/>
    <ref name="width"/>
    <ref name="writing-mode"/>
  </define>
  <define name="fo_leader">
    <element name="leader">
      <a:documentation>The fo:leader formatting object is often used:</a:documentation>
      <ref name="fo_leader.attlist"/>
      <ref name="fo_leader.model"/>
    </element>
  </define>
  <define name="fo_leader.model">
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="neutral.fo.list.inline"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_leader.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-font-properties"/>
    <ref name="common-margin-properties-inline"/>
    <ref name="alignment-adjust"/>
    <ref name="alignment-baseline"/>
    <ref name="baseline-shift"/>
    <ref name="color"/>
    <ref name="dominant-baseline"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="leader-alignment"/>
    <ref name="leader-length"/>
    <ref name="leader-pattern"/>
    <ref name="leader-pattern-width"/>
    <ref name="letter-spacing"/>
    <ref name="line-height"/>
    <ref name="rule-style"/>
    <ref name="rule-thickness"/>
    <ref name="text-altitude"/>
    <ref name="text-depth"/>
    <ref name="text-shadow"/>
    <ref name="vertical-align"/>
    <ref name="visibility"/>
    <ref name="word-spacing"/>
  </define>
  <define name="fo_page-number">
    <element name="page-number">
      <a:documentation>The fo:page-number formatting object is used to obtain an inline-area whose content is the page-number for the page on which the inline-area is placed.</a:documentation>
      <ref name="fo_page-number.attlist"/>
      <ref name="fo_page-number.model"/>
    </element>
  </define>
  <define name="fo_page-number.model">
    <empty/>
  </define>
  <define name="fo_page-number.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-font-properties"/>
    <ref name="common-margin-properties-inline"/>
    <ref name="alignment-adjust"/>
    <ref name="alignment-baseline"/>
    <ref name="baseline-shift"/>
    <ref name="dominant-baseline"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="letter-spacing"/>
    <ref name="line-height"/>
    <ref name="score-spaces"/>
    <ref name="text-altitude"/>
    <ref name="text-decoration"/>
    <ref name="text-depth"/>
    <ref name="text-shadow"/>
    <ref name="text-transform"/>
    <ref name="vertical-align"/>
    <ref name="visibility"/>
    <ref name="word-spacing"/>
    <ref name="wrap-option"/>
  </define>
  <define name="fo_page-number-citation">
    <element name="page-number-citation">
      <a:documentation>The fo:page-number-citation is used to reference the page-number for the page containing the first normal area returned by the cited formatting object.</a:documentation>
      <ref name="fo_page-number-citation.attlist"/>
      <ref name="fo_page-number-citation.model"/>
    </element>
  </define>
  <define name="fo_page-number-citation.model">
    <empty/>
  </define>
  <define name="fo_page-number-citation.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-font-properties"/>
    <ref name="common-margin-properties-inline"/>
    <ref name="alignment-adjust"/>
    <ref name="alignment-baseline"/>
    <ref name="baseline-shift"/>
    <ref name="dominant-baseline"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="letter-spacing"/>
    <ref name="line-height"/>
    <ref name="ref-id"/>
    <ref name="score-spaces"/>
    <ref name="text-altitude"/>
    <ref name="text-decoration"/>
    <ref name="text-depth"/>
    <ref name="text-shadow"/>
    <ref name="text-transform"/>
    <ref name="vertical-align"/>
    <ref name="visibility"/>
    <ref name="word-spacing"/>
    <ref name="wrap-option"/>
  </define>
  <define name="fo_page-number-citation-last">
    <element name="page-number-citation-last">
      <a:documentation>The fo:page-number-citation-last is used to reference the page-number for the last page containing an area that is (a) returned by the cited formatting object and (b) has an area-class that is consistent with the specified page-citation-strategy.</a:documentation>
      <ref name="fo_page-number-citation-last.attlist"/>
      <ref name="fo_page-number-citation-last.model"/>
    </element>
  </define>
  <define name="fo_page-number-citation-last.model">
    <empty/>
  </define>
  <define name="fo_page-number-citation-last.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-font-properties"/>
    <ref name="common-margin-properties-inline"/>
    <ref name="alignment-adjust"/>
    <ref name="alignment-baseline"/>
    <ref name="baseline-shift"/>
    <ref name="dominant-baseline"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="letter-spacing"/>
    <ref name="line-height"/>
    <ref name="page-citation-strategy"/>
    <ref name="ref-id"/>
    <ref name="score-spaces"/>
    <ref name="text-altitude"/>
    <ref name="text-decoration"/>
    <ref name="text-depth"/>
    <ref name="text-shadow"/>
    <ref name="text-transform"/>
    <ref name="vertical-align"/>
    <ref name="visibility"/>
    <ref name="word-spacing"/>
    <ref name="wrap-option"/>
  </define>
  <define name="fo_folio-prefix">
    <element name="folio-prefix">
      <a:documentation>The fo:folio-prefix formatting object specifies a static prefix for the folio numbers within a page-sequence.</a:documentation>
      <ref name="fo_folio-prefix.model"/>
    </element>
  </define>
  <define name="fo_folio-prefix.model">
    <interleave>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="inline.fo.list"/>
          <ref name="neutral.fo.list.inline"/>
        </choice>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="inline.out-of-line.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_folio-suffix">
    <element name="folio-suffix">
      <a:documentation>The fo:folio-suffix formatting object specifies a static suffix for the folio numbers within a page-sequence.</a:documentation>
      <ref name="fo_folio-suffix.model"/>
    </element>
  </define>
  <define name="fo_folio-suffix.model">
    <interleave>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="inline.fo.list"/>
          <ref name="neutral.fo.list.inline"/>
        </choice>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="inline.out-of-line.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_scaling-value-citation">
    <element name="scaling-value-citation">
      <a:documentation>The fo:scaling-value-citation is used to obtain the scale-factor applied to the cited fo:external-graphic.</a:documentation>
      <ref name="fo_scaling-value-citation.attlist"/>
      <ref name="fo_scaling-value-citation.model"/>
    </element>
  </define>
  <define name="fo_scaling-value-citation.model">
    <empty/>
  </define>
  <define name="fo_scaling-value-citation.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-font-properties"/>
    <ref name="common-margin-properties-inline"/>
    <ref name="alignment-adjust"/>
    <ref name="alignment-baseline"/>
    <ref name="baseline-shift"/>
    <ref name="country"/>
    <ref name="dominant-baseline"/>
    <ref name="format"/>
    <ref name="grouping-separator"/>
    <ref name="grouping-size"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="intrinsic-scale-value"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="language"/>
    <ref name="letter-spacing"/>
    <ref name="letter-value"/>
    <ref name="line-height"/>
    <ref name="ref-id"/>
    <ref name="scale-option"/>
    <ref name="score-spaces"/>
    <ref name="text-altitude"/>
    <ref name="text-decoration"/>
    <ref name="text-depth"/>
    <ref name="text-shadow"/>
    <ref name="text-transform"/>
    <ref name="vertical-align"/>
    <ref name="visibility"/>
    <ref name="word-spacing"/>
    <ref name="wrap-option"/>
  </define>
  <define name="fo_table-and-caption">
    <element name="table-and-caption">
      <a:documentation>The fo:table-and-caption flow object is used for formatting a table together with its caption.</a:documentation>
      <ref name="fo_table-and-caption.attlist"/>
      <ref name="fo_table-and-caption.model"/>
    </element>
  </define>
  <define name="fo_table-and-caption.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <group>
        <optional>
          <ref name="fo_table-caption"/>
        </optional>
        <ref name="fo_table"/>
      </group>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_table-and-caption.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-margin-properties-block"/>
    <ref name="break-after"/>
    <ref name="break-before"/>
    <ref name="caption-side"/>
    <ref name="clear"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="intrusion-displace"/>
    <ref name="keep-together"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="page-break-after"/>
    <ref name="page-break-before"/>
    <ref name="text-align"/>
  </define>
  <define name="fo_table">
    <element name="table">
      <a:documentation>The fo:table flow object is used for formatting the tabular material of a table.</a:documentation>
      <ref name="fo_table.attlist"/>
      <ref name="fo_table.model"/>
    </element>
  </define>
  <define name="fo_table.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <group>
        <zeroOrMore>
          <ref name="fo_table-column"/>
        </zeroOrMore>
        <optional>
          <ref name="fo_table-header"/>
        </optional>
        <optional>
          <ref name="fo_table-footer"/>
        </optional>
        <oneOrMore>
          <ref name="fo_table-body"/>
        </oneOrMore>
      </group>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_table.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-margin-properties-block"/>
    <ref name="block-progression-dimension"/>
    <ref name="border-after-precedence"/>
    <ref name="border-before-precedence"/>
    <ref name="border-collapse"/>
    <ref name="border-end-precedence"/>
    <ref name="border-separation"/>
    <ref name="border-start-precedence"/>
    <ref name="break-after"/>
    <ref name="break-before"/>
    <ref name="clear"/>
    <ref name="height"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="inline-progression-dimension"/>
    <ref name="intrusion-displace"/>
    <ref name="keep-together"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="max-height"/>
    <ref name="max-width"/>
    <ref name="min-height"/>
    <ref name="min-width"/>
    <ref name="page-break-after"/>
    <ref name="page-break-before"/>
    <ref name="table-layout"/>
    <ref name="table-omit-footer-at-break"/>
    <ref name="table-omit-header-at-break"/>
    <ref name="width"/>
    <ref name="writing-mode"/>
  </define>
  <define name="fo_table-column">
    <element name="table-column">
      <a:documentation>The fo:table-column auxiliary formatting object specifies characteristics applicable to table cells that have the same column and span. The most important property is the "column-width" property.</a:documentation>
      <ref name="fo_table-column.attlist"/>
      <ref name="fo_table-column.model"/>
    </element>
  </define>
  <define name="fo_table-column.model">
    <empty/>
  </define>
  <define name="fo_table-column.attlist">
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="border-after-precedence"/>
    <ref name="border-before-precedence"/>
    <ref name="border-end-precedence"/>
    <ref name="border-start-precedence"/>
    <ref name="column-number"/>
    <ref name="column-width"/>
    <ref name="number-columns-repeated"/>
    <ref name="number-columns-spanned"/>
    <ref name="visibility"/>
  </define>
  <define name="fo_table-caption">
    <element name="table-caption">
      <a:documentation>The fo:table-caption formatting object is used to contain block-level formatting objects containing the caption for the table only when using the fo:table-and-caption.</a:documentation>
      <ref name="fo_table-caption.attlist"/>
      <ref name="fo_table-caption.model"/>
    </element>
  </define>
  <define name="fo_table-caption.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <oneOrMore>
        <choice>
          <ref name="block.fo.list"/>
          <ref name="neutral.fo.list.block"/>
        </choice>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_table-caption.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="block-progression-dimension"/>
    <ref name="height"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="inline-progression-dimension"/>
    <ref name="intrusion-displace"/>
    <ref name="keep-together"/>
    <ref name="max-height"/>
    <ref name="max-width"/>
    <ref name="min-height"/>
    <ref name="min-width"/>
    <ref name="width"/>
  </define>
  <define name="fo_table-header">
    <element name="table-header">
      <a:documentation>The fo:table-header formatting object is used to contain the content of the table header.</a:documentation>
      <ref name="fo_table-header.attlist"/>
      <ref name="fo_table-header.model"/>
    </element>
  </define>
  <define name="fo_table-header.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <choice>
        <oneOrMore>
          <ref name="fo_table-row"/>
        </oneOrMore>
        <oneOrMore>
          <ref name="fo_table-cell"/>
        </oneOrMore>
      </choice>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_table-header.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="border-after-precedence"/>
    <ref name="border-before-precedence"/>
    <ref name="border-end-precedence"/>
    <ref name="border-start-precedence"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="visibility"/>
  </define>
  <define name="fo_table-footer">
    <element name="table-footer">
      <a:documentation>The fo:table-footer formatting object is used to contain the content of the table footer.</a:documentation>
      <ref name="fo_table-footer.attlist"/>
      <ref name="fo_table-footer.model"/>
    </element>
  </define>
  <define name="fo_table-footer.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <choice>
        <oneOrMore>
          <ref name="fo_table-row"/>
        </oneOrMore>
        <oneOrMore>
          <ref name="fo_table-cell"/>
        </oneOrMore>
      </choice>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_table-footer.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="border-after-precedence"/>
    <ref name="border-before-precedence"/>
    <ref name="border-end-precedence"/>
    <ref name="border-start-precedence"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="visibility"/>
  </define>
  <define name="fo_table-body">
    <element name="table-body">
      <a:documentation>The fo:table-body formatting object is used to contain the content of the table body.</a:documentation>
      <ref name="fo_table-body.attlist"/>
      <ref name="fo_table-body.model"/>
    </element>
  </define>
  <define name="fo_table-body.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <choice>
        <oneOrMore>
          <ref name="fo_table-row"/>
        </oneOrMore>
        <oneOrMore>
          <ref name="fo_table-cell"/>
        </oneOrMore>
      </choice>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_table-body.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="border-after-precedence"/>
    <ref name="border-before-precedence"/>
    <ref name="border-end-precedence"/>
    <ref name="border-start-precedence"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="visibility"/>
  </define>
  <define name="fo_table-row">
    <element name="table-row">
      <a:documentation>The fo:table-row formatting object is used to group table-cells into rows; all table-cells in a table-row start in the same geometric row on the table grid.</a:documentation>
      <ref name="fo_table-row.attlist"/>
      <ref name="fo_table-row.model"/>
    </element>
  </define>
  <define name="fo_table-row.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <oneOrMore>
        <ref name="fo_table-cell"/>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_table-row.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="block-progression-dimension"/>
    <ref name="border-after-precedence"/>
    <ref name="border-before-precedence"/>
    <ref name="border-end-precedence"/>
    <ref name="border-start-precedence"/>
    <ref name="break-after"/>
    <ref name="break-before"/>
    <ref name="height"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="keep-together"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="page-break-after"/>
    <ref name="page-break-before"/>
    <ref name="visibility"/>
  </define>
  <define name="fo_table-cell">
    <element name="table-cell">
      <a:documentation>The fo:table-cell formatting object is used to group content to be placed in a table cell.</a:documentation>
      <ref name="fo_table-cell.attlist"/>
      <ref name="fo_table-cell.model"/>
    </element>
  </define>
  <define name="fo_table-cell.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <oneOrMore>
        <choice>
          <ref name="block.fo.list"/>
          <ref name="neutral.fo.list.block"/>
        </choice>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_table-cell.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="block-progression-dimension"/>
    <ref name="border-after-precedence"/>
    <ref name="border-before-precedence"/>
    <ref name="border-end-precedence"/>
    <ref name="border-start-precedence"/>
    <ref name="column-number"/>
    <ref name="display-align"/>
    <ref name="empty-cells"/>
    <ref name="ends-row"/>
    <ref name="height"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="inline-progression-dimension"/>
    <ref name="max-height"/>
    <ref name="max-width"/>
    <ref name="min-height"/>
    <ref name="min-width"/>
    <ref name="number-columns-spanned"/>
    <ref name="number-rows-spanned"/>
    <ref name="relative-align"/>
    <ref name="starts-row"/>
    <ref name="width"/>
  </define>
  <define name="fo_list-block">
    <element name="list-block">
      <a:documentation>The fo:list-block flow object is used to format a list.</a:documentation>
      <ref name="fo_list-block.attlist"/>
      <ref name="fo_list-block.model"/>
    </element>
  </define>
  <define name="fo_list-block.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <oneOrMore>
        <ref name="fo_list-item"/>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_list-block.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-margin-properties-block"/>
    <ref name="break-after"/>
    <ref name="break-before"/>
    <ref name="clear"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="intrusion-displace"/>
    <ref name="keep-together"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="page-break-after"/>
    <ref name="page-break-before"/>
    <ref name="provisional-distance-between-starts"/>
    <ref name="provisional-label-separation"/>
  </define>
  <define name="fo_list-item">
    <element name="list-item">
      <a:documentation>The fo:list-item formatting object contains the label and the body of an item in a list.</a:documentation>
      <ref name="fo_list-item.attlist"/>
      <ref name="fo_list-item.model"/>
    </element>
  </define>
  <define name="fo_list-item.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <group>
        <ref name="fo_list-item-label"/>
        <ref name="fo_list-item-body"/>
      </group>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_list-item.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-margin-properties-block"/>
    <ref name="break-after"/>
    <ref name="break-before"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="intrusion-displace"/>
    <ref name="keep-together"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="page-break-after"/>
    <ref name="page-break-before"/>
    <ref name="relative-align"/>
  </define>
  <define name="fo_list-item-body">
    <element name="list-item-body">
      <a:documentation>The fo:list-item-body formatting object contains the content of the body of a list-item.</a:documentation>
      <ref name="fo_list-item-body.attlist"/>
      <ref name="fo_list-item-body.model"/>
    </element>
  </define>
  <define name="fo_list-item-body.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <oneOrMore>
        <choice>
          <ref name="block.fo.list"/>
          <ref name="neutral.fo.list.block"/>
        </choice>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_list-item-body.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="keep-together"/>
  </define>
  <define name="fo_list-item-label">
    <element name="list-item-label">
      <a:documentation>The fo:list-item-label formatting object contains the content of the label of a list-item, typically used to either enumerate, identify, or adorn the list-item's body.</a:documentation>
      <ref name="fo_list-item-label.attlist"/>
      <ref name="fo_list-item-label.model"/>
    </element>
  </define>
  <define name="fo_list-item-label.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <oneOrMore>
        <choice>
          <ref name="block.fo.list"/>
          <ref name="neutral.fo.list.block"/>
        </choice>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_list-item-label.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="keep-together"/>
  </define>
  <define name="fo_basic-link">
    <element name="basic-link">
      <a:documentation>The fo:basic-link is used for representing the start resource of a simple one-directional single-target link. The object allows for traversal to the destination resource, typically by clicking on any of the containing areas.</a:documentation>
      <ref name="fo_basic-link.attlist"/>
      <ref name="fo_basic-link.model"/>
    </element>
  </define>
  <define name="fo_basic-link.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="block.fo.list"/>
            <ref name="neutral.fo.list"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_basic-link.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="common-border-padding-and-background-properties"/>
    <ref name="common-relative-position-properties"/>
    <ref name="common-margin-properties-inline"/>
    <ref name="alignment-adjust"/>
    <ref name="alignment-baseline"/>
    <ref name="baseline-shift"/>
    <ref name="destination-placement-offset"/>
    <ref name="dominant-baseline"/>
    <ref name="external-destination"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="indicate-destination"/>
    <ref name="internal-destination"/>
    <ref name="keep-together"/>
    <ref name="keep-with-next"/>
    <ref name="keep-with-previous"/>
    <ref name="line-height"/>
    <ref name="show-destination"/>
    <ref name="target-presentation-context"/>
    <ref name="target-processing-context"/>
    <ref name="target-stylesheet"/>
    <ref name="vertical-align"/>
  </define>
  <define name="fo_multi-switch">
    <element name="multi-switch">
      <a:documentation>The fo:multi-switch wraps the specification of alternative sub-trees of formatting objects (each sub-tree being within an fo:multi-case), and controls the switching (activated via fo:multi-toggle) from one alternative to another.</a:documentation>
      <ref name="fo_multi-switch.attlist"/>
      <ref name="fo_multi-switch.model"/>
    </element>
  </define>
  <define name="fo_multi-switch.model">
    <interleave>
      <oneOrMore>
        <ref name="fo_multi-case"/>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_multi-switch.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="auto-restore"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
  </define>
  <define name="fo_multi-case">
    <element name="multi-case">
      <a:documentation>The fo:multi-case is used to contain (within an fo:multi-switch) each alternative sub-tree of formatting objects among which the parent fo:multi-switch will choose one to show and will hide the rest.</a:documentation>
      <ref name="fo_multi-case.attlist"/>
      <ref name="fo_multi-case.model"/>
    </element>
  </define>
  <define name="fo_multi-case.model">
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="block.fo.list"/>
            <ref name="neutral.fo.list"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_multi-case.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="case-name"/>
    <ref name="case-title"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="starting-state"/>
  </define>
  <define name="fo_multi-toggle">
    <element name="multi-toggle">
      <a:documentation>The fo:multi-toggle is typically used to establish an area that when actuated (for example implemented as "clicked"), has the effect of switching from one fo:multi-case to another. The "switch-to" property value of the fo:multi-toggle typically matches the "case-name" property value of the fo:multi-case to switch to.</a:documentation>
      <ref name="fo_multi-toggle.attlist"/>
      <ref name="fo_multi-toggle.model"/>
    </element>
  </define>
  <define name="fo_multi-toggle.model">
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="block.fo.list"/>
            <ref name="neutral.fo.list"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_multi-toggle.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
    <ref name="switch-to"/>
  </define>
  <define name="fo_multi-properties">
    <element name="multi-properties">
      <a:documentation>The fo:multi-properties is used to switch between two or more property sets that are associated with a given portion of content.</a:documentation>
      <ref name="fo_multi-properties.attlist"/>
      <ref name="fo_multi-properties.model"/>
    </element>
  </define>
  <define name="fo_multi-properties.model">
    <interleave>
      <group>
        <oneOrMore>
          <ref name="fo_multi-property-set"/>
        </oneOrMore>
        <ref name="fo_wrapper"/>
      </group>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_multi-properties.attlist">
    <ref name="common-accessibility-properties"/>
  </define>
  <define name="fo_multi-property-set">
    <element name="multi-property-set">
      <a:documentation>The fo:multi-property-set auxiliary formatting object is used to specify an alternative set of formatting properties that can be used to provide an alternate presentation of the children flow objects of the fo:wrapper child of the parent of this fo:multi-property-set.</a:documentation>
      <ref name="fo_multi-property-set.attlist"/>
      <ref name="fo_multi-property-set.model"/>
    </element>
  </define>
  <define name="fo_multi-property-set.model">
    <empty/>
  </define>
  <define name="fo_multi-property-set.attlist">
    <ref name="active-state"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
  </define>
  <define name="fo_index-page-number-prefix">
    <element name="index-page-number-prefix">
      <a:documentation>The fo:index-page-number-prefix formatting object specifies a static prefix for the cited page items created by fo:index-key-reference.</a:documentation>
      <ref name="fo_index-page-number-prefix.model"/>
    </element>
  </define>
  <define name="fo_index-page-number-prefix.model">
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="neutral.fo.list.inline"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_index-page-number-suffix">
    <element name="index-page-number-suffix">
      <a:documentation>The fo:index-page-number-suffix formatting object specifies a static suffix for the cited page items created by fo:index-key-reference.</a:documentation>
      <ref name="fo_index-page-number-suffix.model"/>
    </element>
  </define>
  <define name="fo_index-page-number-suffix.model">
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="neutral.fo.list.inline"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_index-range-begin">
    <element name="index-range-begin">
      <a:documentation>The fo:index-range-begin formatting object is used to indicate the beginning of an "indexed range" associated with an index key. The index range is ended by a corresponding fo:index-range-end.</a:documentation>
      <ref name="fo_index-range-begin.attlist"/>
      <ref name="fo_index-range-begin.model"/>
    </element>
  </define>
  <define name="fo_index-range-begin.model">
    <empty/>
  </define>
  <define name="fo_index-range-begin.attlist">
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
  </define>
  <define name="fo_index-range-end">
    <element name="index-range-end">
      <a:documentation>The fo:index-range-end is used to indicate the end of an "indexed range" that is started by its matching fo:index-range-begin. See for details.</a:documentation>
      <ref name="fo_index-range-end.attlist"/>
      <ref name="fo_index-range-end.model"/>
    </element>
  </define>
  <define name="fo_index-range-end.model">
    <empty/>
  </define>
  <define name="fo_index-range-end.attlist">
    <ref name="ref-id"/>
  </define>
  <define name="fo_index-key-reference">
    <element name="index-key-reference">
      <a:documentation>The fo:index-key-reference formatting object is used to generate a set of cited page items for all the occurrences of the specified index-key.</a:documentation>
      <ref name="fo_index-key-reference.attlist"/>
      <ref name="fo_index-key-reference.model"/>
    </element>
  </define>
  <define name="fo_index-key-reference.model">
    <interleave>
      <group>
        <optional>
          <ref name="fo_index-page-number-prefix"/>
        </optional>
        <optional>
          <ref name="fo_index-page-number-suffix"/>
        </optional>
      </group>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_index-key-reference.attlist">
    <ref name="page-number-treatment"/>
    <ref name="ref-index-key"/>
  </define>
  <define name="fo_index-page-citation-list">
    <element name="index-page-citation-list">
      <a:documentation>The fo:index-page-citation-list formatting object is used to group together the sets of cited page items generated by its fo:index-key-reference children. Each fo:index-key-reference child provides formatting properties for the corresponding cited page items. The resulting cited page items are sorted and collated together. The ultimate effect of the fo:index-page-citation-list is to generate a formatted list of page numbers and ranges.</a:documentation>
      <ref name="fo_index-page-citation-list.attlist"/>
      <ref name="fo_index-page-citation-list.model"/>
    </element>
  </define>
  <define name="fo_index-page-citation-list.model">
    <interleave>
      <group>
        <optional>
          <ref name="fo_index-page-citation-list-separator"/>
        </optional>
        <optional>
          <ref name="fo_index-page-citation-range-separator"/>
        </optional>
        <oneOrMore>
          <ref name="fo_index-key-reference"/>
        </oneOrMore>
      </group>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_index-page-citation-list.attlist">
    <ref name="merge-pages-across-index-key-references"/>
    <ref name="merge-ranges-across-index-key-references"/>
    <ref name="merge-sequential-page-numbers"/>
  </define>
  <define name="fo_index-page-citation-list-separator">
    <element name="index-page-citation-list-separator">
      <a:documentation>The fo:index-page-citation-list-separator formatting object specifies the formatting objects used to separate singleton page numbers or page number ranges in the generated list of page numbers.</a:documentation>
      <ref name="fo_index-page-citation-list-separator.model"/>
    </element>
  </define>
  <define name="fo_index-page-citation-list-separator.model">
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="neutral.fo.list.inline"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_index-page-citation-range-separator">
    <element name="index-page-citation-range-separator">
      <a:documentation>The fo:index-page-citation-range-separator formatting object specifies the formatting objects used to separate two page numbers forming a range in the generated list of page numbers.</a:documentation>
      <ref name="fo_index-page-citation-range-separator.model"/>
    </element>
  </define>
  <define name="fo_index-page-citation-range-separator.model">
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="neutral.fo.list.inline"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_bookmark-tree">
    <element name="bookmark-tree">
      <a:documentation>The fo:bookmark-tree formatting object is used to hold a list of access points within the document such as a table of contents, a list of figures or tables, etc. Each access point is called a bookmark.</a:documentation>
      <ref name="fo_bookmark-tree.model"/>
    </element>
  </define>
  <define name="fo_bookmark-tree.model">
    <oneOrMore>
      <ref name="fo_bookmark"/>
    </oneOrMore>
  </define>
  <define name="fo_bookmark">
    <element name="bookmark">
      <a:documentation>The fo:bookmark formatting object is used to identify an access point, by name, and to specify where that access point is within the current document or another external document. A given bookmark may be further subdivided into a sequence of (sub-)bookmarks to as many levels as the authors desire.</a:documentation>
      <ref name="fo_bookmark.attlist"/>
      <ref name="fo_bookmark.model"/>
    </element>
  </define>
  <define name="fo_bookmark.model">
    <interleave>
      <group>
        <ref name="fo_bookmark-title"/>
        <zeroOrMore>
          <ref name="fo_bookmark"/>
        </zeroOrMore>
      </group>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_bookmark.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="external-destination"/>
    <ref name="internal-destination"/>
    <ref name="starting-state"/>
  </define>
  <define name="fo_bookmark-title">
    <element name="bookmark-title">
      <a:documentation>The fo:bookmark-title formatting object is used to identify, in human readable form, an access point.</a:documentation>
      <ref name="fo_bookmark-title.attlist"/>
      <ref name="fo_bookmark-title.model"/>
    </element>
  </define>
  <define name="fo_bookmark-title.model">
    <interleave>
      <text/>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_bookmark-title.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="color"/>
    <ref name="font-style"/>
    <ref name="font-weight"/>
  </define>
  <define name="fo_float">
    <element name="float">
      <a:documentation>The fo:float formatting object is typically used either to cause an image to be positioned in a separate area at the beginning of a page, or to cause an image to be positioned to one side, with normal content flowing around and along-side the image.</a:documentation>
      <ref name="fo_float.attlist"/>
      <ref name="fo_float.model"/>
    </element>
  </define>
  <define name="fo_float.model">
    <interleave>
      <oneOrMore>
        <choice>
          <ref name="block.fo.list"/>
          <ref name="neutral.fo.list.block"/>
        </choice>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_float.attlist">
    <ref name="clear"/>
    <ref name="float"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
  </define>
  <define name="fo_footnote">
    <element name="footnote">
      <a:documentation>The fo:footnote is typically used to produce footnote-citations within the region-body of a page and the corresponding footnote in a separate area nearer the after-edge of the page.</a:documentation>
      <ref name="fo_footnote.attlist"/>
      <ref name="fo_footnote.model"/>
    </element>
  </define>
  <define name="fo_footnote.model">
    <interleave>
      <group>
        <ref name="fo_inline"/>
        <ref name="fo_footnote-body"/>
      </group>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_footnote.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
  </define>
  <define name="fo_footnote-body">
    <element name="footnote-body">
      <a:documentation>The fo:footnote-body is used to generate the footnote content.</a:documentation>
      <ref name="fo_footnote-body.attlist"/>
      <ref name="fo_footnote-body.model"/>
    </element>
  </define>
  <define name="fo_footnote-body.model">
    <interleave>
      <oneOrMore>
        <choice>
          <ref name="block.fo.list"/>
          <ref name="neutral.fo.list.block"/>
        </choice>
      </oneOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_footnote-body.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
  </define>
  <define name="fo_change-bar-begin">
    <element name="change-bar-begin">
      <a:documentation>The fo:change-bar-begin is used to indicate the beginning of a "change region" that is ended by the subsequent fo:change-bar-end whose change-bar-class property value matches that of the change-bar-class property on this fo:change-bar-begin and is at the same nesting level (relative to other fo:change-bar-begin/fo:change-bar-end pairs with the same change-bar-class property value) of this fo:change-bar-begin.</a:documentation>
      <ref name="fo_change-bar-begin.attlist"/>
      <ref name="fo_change-bar-begin.model"/>
    </element>
  </define>
  <define name="fo_change-bar-begin.model">
    <empty/>
  </define>
  <define name="fo_change-bar-begin.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="change-bar-class"/>
    <ref name="change-bar-color"/>
    <ref name="change-bar-offset"/>
    <ref name="change-bar-placement"/>
    <ref name="change-bar-style"/>
    <ref name="change-bar-width"/>
    <ref name="z-index"/>
  </define>
  <define name="fo_change-bar-end">
    <element name="change-bar-end">
      <a:documentation>The fo:change-bar-end is used to indicate the end of a "change region" that is started by its matching fo:change-bar-begin. See for details.</a:documentation>
      <ref name="fo_change-bar-end.attlist"/>
      <ref name="fo_change-bar-end.model"/>
    </element>
  </define>
  <define name="fo_change-bar-end.model">
    <empty/>
  </define>
  <define name="fo_change-bar-end.attlist">
    <ref name="common-accessibility-properties"/>
    <ref name="change-bar-class"/>
  </define>
  <define name="fo_wrapper">
    <element name="wrapper">
      <a:documentation>The fo:wrapper formatting object is used to specify inherited properties for a group of formatting objects.</a:documentation>
      <ref name="fo_wrapper.attlist"/>
      <ref name="fo_wrapper.model"/>
    </element>
  </define>
  <define name="fo_wrapper.model">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="block.fo.list"/>
            <ref name="neutral.fo.list"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_wrapper.attlist">
    <ref name="id"/>
    <ref name="index-class"/>
    <ref name="index-key"/>
  </define>
  <define name="fo_marker">
    <element name="marker">
      <a:documentation>The fo:marker is used in conjunction with fo:retrieve-marker or fo:retrieve-table-marker to produce running headers or footers and dynamic table headers or footers. Typical examples include:</a:documentation>
      <ref name="fo_marker.attlist"/>
      <ref name="fo_marker.model"/>
    </element>
  </define>
  <define name="fo_marker.model">
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="inline.fo.list"/>
            <ref name="block.fo.list"/>
            <ref name="neutral.fo.list"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_marker.attlist">
    <ref name="marker-class-name"/>
  </define>
  <define name="fo_retrieve-marker">
    <element name="retrieve-marker">
      <a:documentation>The fo:retrieve-marker is used in conjunction with fo:marker to produce running headers or footers. Typical examples include:</a:documentation>
      <ref name="fo_retrieve-marker.attlist"/>
      <ref name="fo_retrieve-marker.model"/>
    </element>
  </define>
  <define name="fo_retrieve-marker.model">
    <empty/>
  </define>
  <define name="fo_retrieve-marker.attlist">
    <ref name="retrieve-boundary"/>
    <ref name="retrieve-class-name"/>
    <ref name="retrieve-position"/>
  </define>
  <define name="fo_retrieve-table-marker">
    <element name="retrieve-table-marker">
      <a:documentation>The fo:retrieve-table-marker is used in conjunction with fo:marker to produce table-headers and table-footers whose content can change over different pages, different regions or different columns.</a:documentation>
      <ref name="fo_retrieve-table-marker.attlist"/>
      <ref name="fo_retrieve-table-marker.model"/>
    </element>
  </define>
  <define name="fo_retrieve-table-marker.model">
    <empty/>
  </define>
  <define name="fo_retrieve-table-marker.attlist">
    <ref name="retrieve-boundary-within-table"/>
    <ref name="retrieve-class-name"/>
    <ref name="retrieve-position-within-table"/>
  </define>
  <!--
    
    Property groups
    
  -->
  <!--
    Property groups also include applicable shorthands that expand to
    properties defined in the property group in the XSL spec.
  -->
  <define name="common-accessibility-properties">
    <ref name="role"/>
    <ref name="source-document"/>
  </define>
  <define name="common-absolute-position-properties">
    <ref name="absolute-position"/>
    <ref name="bottom"/>
    <ref name="left"/>
    <ref name="position"/>
    <ref name="right"/>
    <ref name="top"/>
  </define>
  <define name="common-border-padding-and-background-properties">
    <ref name="background"/>
    <ref name="background-attachment"/>
    <ref name="background-color"/>
    <ref name="background-image"/>
    <ref name="background-position"/>
    <ref name="background-position-horizontal"/>
    <ref name="background-position-vertical"/>
    <ref name="background-repeat"/>
    <ref name="border"/>
    <ref name="border-after-color"/>
    <ref name="border-after-style"/>
    <ref name="border-after-width"/>
    <ref name="border-before-color"/>
    <ref name="border-before-style"/>
    <ref name="border-before-width"/>
    <ref name="border-bottom"/>
    <ref name="border-bottom-color"/>
    <ref name="border-bottom-style"/>
    <ref name="border-bottom-width"/>
    <ref name="border-color"/>
    <ref name="border-end-color"/>
    <ref name="border-end-style"/>
    <ref name="border-end-width"/>
    <ref name="border-left"/>
    <ref name="border-left-color"/>
    <ref name="border-left-style"/>
    <ref name="border-left-width"/>
    <ref name="border-right"/>
    <ref name="border-right-color"/>
    <ref name="border-right-style"/>
    <ref name="border-right-width"/>
    <ref name="border-start-color"/>
    <ref name="border-start-style"/>
    <ref name="border-start-width"/>
    <ref name="border-style"/>
    <ref name="border-top"/>
    <ref name="border-top-color"/>
    <ref name="border-top-style"/>
    <ref name="border-top-width"/>
    <ref name="border-width"/>
    <ref name="padding"/>
    <ref name="padding-after"/>
    <ref name="padding-before"/>
    <ref name="padding-bottom"/>
    <ref name="padding-end"/>
    <ref name="padding-left"/>
    <ref name="padding-right"/>
    <ref name="padding-start"/>
    <ref name="padding-top"/>
  </define>
  <define name="common-font-properties">
    <ref name="font-family"/>
    <ref name="font-selection-strategy"/>
    <ref name="font-size"/>
    <ref name="font-size-adjust"/>
    <ref name="font-stretch"/>
    <ref name="font-style"/>
    <ref name="font-variant"/>
    <ref name="font-weight"/>
  </define>
  <define name="common-hyphenation-properties">
    <ref name="country"/>
    <ref name="hyphenate"/>
    <ref name="hyphenation-character"/>
    <ref name="hyphenation-push-character-count"/>
    <ref name="hyphenation-remain-character-count"/>
    <ref name="language"/>
    <ref name="script"/>
  </define>
  <define name="common-margin-properties-block">
    <ref name="end-indent"/>
    <ref name="margin"/>
    <ref name="margin-bottom"/>
    <ref name="margin-left"/>
    <ref name="margin-right"/>
    <ref name="margin-top"/>
    <ref name="space-after"/>
    <ref name="space-before"/>
    <ref name="start-indent"/>
  </define>
  <define name="common-margin-properties-inline">
    <ref name="margin"/>
    <ref name="margin-bottom"/>
    <ref name="margin-left"/>
    <ref name="margin-right"/>
    <ref name="margin-top"/>
    <ref name="space-end"/>
    <ref name="space-start"/>
  </define>
  <define name="common-relative-position-properties">
    <ref name="bottom"/>
    <ref name="left"/>
    <ref name="position"/>
    <ref name="relative-position"/>
    <ref name="right"/>
    <ref name="top"/>
  </define>
  <define name="area-alignment">
    <ref name="alignment-adjust"/>
    <ref name="alignment-baseline"/>
    <ref name="baseline-shift"/>
    <ref name="display-align"/>
    <ref name="dominant-baseline"/>
    <ref name="relative-align"/>
  </define>
  <define name="writing-mode-related">
    <ref name="direction"/>
    <ref name="glyph-orientation-horizontal"/>
    <ref name="glyph-orientation-vertical"/>
    <ref name="text-altitude"/>
    <ref name="text-depth"/>
    <ref name="unicode-bidi"/>
    <ref name="writing-mode"/>
  </define>
  <!-- Properties -->
  <define name="absolute-position">
    <optional>
      <attribute name="absolute-position">
        <a:documentation>auto | absolute | fixed | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="active-state">
    <attribute name="active-state">
      <a:documentation>link | visited | active | hover | focus</a:documentation>
    </attribute>
  </define>
  <define name="alignment-adjust">
    <optional>
      <attribute name="alignment-adjust">
        <a:documentation>auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical | &lt;percentage&gt; | &lt;length&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="alignment-baseline">
    <optional>
      <attribute name="alignment-baseline">
        <a:documentation>auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="allowed-height-scale">
    <optional>
      <attribute name="allowed-height-scale">
        <a:documentation>[ any | &lt;percentage&gt; ]* | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="allowed-width-scale">
    <optional>
      <attribute name="allowed-width-scale">
        <a:documentation>[ any | &lt;percentage&gt; ]* | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="auto-restore">
    <optional>
      <attribute name="auto-restore">
        <a:documentation>true | false</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="background">
    <optional>
      <attribute name="background">
        <a:documentation>[&lt;background-color&gt; || &lt;background-image&gt; || &lt;background-repeat&gt; || &lt;background-attachment&gt; || &lt;background-position&gt; ]] | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="background-attachment">
    <optional>
      <attribute name="background-attachment">
        <a:documentation>scroll | fixed | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="background-color">
    <optional>
      <attribute name="background-color">
        <a:documentation>&lt;color&gt; | transparent | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="background-image">
    <optional>
      <attribute name="background-image">
        <a:documentation>&lt;uri-specification&gt; | none | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="background-position">
    <optional>
      <attribute name="background-position">
        <a:documentation>[ [&lt;percentage&gt; | &lt;length&gt; ]{1,2} | [ [top | center | bottom] || [left | center | right] ] ] | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="background-position-horizontal">
    <optional>
      <attribute name="background-position-horizontal">
        <a:documentation>&lt;percentage&gt; | &lt;length&gt; | left | center | right | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="background-position-vertical">
    <optional>
      <attribute name="background-position-vertical">
        <a:documentation>&lt;percentage&gt; | &lt;length&gt; | top | center | bottom | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="background-repeat">
    <optional>
      <attribute name="background-repeat">
        <a:documentation>repeat | repeat-x | repeat-y | no-repeat | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="baseline-shift">
    <optional>
      <attribute name="baseline-shift">
        <a:documentation>baseline | sub | super | &lt;percentage&gt; | &lt;length&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="blank-or-not-blank">
    <optional>
      <attribute name="blank-or-not-blank">
        <a:documentation>blank | not-blank | any | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="block-progression-dimension">
    <optional>
      <attribute name="block-progression-dimension">
        <a:documentation>auto | &lt;length&gt; | &lt;percentage&gt; | &lt;length-range&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="block-progression-dimension.minimum"/>
    </optional>
    <optional>
      <attribute name="block-progression-dimension.optimum"/>
    </optional>
    <optional>
      <attribute name="block-progression-dimension.maximum"/>
    </optional>
  </define>
  <define name="border">
    <optional>
      <attribute name="border">
        <a:documentation>[ &lt;border-width&gt; || &lt;border-style&gt; || [ &lt;color&gt; | transparent ] ] | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-after-color">
    <optional>
      <attribute name="border-after-color">
        <a:documentation>&lt;color&gt; | transparent | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-after-precedence">
    <optional>
      <attribute name="border-after-precedence">
        <a:documentation>force | &lt;integer&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-after-style">
    <optional>
      <attribute name="border-after-style">
        <a:documentation>&lt;border-style&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-after-width">
    <optional>
      <attribute name="border-after-width">
        <a:documentation>&lt;border-width&gt; | &lt;length-conditional&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="border-after-width.length"/>
    </optional>
    <optional>
      <attribute name="border-after-width.conditionality"/>
    </optional>
  </define>
  <define name="border-before-color">
    <optional>
      <attribute name="border-before-color">
        <a:documentation>&lt;color&gt; | transparent | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-before-precedence">
    <optional>
      <attribute name="border-before-precedence">
        <a:documentation>force | &lt;integer&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-before-style">
    <optional>
      <attribute name="border-before-style">
        <a:documentation>&lt;border-style&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-before-width">
    <optional>
      <attribute name="border-before-width">
        <a:documentation>&lt;border-width&gt; | &lt;length-conditional&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="border-before-width.length"/>
    </optional>
    <optional>
      <attribute name="border-before-width.conditionality"/>
    </optional>
  </define>
  <define name="border-bottom">
    <optional>
      <attribute name="border-bottom">
        <a:documentation>[ &lt;border-width&gt; || &lt;border-style&gt; || [ &lt;color&gt; | transparent ] ] | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-bottom-color">
    <optional>
      <attribute name="border-bottom-color">
        <a:documentation>&lt;color&gt; | transparent | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-bottom-style">
    <optional>
      <attribute name="border-bottom-style">
        <a:documentation>&lt;border-style&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-bottom-width">
    <optional>
      <attribute name="border-bottom-width">
        <a:documentation>&lt;border-width&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-collapse">
    <optional>
      <attribute name="border-collapse">
        <a:documentation>collapse | collapse-with-precedence | separate | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-color">
    <optional>
      <attribute name="border-color">
        <a:documentation>[ &lt;color&gt; | transparent ]{1,4} | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-end-color">
    <optional>
      <attribute name="border-end-color">
        <a:documentation>&lt;color&gt; | transparent | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-end-precedence">
    <optional>
      <attribute name="border-end-precedence">
        <a:documentation>force | &lt;integer&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-end-style">
    <optional>
      <attribute name="border-end-style">
        <a:documentation>&lt;border-style&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-end-width">
    <optional>
      <attribute name="border-end-width">
        <a:documentation>&lt;border-width&gt; | &lt;length-conditional&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="border-end-width.length"/>
    </optional>
    <optional>
      <attribute name="border-end-width.conditionality"/>
    </optional>
  </define>
  <define name="border-left">
    <optional>
      <attribute name="border-left">
        <a:documentation>[ &lt;border-width&gt; || &lt;border-style&gt; || [ &lt;color&gt; | transparent ] ] | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-left-color">
    <optional>
      <attribute name="border-left-color">
        <a:documentation>&lt;color&gt; | transparent | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-left-style">
    <optional>
      <attribute name="border-left-style">
        <a:documentation>&lt;border-style&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-left-width">
    <optional>
      <attribute name="border-left-width">
        <a:documentation>&lt;border-width&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-right">
    <optional>
      <attribute name="border-right">
        <a:documentation>[ &lt;border-width&gt; || &lt;border-style&gt; || [ &lt;color&gt; | transparent ] ] | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-right-color">
    <optional>
      <attribute name="border-right-color">
        <a:documentation>&lt;color&gt; | transparent | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-right-style">
    <optional>
      <attribute name="border-right-style">
        <a:documentation>&lt;border-style&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-right-width">
    <optional>
      <attribute name="border-right-width">
        <a:documentation>&lt;border-width&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-separation">
    <optional>
      <attribute name="border-separation">
        <a:documentation>&lt;length-bp-ip-direction&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-spacing">
    <optional>
      <attribute name="border-spacing">
        <a:documentation>&lt;length&gt; &lt;length&gt;? | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-start-color">
    <optional>
      <attribute name="border-start-color">
        <a:documentation>&lt;color&gt; | transparent | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-start-precedence">
    <optional>
      <attribute name="border-start-precedence">
        <a:documentation>force | &lt;integer&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-start-style">
    <optional>
      <attribute name="border-start-style">
        <a:documentation>&lt;border-style&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-start-width">
    <optional>
      <attribute name="border-start-width">
        <a:documentation>&lt;border-width&gt; | &lt;length-conditional&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="border-start-width.length"/>
    </optional>
    <optional>
      <attribute name="border-start-width.conditionality"/>
    </optional>
  </define>
  <define name="border-style">
    <optional>
      <attribute name="border-style">
        <a:documentation>&lt;border-style&gt;{1,4} | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-top">
    <optional>
      <attribute name="border-top">
        <a:documentation>[ &lt;border-width&gt; || &lt;border-style&gt; || [ &lt;color&gt; | transparent ] ] | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-top-color">
    <optional>
      <attribute name="border-top-color">
        <a:documentation>&lt;color&gt; | transparent | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-top-style">
    <optional>
      <attribute name="border-top-style">
        <a:documentation>&lt;border-style&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-top-width">
    <optional>
      <attribute name="border-top-width">
        <a:documentation>&lt;border-width&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="border-width">
    <optional>
      <attribute name="border-width">
        <a:documentation>&lt;border-width&gt;{1,4} | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="bottom">
    <optional>
      <attribute name="bottom">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | auto | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="break-after">
    <optional>
      <attribute name="break-after">
        <a:documentation>auto | column | page | even-page | odd-page | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="break-before">
    <optional>
      <attribute name="break-before">
        <a:documentation>auto | column | page | even-page | odd-page | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="caption-side">
    <optional>
      <attribute name="caption-side">
        <a:documentation>before | after | start | end | top | bottom | left | right | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="case-name">
    <attribute name="case-name">
      <a:documentation>&lt;name&gt;</a:documentation>
      <data type="NCName"/>
    </attribute>
  </define>
  <define name="case-title">
    <attribute name="case-title">
      <a:documentation>&lt;string&gt;</a:documentation>
    </attribute>
  </define>
  <define name="change-bar-class">
    <attribute name="change-bar-class">
      <a:documentation>&lt;name&gt;</a:documentation>
      <data type="NCName"/>
    </attribute>
  </define>
  <define name="change-bar-color">
    <optional>
      <attribute name="change-bar-color">
        <a:documentation>&lt;color&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="change-bar-offset">
    <optional>
      <attribute name="change-bar-offset">
        <a:documentation>&lt;length&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="change-bar-placement">
    <optional>
      <attribute name="change-bar-placement">
        <a:documentation>start | end | left | right | inside | outside | alternate</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="change-bar-style">
    <optional>
      <attribute name="change-bar-style">
        <a:documentation>&lt;border-style&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="change-bar-width">
    <optional>
      <attribute name="change-bar-width">
        <a:documentation>&lt;border-width&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="character">
    <attribute name="character">
      <a:documentation>&lt;character&gt;</a:documentation>
    </attribute>
  </define>
  <define name="clear">
    <optional>
      <attribute name="clear">
        <a:documentation>start | end | left | right | inside | outside | both | none | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="clip">
    <optional>
      <attribute name="clip">
        <a:documentation>&lt;shape&gt; | auto | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="color">
    <optional>
      <attribute name="color">
        <a:documentation>&lt;color&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="color-profile-name">
    <attribute name="color-profile-name">
      <a:documentation>&lt;name&gt; | inherit</a:documentation>
    </attribute>
  </define>
  <define name="column-count">
    <optional>
      <attribute name="column-count">
        <a:documentation>&lt;number&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="column-gap">
    <optional>
      <attribute name="column-gap">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="column-number">
    <optional>
      <attribute name="column-number">
        <a:documentation>&lt;number&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="column-width">
    <optional>
      <attribute name="column-width">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="content-height">
    <optional>
      <attribute name="content-height">
        <a:documentation>auto | scale-to-fit | scale-down-to-fit | scale-up-to-fit | &lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="content-type">
    <optional>
      <attribute name="content-type">
        <a:documentation>&lt;string&gt; | auto</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="content-width">
    <optional>
      <attribute name="content-width">
        <a:documentation>auto | scale-to-fit | scale-down-to-fit | scale-up-to-fit | &lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="country">
    <optional>
      <attribute name="country">
        <a:documentation>none | &lt;country&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="cue">
    <optional>
      <attribute name="cue">
        <a:documentation>&lt;cue-before&gt; || &lt;cue-after&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="destination-placement-offset">
    <optional>
      <attribute name="destination-placement-offset">
        <a:documentation>&lt;length&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="direction">
    <optional>
      <attribute name="direction">
        <a:documentation>ltr | rtl | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="display-align">
    <optional>
      <attribute name="display-align">
        <a:documentation>auto | before | center | after | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="dominant-baseline">
    <optional>
      <attribute name="dominant-baseline">
        <a:documentation>auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="empty-cells">
    <optional>
      <attribute name="empty-cells">
        <a:documentation>show | hide | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="end-indent">
    <optional>
      <attribute name="end-indent">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="ends-row">
    <optional>
      <attribute name="ends-row">
        <a:documentation>true | false</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="extent">
    <optional>
      <attribute name="extent">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="external-destination">
    <optional>
      <attribute name="external-destination">
        <a:documentation>empty string | &lt;uri-specification&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="float">
    <optional>
      <attribute name="float">
        <a:documentation>before | start | end | left | right | inside | outside | none | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="flow-map-name">
    <attribute name="flow-map-name">
      <a:documentation>&lt;name&gt;</a:documentation>
      <data type="NCName"/>
    </attribute>
  </define>
  <define name="flow-map-reference">
    <optional>
      <attribute name="flow-map-reference">
        <a:documentation>&lt;name&gt;</a:documentation>
        <data type="NCName"/>
      </attribute>
    </optional>
  </define>
  <define name="flow-name">
    <optional>
      <attribute name="flow-name">
        <a:documentation>&lt;name&gt;</a:documentation>
        <data type="NCName"/>
      </attribute>
    </optional>
  </define>
  <define name="flow-name-reference">
    <attribute name="flow-name-reference">
      <a:documentation>&lt;name&gt;</a:documentation>
      <data type="NCName"/>
    </attribute>
  </define>
  <define name="font">
    <optional>
      <attribute name="font">
        <a:documentation>[ [ &lt;font-style&gt; || &lt;font-variant&gt; || &lt;font-weight&gt; ]? &lt;font-size&gt; [ / &lt;line-height&gt;]? &lt;font-family&gt; ] | caption | icon | menu | message-box | small-caption | status-bar | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="font-family">
    <optional>
      <attribute name="font-family">
        <a:documentation>[[ &lt;family-name&gt; | &lt;generic-family&gt; ],]* [&lt;family-name&gt; | &lt;generic-family&gt;] | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="font-selection-strategy">
    <optional>
      <attribute name="font-selection-strategy">
        <a:documentation>auto | character-by-character | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="font-size">
    <optional>
      <attribute name="font-size">
        <a:documentation>&lt;absolute-size&gt; | &lt;relative-size&gt; | &lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="font-size-adjust">
    <optional>
      <attribute name="font-size-adjust">
        <a:documentation>&lt;number&gt; | none | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="font-stretch">
    <optional>
      <attribute name="font-stretch">
        <a:documentation>normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="font-style">
    <optional>
      <attribute name="font-style">
        <a:documentation>normal | italic | oblique | backslant | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="font-variant">
    <optional>
      <attribute name="font-variant">
        <a:documentation>normal | small-caps | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="font-weight">
    <optional>
      <attribute name="font-weight">
        <a:documentation>normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900 | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="force-page-count">
    <optional>
      <attribute name="force-page-count">
        <a:documentation>auto | even | odd | end-on-even | end-on-odd | no-force | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="format">
    <optional>
      <attribute name="format">
        <a:documentation>&lt;string&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="glyph-orientation-horizontal">
    <optional>
      <attribute name="glyph-orientation-horizontal">
        <a:documentation>&lt;angle&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="glyph-orientation-vertical">
    <optional>
      <attribute name="glyph-orientation-vertical">
        <a:documentation>auto | &lt;angle&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="grouping-separator">
    <optional>
      <attribute name="grouping-separator">
        <a:documentation>&lt;character&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="grouping-size">
    <optional>
      <attribute name="grouping-size">
        <a:documentation>&lt;number&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="height">
    <optional>
      <attribute name="height">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | auto | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="hyphenate">
    <optional>
      <attribute name="hyphenate">
        <a:documentation>false | true | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="hyphenation-character">
    <optional>
      <attribute name="hyphenation-character">
        <a:documentation>&lt;character&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="hyphenation-keep">
    <optional>
      <attribute name="hyphenation-keep">
        <a:documentation>auto | column | page | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="hyphenation-ladder-count">
    <optional>
      <attribute name="hyphenation-ladder-count">
        <a:documentation>no-limit | &lt;number&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="hyphenation-push-character-count">
    <optional>
      <attribute name="hyphenation-push-character-count">
        <a:documentation>&lt;number&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="hyphenation-remain-character-count">
    <optional>
      <attribute name="hyphenation-remain-character-count">
        <a:documentation>&lt;number&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="id">
    <optional>
      <attribute name="id">
        <a:documentation>&lt;id&gt;</a:documentation>
        <data type="ID"/>
      </attribute>
    </optional>
  </define>
  <define name="index-class">
    <optional>
      <attribute name="index-class">
        <a:documentation>&lt;string&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="index-key">
    <optional>
      <attribute name="index-key">
        <a:documentation>&lt;string&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="indicate-destination">
    <optional>
      <attribute name="indicate-destination">
        <a:documentation>true | false</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="initial-page-number">
    <optional>
      <attribute name="initial-page-number">
        <a:documentation>auto | auto-odd | auto-even | &lt;number&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="inline-progression-dimension">
    <optional>
      <attribute name="inline-progression-dimension">
        <a:documentation>auto | &lt;length&gt; | &lt;percentage&gt; | &lt;length-range&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="inline-progression-dimension.minimum"/>
    </optional>
    <optional>
      <attribute name="inline-progression-dimension.optimum"/>
    </optional>
    <optional>
      <attribute name="inline-progression-dimension.maximum"/>
    </optional>
  </define>
  <define name="internal-destination">
    <optional>
      <attribute name="internal-destination">
        <a:documentation>empty string | &lt;idref&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="intrinsic-scale-value">
    <optional>
      <attribute name="intrinsic-scale-value">
        <a:documentation>&lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="intrusion-displace">
    <optional>
      <attribute name="intrusion-displace">
        <a:documentation>auto | none | line | indent | block | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="keep-together">
    <optional>
      <attribute name="keep-together">
        <a:documentation>&lt;keep&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="keep-together.within-line"/>
    </optional>
    <optional>
      <attribute name="keep-together.within-column"/>
    </optional>
    <optional>
      <attribute name="keep-together.within-page"/>
    </optional>
  </define>
  <define name="keep-with-next">
    <optional>
      <attribute name="keep-with-next">
        <a:documentation>&lt;keep&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="keep-with-next.within-line"/>
    </optional>
    <optional>
      <attribute name="keep-with-next.within-column"/>
    </optional>
    <optional>
      <attribute name="keep-with-next.within-page"/>
    </optional>
  </define>
  <define name="keep-with-previous">
    <optional>
      <attribute name="keep-with-previous">
        <a:documentation>&lt;keep&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="keep-with-previous.within-line"/>
    </optional>
    <optional>
      <attribute name="keep-with-previous.within-column"/>
    </optional>
    <optional>
      <attribute name="keep-with-previous.within-page"/>
    </optional>
  </define>
  <define name="language">
    <optional>
      <attribute name="language">
        <a:documentation>none | &lt;language&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="last-line-end-indent">
    <optional>
      <attribute name="last-line-end-indent">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="leader-alignment">
    <optional>
      <attribute name="leader-alignment">
        <a:documentation>none | reference-area | page | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="leader-length">
    <optional>
      <attribute name="leader-length">
        <a:documentation>&lt;length-range&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="leader-length.minimum"/>
    </optional>
    <optional>
      <attribute name="leader-length.optimum"/>
    </optional>
    <optional>
      <attribute name="leader-length.maximum"/>
    </optional>
  </define>
  <define name="leader-pattern">
    <optional>
      <attribute name="leader-pattern">
        <a:documentation>space | rule | dots | use-content | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="leader-pattern-width">
    <optional>
      <attribute name="leader-pattern-width">
        <a:documentation>use-font-metrics | &lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="left">
    <optional>
      <attribute name="left">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | auto | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="letter-spacing">
    <optional>
      <attribute name="letter-spacing">
        <a:documentation>normal | &lt;length&gt; | &lt;space&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="letter-spacing.minimum"/>
    </optional>
    <optional>
      <attribute name="letter-spacing.optimum"/>
    </optional>
    <optional>
      <attribute name="letter-spacing.maximum"/>
    </optional>
    <optional>
      <attribute name="letter-spacing.precedence"/>
    </optional>
    <optional>
      <attribute name="letter-spacing.conditionality"/>
    </optional>
  </define>
  <define name="letter-value">
    <optional>
      <attribute name="letter-value">
        <a:documentation>auto | alphabetic | traditional</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="linefeed-treatment">
    <optional>
      <attribute name="linefeed-treatment">
        <a:documentation>ignore | preserve | treat-as-space | treat-as-zero-width-space | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="line-height">
    <optional>
      <attribute name="line-height">
        <a:documentation>normal | &lt;length&gt; | &lt;number&gt; | &lt;percentage&gt; | &lt;space&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="line-height.minimum"/>
    </optional>
    <optional>
      <attribute name="line-height.optimum"/>
    </optional>
    <optional>
      <attribute name="line-height.maximum"/>
    </optional>
    <optional>
      <attribute name="line-height.precedence"/>
    </optional>
    <optional>
      <attribute name="line-height.conditionality"/>
    </optional>
  </define>
  <define name="line-height-shift-adjustment">
    <optional>
      <attribute name="line-height-shift-adjustment">
        <a:documentation>consider-shifts | disregard-shifts | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="line-stacking-strategy">
    <optional>
      <attribute name="line-stacking-strategy">
        <a:documentation>line-height | font-height | max-height | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="margin">
    <optional>
      <attribute name="margin">
        <a:documentation>&lt;margin-width&gt;{1,4} | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="margin-bottom">
    <optional>
      <attribute name="margin-bottom">
        <a:documentation>&lt;margin-width&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="margin-left">
    <optional>
      <attribute name="margin-left">
        <a:documentation>&lt;margin-width&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="margin-right">
    <optional>
      <attribute name="margin-right">
        <a:documentation>&lt;margin-width&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="margin-top">
    <optional>
      <attribute name="margin-top">
        <a:documentation>&lt;margin-width&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="marker-class-name">
    <optional>
      <attribute name="marker-class-name">
        <a:documentation>&lt;name&gt;</a:documentation>
        <data type="NCName"/>
      </attribute>
    </optional>
  </define>
  <define name="master-name">
    <optional>
      <attribute name="master-name">
        <a:documentation>&lt;name&gt;</a:documentation>
        <data type="NCName"/>
      </attribute>
    </optional>
  </define>
  <define name="master-reference">
    <optional>
      <attribute name="master-reference">
        <a:documentation>&lt;name&gt;</a:documentation>
        <data type="NCName"/>
      </attribute>
    </optional>
  </define>
  <define name="max-height">
    <optional>
      <attribute name="max-height">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | none | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="maximum-repeats">
    <optional>
      <attribute name="maximum-repeats">
        <a:documentation>&lt;number&gt; | no-limit | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="max-width">
    <optional>
      <attribute name="max-width">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | none | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="media-usage">
    <optional>
      <attribute name="media-usage">
        <a:documentation>auto | paginate | bounded-in-one-dimension | unbounded</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="merge-pages-across-index-key-references">
    <optional>
      <attribute name="merge-pages-across-index-key-references">
        <a:documentation>merge | leave-separate</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="merge-ranges-across-index-key-references">
    <optional>
      <attribute name="merge-ranges-across-index-key-references">
        <a:documentation>merge | leave-separate</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="merge-sequential-page-numbers">
    <optional>
      <attribute name="merge-sequential-page-numbers">
        <a:documentation>merge | leave-separate</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="min-height">
    <optional>
      <attribute name="min-height">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="min-width">
    <optional>
      <attribute name="min-width">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="number-columns-repeated">
    <optional>
      <attribute name="number-columns-repeated">
        <a:documentation>&lt;number&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="number-columns-spanned">
    <optional>
      <attribute name="number-columns-spanned">
        <a:documentation>&lt;number&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="number-rows-spanned">
    <optional>
      <attribute name="number-rows-spanned">
        <a:documentation>&lt;number&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="odd-or-even">
    <optional>
      <attribute name="odd-or-even">
        <a:documentation>odd | even | any | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="orphans">
    <optional>
      <attribute name="orphans">
        <a:documentation>&lt;integer&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="overflow">
    <optional>
      <attribute name="overflow">
        <a:documentation>visible | hidden | scroll | error-if-overflow | repeat | auto | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="padding">
    <optional>
      <attribute name="padding">
        <a:documentation>&lt;padding-width&gt;{1,4} | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="padding-after">
    <optional>
      <attribute name="padding-after">
        <a:documentation>&lt;padding-width&gt; | &lt;length-conditional&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="padding-after.length"/>
    </optional>
    <optional>
      <attribute name="padding-after.conditionality"/>
    </optional>
  </define>
  <define name="padding-before">
    <optional>
      <attribute name="padding-before">
        <a:documentation>&lt;padding-width&gt; | &lt;length-conditional&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="padding-before.length"/>
    </optional>
    <optional>
      <attribute name="padding-before.conditionality"/>
    </optional>
  </define>
  <define name="padding-bottom">
    <optional>
      <attribute name="padding-bottom">
        <a:documentation>&lt;padding-width&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="padding-end">
    <optional>
      <attribute name="padding-end">
        <a:documentation>&lt;padding-width&gt; | &lt;length-conditional&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="padding-end.length"/>
    </optional>
    <optional>
      <attribute name="padding-end.conditionality"/>
    </optional>
  </define>
  <define name="padding-left">
    <optional>
      <attribute name="padding-left">
        <a:documentation>&lt;padding-width&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="padding-right">
    <optional>
      <attribute name="padding-right">
        <a:documentation>&lt;padding-width&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="padding-start">
    <optional>
      <attribute name="padding-start">
        <a:documentation>&lt;padding-width&gt; | &lt;length-conditional&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="padding-start.length"/>
    </optional>
    <optional>
      <attribute name="padding-start.conditionality"/>
    </optional>
  </define>
  <define name="padding-top">
    <optional>
      <attribute name="padding-top">
        <a:documentation>&lt;padding-width&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="page-break-after">
    <optional>
      <attribute name="page-break-after">
        <a:documentation>auto | always | avoid | left | right | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="page-break-before">
    <optional>
      <attribute name="page-break-before">
        <a:documentation>auto | always | avoid | left | right | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="page-break-inside">
    <optional>
      <attribute name="page-break-inside">
        <a:documentation>avoid | auto | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="page-citation-strategy">
    <optional>
      <attribute name="page-citation-strategy">
        <a:documentation>[ all | normal | non-blank | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="page-height">
    <optional>
      <attribute name="page-height">
        <a:documentation>auto | indefinite | &lt;length&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="page-number-treatment">
    <optional>
      <attribute name="page-number-treatment">
        <a:documentation>link | no-link</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="page-position">
    <optional>
      <attribute name="page-position">
        <a:documentation>only | first | last | rest | any | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="page-width">
    <optional>
      <attribute name="page-width">
        <a:documentation>auto | indefinite | &lt;length&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="pause">
    <optional>
      <attribute name="pause">
        <a:documentation>[&lt;time&gt; | &lt;percentage&gt;]{1,2} | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="position">
    <optional>
      <attribute name="position">
        <a:documentation>static | relative | absolute | fixed | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="precedence">
    <optional>
      <attribute name="precedence">
        <a:documentation>true | false | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="provisional-distance-between-starts">
    <optional>
      <attribute name="provisional-distance-between-starts">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="provisional-label-separation">
    <optional>
      <attribute name="provisional-label-separation">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="reference-orientation">
    <optional>
      <attribute name="reference-orientation">
        <a:documentation>0 | 90 | 180 | 270 | -90 | -180 | -270 | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="ref-id">
    <attribute name="ref-id">
      <a:documentation>&lt;idref&gt; | inherit</a:documentation>
    </attribute>
  </define>
  <define name="ref-index-key">
    <attribute name="ref-index-key">
      <a:documentation>&lt;string&gt;</a:documentation>
    </attribute>
  </define>
  <define name="region-name">
    <optional>
      <attribute name="region-name">
        <a:documentation>xsl-region-body | xsl-region-start | xsl-region-end | xsl-region-before | xsl-region-after | &lt;name&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="region-name-reference">
    <attribute name="region-name-reference">
      <a:documentation>&lt;name&gt;</a:documentation>
      <data type="NCName"/>
    </attribute>
  </define>
  <define name="relative-align">
    <optional>
      <attribute name="relative-align">
        <a:documentation>before | baseline | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="relative-position">
    <optional>
      <attribute name="relative-position">
        <a:documentation>static | relative | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="rendering-intent">
    <optional>
      <attribute name="rendering-intent">
        <a:documentation>auto | perceptual | relative-colorimetric | saturation | absolute-colorimetric | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="retrieve-boundary">
    <optional>
      <attribute name="retrieve-boundary">
        <a:documentation>page | page-sequence | document</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="retrieve-boundary-within-table">
    <optional>
      <attribute name="retrieve-boundary-within-table">
        <a:documentation>table | table-fragment | page</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="retrieve-class-name">
    <optional>
      <attribute name="retrieve-class-name">
        <a:documentation>&lt;name&gt;</a:documentation>
        <data type="NCName"/>
      </attribute>
    </optional>
  </define>
  <define name="retrieve-position">
    <optional>
      <attribute name="retrieve-position">
        <a:documentation>first-starting-within-page | first-including-carryover | last-starting-within-page | last-ending-within-page</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="retrieve-position-within-table">
    <optional>
      <attribute name="retrieve-position-within-table">
        <a:documentation>first-starting | first-including-carryover | last-starting | last-ending</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="right">
    <optional>
      <attribute name="right">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | auto | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="role">
    <optional>
      <attribute name="role">
        <a:documentation>&lt;string&gt; | &lt;uri-specification&gt; | none | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="rule-style">
    <optional>
      <attribute name="rule-style">
        <a:documentation>none | dotted | dashed | solid | double | groove | ridge | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="rule-thickness">
    <optional>
      <attribute name="rule-thickness">
        <a:documentation>&lt;length&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="scale-option">
    <optional>
      <attribute name="scale-option">
        <a:documentation>width | height | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="scaling">
    <optional>
      <attribute name="scaling">
        <a:documentation>uniform | non-uniform | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="scaling-method">
    <optional>
      <attribute name="scaling-method">
        <a:documentation>auto | integer-pixels | resample-any-method | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="score-spaces">
    <optional>
      <attribute name="score-spaces">
        <a:documentation>true | false | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="script">
    <optional>
      <attribute name="script">
        <a:documentation>none | auto | &lt;script&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="show-destination">
    <optional>
      <attribute name="show-destination">
        <a:documentation>replace | new</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="size">
    <optional>
      <attribute name="size">
        <a:documentation>&lt;length&gt;{1,2} | auto | landscape | portrait | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="source-document">
    <optional>
      <attribute name="source-document">
        <a:documentation>&lt;uri-specification&gt; [&lt;uri-specification&gt;]* | none | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="space-after">
    <optional>
      <attribute name="space-after">
        <a:documentation>&lt;space&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="space-after.minimum"/>
    </optional>
    <optional>
      <attribute name="space-after.optimum"/>
    </optional>
    <optional>
      <attribute name="space-after.maximum"/>
    </optional>
    <optional>
      <attribute name="space-after.precedence"/>
    </optional>
    <optional>
      <attribute name="space-after.conditionality"/>
    </optional>
  </define>
  <define name="space-before">
    <optional>
      <attribute name="space-before">
        <a:documentation>&lt;space&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="space-before.minimum"/>
    </optional>
    <optional>
      <attribute name="space-before.optimum"/>
    </optional>
    <optional>
      <attribute name="space-before.maximum"/>
    </optional>
    <optional>
      <attribute name="space-before.precedence"/>
    </optional>
    <optional>
      <attribute name="space-before.conditionality"/>
    </optional>
  </define>
  <define name="space-end">
    <optional>
      <attribute name="space-end">
        <a:documentation>&lt;space&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="space-end.minimum"/>
    </optional>
    <optional>
      <attribute name="space-end.optimum"/>
    </optional>
    <optional>
      <attribute name="space-end.maximum"/>
    </optional>
    <optional>
      <attribute name="space-end.precedence"/>
    </optional>
    <optional>
      <attribute name="space-end.conditionality"/>
    </optional>
  </define>
  <define name="space-start">
    <optional>
      <attribute name="space-start">
        <a:documentation>&lt;space&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="space-start.minimum"/>
    </optional>
    <optional>
      <attribute name="space-start.optimum"/>
    </optional>
    <optional>
      <attribute name="space-start.maximum"/>
    </optional>
    <optional>
      <attribute name="space-start.precedence"/>
    </optional>
    <optional>
      <attribute name="space-start.conditionality"/>
    </optional>
  </define>
  <define name="span">
    <optional>
      <attribute name="span">
        <a:documentation>none | all | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="src">
    <attribute name="src">
      <a:documentation>&lt;uri-specification&gt; | inherit</a:documentation>
    </attribute>
  </define>
  <define name="start-indent">
    <optional>
      <attribute name="start-indent">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="starting-state">
    <optional>
      <attribute name="starting-state">
        <a:documentation>show | hide</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="starts-row">
    <optional>
      <attribute name="starts-row">
        <a:documentation>true | false</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="suppress-at-line-break">
    <optional>
      <attribute name="suppress-at-line-break">
        <a:documentation>auto | suppress | retain | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="switch-to">
    <optional>
      <attribute name="switch-to">
        <a:documentation>xsl-preceding | xsl-following | xsl-any | &lt;name&gt;[ &lt;name&gt;]*</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="table-layout">
    <optional>
      <attribute name="table-layout">
        <a:documentation>auto | fixed | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="table-omit-footer-at-break">
    <optional>
      <attribute name="table-omit-footer-at-break">
        <a:documentation>true | false</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="table-omit-header-at-break">
    <optional>
      <attribute name="table-omit-header-at-break">
        <a:documentation>true | false</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="target-presentation-context">
    <optional>
      <attribute name="target-presentation-context">
        <a:documentation>use-target-processing-context | &lt;uri-specification&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="target-processing-context">
    <optional>
      <attribute name="target-processing-context">
        <a:documentation>document-root | &lt;uri-specification&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="target-stylesheet">
    <optional>
      <attribute name="target-stylesheet">
        <a:documentation>use-normal-stylesheet | &lt;uri-specification&gt;</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="text-align">
    <optional>
      <attribute name="text-align">
        <a:documentation>start | center | end | justify | inside | outside | left | right | &lt;string&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="text-align-last">
    <optional>
      <attribute name="text-align-last">
        <a:documentation>relative | start | center | end | justify | inside | outside | left | right | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="text-altitude">
    <optional>
      <attribute name="text-altitude">
        <a:documentation>use-font-metrics | &lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="text-decoration">
    <optional>
      <attribute name="text-decoration">
        <a:documentation>none | [ [ underline | no-underline] || [ overline | no-overline ] || [ line-through | no-line-through ] || [ blink | no-blink ] ] | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="text-depth">
    <optional>
      <attribute name="text-depth">
        <a:documentation>use-font-metrics | &lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="text-indent">
    <optional>
      <attribute name="text-indent">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="text-shadow">
    <optional>
      <attribute name="text-shadow">
        <a:documentation>none | [&lt;color&gt; || &lt;length&gt; &lt;length&gt; &lt;length&gt;? ,]* [&lt;color&gt; || &lt;length&gt; &lt;length&gt; &lt;length&gt;?] | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="text-transform">
    <optional>
      <attribute name="text-transform">
        <a:documentation>capitalize | uppercase | lowercase | none | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="top">
    <optional>
      <attribute name="top">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | auto | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="treat-as-word-space">
    <optional>
      <attribute name="treat-as-word-space">
        <a:documentation>auto | true | false | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="unicode-bidi">
    <optional>
      <attribute name="unicode-bidi">
        <a:documentation>normal | embed | bidi-override | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="vertical-align">
    <optional>
      <attribute name="vertical-align">
        <a:documentation>baseline | middle | sub | super | text-top | text-bottom | &lt;percentage&gt; | &lt;length&gt; | top | bottom | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="visibility">
    <optional>
      <attribute name="visibility">
        <a:documentation>visible | hidden | collapse | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="white-space">
    <optional>
      <attribute name="white-space">
        <a:documentation>normal | pre | nowrap | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="white-space-collapse">
    <optional>
      <attribute name="white-space-collapse">
        <a:documentation>false | true | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="white-space-treatment">
    <optional>
      <attribute name="white-space-treatment">
        <a:documentation>ignore | preserve | ignore-if-before-linefeed | ignore-if-after-linefeed | ignore-if-surrounding-linefeed | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="widows">
    <optional>
      <attribute name="widows">
        <a:documentation>&lt;integer&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="width">
    <optional>
      <attribute name="width">
        <a:documentation>&lt;length&gt; | &lt;percentage&gt; | auto | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="word-spacing">
    <optional>
      <attribute name="word-spacing">
        <a:documentation>normal | &lt;length&gt; | &lt;space&gt; | inherit</a:documentation>
      </attribute>
    </optional>
    <optional>
      <attribute name="word-spacing.minimum"/>
    </optional>
    <optional>
      <attribute name="word-spacing.optimum"/>
    </optional>
    <optional>
      <attribute name="word-spacing.maximum"/>
    </optional>
    <optional>
      <attribute name="word-spacing.precedence"/>
    </optional>
    <optional>
      <attribute name="word-spacing.conditionality"/>
    </optional>
  </define>
  <define name="wrap-option">
    <optional>
      <attribute name="wrap-option">
        <a:documentation>no-wrap | wrap | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="writing-mode">
    <optional>
      <attribute name="writing-mode">
        <a:documentation>lr-tb | rl-tb | tb-rl | tb-lr | bt-lr | bt-rl | lr-bt | rl-bt | lr-alternating-rl-bt | lr-alternating-rl-tb | lr-inverting-rl-bt | lr-inverting-rl-tb | tb-lr-in-lr-pairs | lr | rl | tb | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <define name="xml.lang">
    <optional>
      <attribute name="xml:lang">
        <a:documentation>&lt;language-country&gt; | inherit</a:documentation>
        <data type="language"/>
      </attribute>
    </optional>
  </define>
  <define name="z-index">
    <optional>
      <attribute name="z-index">
        <a:documentation>auto | &lt;integer&gt; | inherit</a:documentation>
      </attribute>
    </optional>
  </define>
  <!--
    
    Additional patterns
    
  -->
  <!-- For fo:instream-foreign-object -->
  <define name="anything">
    <zeroOrMore>
      <choice>
        <element>
          <anyName/>
          <zeroOrMore>
            <attribute>
              <anyName>
                <except>
                  <name ns="">id</name>
                </except>
              </anyName>
            </attribute>
          </zeroOrMore>
          <ref name="anything"/>
        </element>
        <text/>
      </choice>
    </zeroOrMore>
  </define>
  <define name="non-xsl">
    <zeroOrMore>
      <attribute>
        <anyName>
          <except>
            <nsName ns=""/>
            <nsName ns="http://www.w3.org/XML/1998/namespace"/>
          </except>
        </anyName>
      </attribute>
    </zeroOrMore>
    <zeroOrMore>
      <element>
        <anyName>
          <except>
            <nsName ns=""/>
            <nsName/>
          </except>
        </anyName>
        <zeroOrMore>
          <attribute>
            <anyName/>
          </attribute>
        </zeroOrMore>
        <ref name="anything"/>
      </element>
    </zeroOrMore>
  </define>
  <!--
    From http://www.w3.org/TR/xsl/#fo_wrapper:
    
       An fo:wrapper is only permitted to have children that would be #
       permitted to be children of the parent of the fo:wrapper
    
  -->
  <define name="fo_wrapper.block">
    <element name="wrapper">
      <a:documentation>The fo:wrapper formatting object is used to specify inherited properties for a group of formatting objects.</a:documentation>
      <ref name="fo_wrapper.attlist"/>
      <ref name="fo_wrapper.model.block"/>
    </element>
  </define>
  <define name="fo_wrapper.model.block">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <zeroOrMore>
        <choice>
          <zeroOrMore>
            <choice>
              <text/>
              <ref name="block.fo.list"/>
            </choice>
          </zeroOrMore>
          <ref name="neutral.fo.list.block"/>
        </choice>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="fo_wrapper.inline">
    <element name="wrapper">
      <a:documentation>The fo:wrapper formatting object is used to specify inherited properties for a group of formatting objects.</a:documentation>
      <ref name="fo_wrapper.attlist"/>
      <ref name="fo_wrapper.model.inline"/>
    </element>
  </define>
  <define name="fo_wrapper.model.inline">
    <zeroOrMore>
      <ref name="fo_marker"/>
    </zeroOrMore>
    <interleave>
      <interleave>
        <zeroOrMore>
          <choice>
            <zeroOrMore>
              <choice>
                <text/>
                <ref name="inline.fo.list"/>
              </choice>
            </zeroOrMore>
            <ref name="neutral.fo.list.inline"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="inline.out-of-line.fo.list"/>
        </zeroOrMore>
      </interleave>
      <zeroOrMore>
        <ref name="point.fo.list"/>
      </zeroOrMore>
    </interleave>
  </define>
  <!--
    
    FO groups
    
  -->
  <define name="block.fo.list">
    <choice>
      <ref name="fo_block"/>
      <ref name="fo_block-container"/>
      <ref name="fo_table-and-caption"/>
      <ref name="fo_table"/>
      <ref name="fo_list-block"/>
    </choice>
  </define>
  <define name="inline.fo.list">
    <choice>
      <ref name="fo_bidi-override"/>
      <ref name="fo_character"/>
      <ref name="fo_external-graphic"/>
      <ref name="fo_instream-foreign-object"/>
      <ref name="fo_inline"/>
      <ref name="fo_inline-container"/>
      <ref name="fo_leader"/>
      <ref name="fo_page-number"/>
      <ref name="fo_page-number-citation"/>
      <ref name="fo_page-number-citation-last"/>
      <ref name="fo_scaling-value-citation"/>
      <ref name="fo_basic-link"/>
      <ref name="fo_multi-toggle"/>
      <ref name="fo_index-page-citation-list"/>
    </choice>
  </define>
  <define name="neutral.fo.list">
    <choice>
      <ref name="fo_multi-switch"/>
      <ref name="fo_multi-properties"/>
      <ref name="fo_index-range-begin"/>
      <ref name="fo_index-range-end"/>
      <ref name="fo_wrapper"/>
      <ref name="fo_retrieve-marker"/>
      <ref name="fo_retrieve-table-marker"/>
      <!-- Rely on Schematron to indicate where invalid -->
      <ref name="fo_float"/>
    </choice>
  </define>
  <!-- Rely on Schematron to indicate where invalid -->
  <define name="neutral.fo.list.block">
    <choice>
      <ref name="fo_multi-switch"/>
      <ref name="fo_multi-properties"/>
      <ref name="fo_index-range-begin"/>
      <ref name="fo_index-range-end"/>
      <ref name="fo_wrapper.block"/>
      <ref name="fo_retrieve-marker"/>
      <ref name="fo_retrieve-table-marker"/>
      <!-- Rely on Schematron to indicate where invalid -->
      <ref name="fo_float"/>
    </choice>
  </define>
  <!-- Rely on Schematron to indicate where invalid -->
  <define name="neutral.fo.list.inline">
    <choice>
      <ref name="fo_multi-switch"/>
      <ref name="fo_multi-properties"/>
      <ref name="fo_index-range-begin"/>
      <ref name="fo_index-range-end"/>
      <ref name="fo_wrapper.inline"/>
      <ref name="fo_retrieve-marker"/>
      <ref name="fo_retrieve-table-marker"/>
      <!-- Rely on Schematron to indicate where invalid -->
      <ref name="fo_float"/>
    </choice>
  </define>
  <!-- Rely on Schematron to indicate where invalid -->
  <define name="inline.out-of-line.fo.list">
    <ref name="fo_footnote"/>
  </define>
  <define name="point.fo.list">
    <choice>
      <ref name="fo_change-bar-begin"/>
      <ref name="fo_change-bar-end"/>
    </choice>
  </define>
</grammar>
<!-- End. -->

# Autogenerated file.  Do not edit.
# Generated using 'focheck' version 0.4.0
# 
# Copyright 2016 Antenna House, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace axf = "http://www.antennahouse.com/names/XSL/Extensions"
default namespace fo = "http://www.w3.org/1999/XSL/Format"
namespace local = ""

start = fo_root
# FOs
fo_root =
  
  ## これは、formatting objectツリーのトップノードです。fo:layout-master-set （文書で使用されている全てのマスターを保持する ）、 任意、 fo:declarations、任意の fo:bookmark-treeなど持っています。 それとも、１以上 のfo:page-sequence 又は fo:page-sequence-wrapper 要素が持っています。それぞれの fo:page-sequenceは fo:page-sequenceの内容の子の組版からのページシーケンスを表します。fo:page-sequence-wrapperはfo:rootの子として起こることができる。fo:page-sequence-wrapperは fo:page-sequence 又は fo:page-sequence-wrappersを０以上含めることができる。fo:page-sequenceの要素を回り込むのために継承されたプロパティを指定すると fo:page-sequence-wrapper を使用しています。追加の意味がない。
  element root { fo_root.attlist, fo_root.model }
fo_root.model =
  fo_layout-master-set,
  fo_declarations?,
  fo_bookmark-tree?,
  (fo_page-sequence | fo_page-sequence-wrapper)+
fo_root.attlist =
  common-accessibility-properties,
  id,
  index-class,
  index-key,
  media-usage
fo_declarations =
  
  ## fo:declarationsはスタイルシートのグローバルグループの宣言に使用します。
  element declarations { fo_declarations.model }
fo_declarations.model = (fo_color-profile | non-xsl-element)*
fo_color-profile =
  
  ##  fo:color-profileはスタイルシートの ICC Color Profileを宣言するために使用しています。color-profileを「color-profile-name」 プロパティで指定された名を経由して、再び参照されています。
  element color-profile {
    fo_color-profile.attlist, fo_color-profile.model
  }
fo_color-profile.model = empty
fo_color-profile.attlist = color-profile-name, rendering-intent, src
fo_page-sequence =
  
  ## fo:page-sequenceは 文書内の(sub-)sequence ページを作成する方法を指定するために使用しています。例えば 、報告の章。そのfo:page-sequenceのための 有効な flow-mapによって 対して、これらのページ内容は、fo:page-sequenceのフロー子から来ています。これらのページレイアウトが fo:page-sequence-master 又は、 fo:page-sequenceにmaster-reference特色によって参照されたpage-master から来ています。fo:page-sequenceのそれぞれの flow-object 子によって返される領域のシーケンス が生成されたページの子孫を作られて、以下のように説明します。
  element page-sequence {
    fo_page-sequence.attlist, fo_page-sequence.model
  }
fo_page-sequence.model =
  fo_title?,
  fo_folio-prefix?,
  fo_folio-suffix?,
  fo_static-content*,
  fo_flow+
fo_page-sequence.attlist =
  country,
  flow-map-reference,
  force-page-count,
  format,
  grouping-separator,
  grouping-size,
  id,
  index-class,
  index-key,
  initial-page-number,
  language,
  letter-value,
  master-reference,
  reference-orientation,
  writing-mode
fo_page-sequence-wrapper =
  
  ## fo:page-sequenceのグループの継承されたプロパティを指定するとpage-sequence-wrapperを使用しています。
  element page-sequence-wrapper {
    fo_page-sequence-wrapper.attlist, fo_page-sequence-wrapper.model
  }
fo_page-sequence-wrapper.model =
  (fo_page-sequence | fo_page-sequence-wrapper)*
fo_page-sequence-wrapper.attlist = id, index-class, index-key
fo_layout-master-set =
  
  ## fo:layout-master-setは文書で使用されている全てのマスターズの周りのラッパーです。これは、page-sequence-masters、 page-masters、 flow-mapsが含まれています。
  element layout-master-set { fo_layout-master-set.model }
fo_layout-master-set.model =
  (fo_simple-page-master | fo_page-sequence-master | fo_flow-map)+
fo_page-sequence-master =
  
  ## fo:page-sequence-masterは制約やpage-mastersの取られたセットが、ページシーケンスを生成するのに使用される順序を指定するために使用します。fo:page-sequence-masterは fo:page-sequenceで組版される場合、ページが自動的に生成されます。
  element page-sequence-master {
    fo_page-sequence-master.attlist, fo_page-sequence-master.model
  }
fo_page-sequence-master.model =
  (fo_single-page-master-reference
   | fo_repeatable-page-master-reference
   | fo_repeatable-page-master-alternatives)+
fo_page-sequence-master.attlist = master-name
fo_single-page-master-reference =
  
  ## fo:single-page-master-referenceは最も単純な sub-sequence-specifierです。単一の page-masterの単一のインスタンスのあるsub-sequence を指定します。 これは、fo:single-page-master-referenceの親である fo:page-sequence-masterを使用して生成されるページシーケンスにとられた位置で特定のpage-masterの使用を指定するために使用します。
  element single-page-master-reference {
    fo_single-page-master-reference.attlist,
    fo_single-page-master-reference.model
  }
fo_single-page-master-reference.model = empty
fo_single-page-master-reference.attlist = master-reference
fo_repeatable-page-master-reference =
  
  ## fo:repeatable-page-master-referenceは、次の最も単純な sub-sequence-specifierです。単一の page-masterの繰り返したインスタンスのあるsub-sequence を指定します。繰り返し数は、囲まれていて、潜在的に囲まれていない可能もあります。
  element repeatable-page-master-reference {
    fo_repeatable-page-master-reference.attlist,
    fo_repeatable-page-master-reference.model
  }
fo_repeatable-page-master-reference.model = empty
fo_repeatable-page-master-reference.attlist =
  master-reference, maximum-repeats
fo_repeatable-page-master-alternatives =
  
  ## fo:repeatable-page-master-alternativesは最も複雑な sub-sequence-specifierです。代替 page-mastersのセットの繰り返しインスタンスのあるsub-sequence を指定します。繰り返し数は、囲まれていて、潜在的に囲まれていない可能もあります。代替page-mastersのどちらの順序で任意の位置で使用していますが、代替の使用に条件の評価に依存します。特異条件は代替を使用して生成されたページは、page-sequenceの最初又は最後のページであるか、ページの空白であうかどうか含みます。揃えた条件は、異なるpage-mastersは、最初のページ、奇数と偶数ページ、 空白ページなどのために使用することができます。
  element repeatable-page-master-alternatives {
    fo_repeatable-page-master-alternatives.attlist,
    fo_repeatable-page-master-alternatives.model
  }
fo_repeatable-page-master-alternatives.model =
  fo_conditional-page-master-reference+
fo_repeatable-page-master-alternatives.attlist = maximum-repeats
fo_conditional-page-master-reference =
  
  ## fo:conditional-page-master-referenceは、使用条件が満たされたときに、使用されるpage-masterを見分けるために使用します。これは、異なるpage-mastersは、　奇数と偶数ページ、 page-sequenceの最初のページ、空白ページなどのために使用することができます。この使用法は本や報告の章に一般的な物です。最初のページには、章の残り部分とは異なるレイアウトになって、偶数と奇数ページの見出しとフッタの異なる場合もあると言うことです。
  element conditional-page-master-reference {
    fo_conditional-page-master-reference.attlist,
    fo_conditional-page-master-reference.model
  }
fo_conditional-page-master-reference.model = empty
fo_conditional-page-master-reference.attlist =
  blank-or-not-blank, master-reference, odd-or-even, page-position
fo_simple-page-master =
  
  ## fo:simple-page-masterはページの生成に使用され、ページのジオメトリを指定しています。ページ領域に細部されています：１以上の region-bodyまたは、４つまでの他の領域： region-before、 region-after、region-start、region-end。
  element simple-page-master {
    fo_simple-page-master.attlist, fo_simple-page-master.model
  }
fo_simple-page-master.model =
  fo_region-body+,
  fo_region-before?,
  fo_region-after?,
  fo_region-start?,
  fo_region-end?
fo_simple-page-master.attlist =
  common-margin-properties-block,
  master-name,
  page-height,
  page-width,
  reference-orientation,
  size,
  writing-mode
fo_region-body =
  
  ## simple-page-masterを構成するのに使用される。この領域は、fo:simple-page-masterの「center」に位置している表示域/参照ペアを指定します。オーバフロー形質は、下にあるregion-reference-area のどのくらいが表示されているコントロールします。すなわち、region-reference-area は 親 region-viewport-areaによって切取りされているかどうか。
  element region-body { fo_region-body.attlist, fo_region-body.model }
fo_region-body.model = empty
fo_region-body.attlist =
  common-border-padding-and-background-properties,
  common-margin-properties-block,
  clip,
  column-count,
  column-gap,
  display-align,
  overflow,
  reference-orientation,
  region-name,
  writing-mode
fo_region-before =
  
  ## simple-page-masterを構成するのに使用される。この領域は、page-reference-areaの「before」側に位置している表示域/参照ペアを指定します。lr-tb writing-modeでは、この領域はヘッダ領域に対応します。オーバフロー形質は、下にあるregion-reference-area のどのくらいが表示されているコントロールします。すなわち、region-reference-area は 親 region-viewport-areaによって切取りされているかどうか。
  element region-before {
    fo_region-before.attlist, fo_region-before.model
  }
fo_region-before.model = empty
fo_region-before.attlist =
  common-border-padding-and-background-properties,
  clip,
  display-align,
  extent,
  overflow,
  precedence,
  reference-orientation,
  region-name,
  writing-mode
fo_region-after =
  
  ## simple-page-masterを構成するのに使用される。この領域は、page-reference-areaの「after」側に位置している表示域/参照ペアを指定します。lr-tb writing-modeでは、この領域はフッタ領域に対応します。オーバフロー形質は、下にあるregion-reference-area のどのくらいが表示されているコントロールします。すなわち、region-reference-area は 親 region-viewport-areaによって切取りされているかどうか。
  element region-after {
    fo_region-after.attlist, fo_region-after.model
  }
fo_region-after.model = empty
fo_region-after.attlist =
  common-border-padding-and-background-properties,
  clip,
  display-align,
  extent,
  overflow,
  precedence,
  reference-orientation,
  region-name,
  writing-mode
fo_region-start =
  
  ## simple-page-masterを構成するのに使用される。この領域は、page-reference-areaの「start」側に位置している表示域/参照ペアを指定します。lr-tb writing-modeでは、この領域は、左のサイドバーに対応している。 オーバフロー形質は、下にあるregion-reference-area のどのくらいが表示されているコントロールします。すなわち、region-reference-area は 親 region-viewport-areaによって切取りされているかどうか。
  element region-start {
    fo_region-start.attlist, fo_region-start.model
  }
fo_region-start.model = empty
fo_region-start.attlist =
  common-border-padding-and-background-properties,
  clip,
  display-align,
  extent,
  overflow,
  reference-orientation,
  region-name,
  writing-mode
fo_region-end =
  
  ## simple-page-masterを構成するのに使用される。この領域は、page-reference-areaの「end」側に位置している表示域/参照ペアを指定します。lr-tb writing-modeでは、この領域は、右のサイドバーに対応している。オーバフロー形質は、下にあるregion-reference-area のどのくらいが表示されているコントロールします。すなわち、region-reference-area は 親 region-viewport-areaによって切取りされているかどうか。
  element region-end { fo_region-end.attlist, fo_region-end.model }
fo_region-end.model = empty
fo_region-end.attlist =
  common-border-padding-and-background-properties,
  clip,
  display-align,
  extent,
  overflow,
  reference-orientation,
  region-name,
  writing-mode
fo_flow =
  
  ## fo:flowの内容は、ページに割り当たるフローイングテキスト内容を提供するフロー対象体のシーケンスです。
  element flow { fo_flow.attlist, fo_flow.model }
fo_flow.model =
  fo_marker*,
  ((block.fo.list | neutral.fo.list.block)+ & point.fo.list*)
fo_flow.attlist = flow-name, id, index-class, index-key
fo_static-content =
  
  ## fo:static-content はＦＯシーケンス又はＦＯツリーを持って、それは、 単一の領域で提示し、 page-sequence内の１以上のページにlike-named領域で繰り返されます。その一般的な用は、繰り返し、又はヘッダとフッタを実行するためです。
  element static-content {
    fo_static-content.attlist, fo_static-content.model
  }
fo_static-content.model =
  (block.fo.list | neutral.fo.list.block)+ & point.fo.list*
fo_static-content.attlist = flow-name, id, index-class, index-key
fo_title =
  
  ## fo:title は与えられたpage-sequenceでタイトルを付き合うために使用します。このタイトルは、ページを 聞き分けるための対話のUser Agent によって使用できます。例えば、fo:title 組版され、「title」画面 又は「tool tip」で表示されます。
  element title { fo_title.attlist, fo_title.model }
fo_title.model =
  (text | inline.fo.list | neutral.fo.list.inline)*
  & inline.out-of-line.fo.list*
fo_title.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-font-properties,
  common-margin-properties-inline,
  color,
  line-height,
  visibility
fo_flow-map =
  
  ## fo:flow-mapは、領域へのフローの割当を指定するために使用されます。
  element flow-map { fo_flow-map.attlist, fo_flow-map.model }
fo_flow-map.model = fo_flow-assignment+
fo_flow-map.attlist = flow-map-name
fo_flow-assignment =
  
  ## The fo:flow-map is used to specify the assignment of flows to regions.fo:flow-assignmentは、領域のシーケンスへのフローの一つのシーケンスの割当を指定するために使用されます。
  element flow-assignment { fo_flow-assignment.model }
fo_flow-assignment.model = fo_flow-source-list, fo_flow-target-list
fo_flow-source-list =
  
  ## fo:flow-source-listは、特定のfo:flow-assignmentを割り当てることでフローのシーケンスを指定するために使用されます。
  element flow-source-list { fo_flow-source-list.model }
fo_flow-source-list.model = fo_flow-name-specifier+
fo_flow-name-specifier =
  
  ## fo:flow-name-specifierは、source-list内に一つのフローを指定するために使用されます。
  element flow-name-specifier {
    fo_flow-name-specifier.attlist, fo_flow-name-specifier.model
  }
fo_flow-name-specifier.model = empty
fo_flow-name-specifier.attlist = flow-name-reference
fo_flow-target-list =
  
  ## fo:flow-target-lisは、t 特定のfo:flow-assignmentを割り当てることでフローのシーケンスを指定するために使用されます。
  element flow-target-list { fo_flow-target-list.model }
fo_flow-target-list.model = fo_region-name-specifier+
fo_region-name-specifier =
  
  ## fo:region-name-specifier iは、target-list内に一つのフローを指定するために使用されます。
  element region-name-specifier {
    fo_region-name-specifier.attlist, fo_region-name-specifier.model
  }
fo_region-name-specifier.model = empty
fo_region-name-specifier.attlist = region-name-reference
fo_block =
  
  ## fo:blockは、一般的に段落、タイトル、見出し、図、表キャプションなど組版に使用されます。
  element block { fo_block.attlist, fo_block.model }
fo_block.model =
  fo_marker*,
  fo_initial-property-set?,
  (((text | inline.fo.list | block.fo.list | neutral.fo.list)*
    & inline.out-of-line.fo.list*)
   & point.fo.list*)
fo_block.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-font-properties,
  common-hyphenation-properties,
  common-margin-properties-block,
  break-after,
  break-before,
  clear,
  color,
  hyphenation-keep,
  hyphenation-ladder-count,
  id,
  index-class,
  index-key,
  intrusion-displace,
  keep-together,
  keep-with-next,
  keep-with-previous,
  last-line-end-indent,
  line-height,
  line-height-shift-adjustment,
  line-stacking-strategy,
  linefeed-treatment,
  orphans,
  page-break-after,
  page-break-before,
  span,
  text-align,
  text-align-last,
  text-altitude,
  text-depth,
  text-indent,
  visibility,
  white-space-collapse,
  white-space-treatment,
  widows,
  wrap-option
fo_block-container =
  
  ## fo:block-containerフローは、 一般的には、異なるwriting-modeのテキストブロックを持って、block-level reference-areaを生成するために使用されます。さらに、それはまた、その内容を回転するために異なる different reference-orientationを使用することができます。
  element block-container {
    fo_block-container.attlist, fo_block-container.model
  }
fo_block-container.model =
  fo_marker*,
  ((block.fo.list | neutral.fo.list.block)+ & point.fo.list*)
fo_block-container.attlist =
  common-absolute-position-properties,
  common-border-padding-and-background-properties,
  common-margin-properties-block,
  block-progression-dimension,
  break-after,
  break-before,
  clear,
  clip,
  display-align,
  height,
  id,
  index-class,
  index-key,
  inline-progression-dimension,
  intrusion-displace,
  keep-together,
  keep-with-next,
  keep-with-previous,
  max-height,
  max-width,
  min-height,
  min-width,
  overflow,
  page-break-after,
  page-break-before,
  reference-orientation,
  span,
  width,
  writing-mode,
  z-index
fo_bidi-override =
  
  ## Unicode BIDI アルゴリズムが失敗したらfo:bidi-overrideが使用されています。テキストの文字列が特定方向に強制的に書き込みます。
  element bidi-override {
    fo_bidi-override.attlist, fo_bidi-override.model
  }
fo_bidi-override.model =
  fo_marker*,
  (((text | inline.fo.list | block.fo.list | neutral.fo.list)*
    & inline.out-of-line.fo.list*)
   & point.fo.list*)
fo_bidi-override.attlist =
  common-relative-position-properties,
  common-font-properties,
  color,
  direction,
  id,
  index-class,
  index-key,
  letter-spacing,
  line-height,
  score-spaces,
  unicode-bidi,
  word-spacing
fo_character =
  
  ## fo:characterフローは、表示用のグリフにマップされている文字を表します。これは、 	フォーマッタ の原子単位です。
  element character { fo_character.attlist, fo_character.model }
fo_character.model = empty
fo_character.attlist =
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-font-properties,
  common-hyphenation-properties,
  common-margin-properties-inline,
  alignment-adjust,
  alignment-baseline,
  baseline-shift,
  character,
  color,
  dominant-baseline,
  glyph-orientation-horizontal,
  glyph-orientation-vertical,
  id,
  index-class,
  index-key,
  keep-with-next,
  keep-with-previous,
  letter-spacing,
  line-height,
  score-spaces,
  suppress-at-line-break,
  text-altitude,
  text-decoration,
  text-depth,
  text-shadow,
  text-transform,
  treat-as-word-space,
  vertical-align,
  visibility,
  word-spacing
fo_initial-property-set =
  
  ## fo:initial-property-set 補助フォーマッティングオブジェクトは、fo:blockの最小の行の組版プロパティを指定します。
  element initial-property-set {
    fo_initial-property-set.attlist, fo_initial-property-set.model
  }
fo_initial-property-set.model = empty
fo_initial-property-set.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-font-properties,
  color,
  letter-spacing,
  line-height,
  score-spaces,
  text-decoration,
  text-shadow,
  text-transform,
  word-spacing
fo_external-graphic =
  
  ## fo:external-graphic フローオブジェクトは、グラフィックスデータが fo:element ツリーの外部にあるグラフのために使用されます。
  element external-graphic {
    fo_external-graphic.attlist, fo_external-graphic.model
  }
fo_external-graphic.model = empty
fo_external-graphic.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-margin-properties-inline,
  alignment-adjust,
  alignment-baseline,
  allowed-height-scale,
  allowed-width-scale,
  baseline-shift,
  block-progression-dimension,
  clip,
  content-height,
  content-type,
  content-width,
  display-align,
  dominant-baseline,
  height,
  id,
  index-class,
  index-key,
  inline-progression-dimension,
  keep-with-next,
  keep-with-previous,
  line-height,
  max-height,
  max-width,
  min-height,
  min-width,
  overflow,
  scaling,
  scaling-method,
  src,
  text-align,
  vertical-align,
  width
fo_instream-foreign-object =
  
  ## +fo:instream-foreign-objectフローオブジェクトは、一般的には、 non-XSL 名前空間内のXML要素サブツリーとして、fo:instream-foreign-object の子孫として存在し、行内グラフィックや他の「generic」オブジェクトのために使用されます。
  element instream-foreign-object {
    fo_instream-foreign-object.attlist, fo_instream-foreign-object.model
  }
fo_instream-foreign-object.model = non-xsl & point.fo.list*
fo_instream-foreign-object.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-margin-properties-inline,
  alignment-adjust,
  alignment-baseline,
  allowed-height-scale,
  allowed-width-scale,
  baseline-shift,
  block-progression-dimension,
  clip,
  content-height,
  content-type,
  content-width,
  display-align,
  dominant-baseline,
  height,
  id,
  index-class,
  index-key,
  inline-progression-dimension,
  keep-with-next,
  keep-with-previous,
  line-height,
  max-height,
  max-width,
  min-height,
  min-width,
  overflow,
  scaling,
  scaling-method,
  text-align,
  vertical-align,
  width
fo_inline =
  
  ## fo:inlineフォーマッティングオブジェクトは、一般的な背景のあるテキストの一部を組版や境界線で囲むために使用れています。
  element inline { fo_inline.attlist, fo_inline.model }
fo_inline.model =
  fo_marker*,
  (((text | inline.fo.list | block.fo.list | neutral.fo.list)*
    & inline.out-of-line.fo.list*)
   & point.fo.list*)
fo_inline.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-font-properties,
  common-margin-properties-inline,
  alignment-adjust,
  alignment-baseline,
  baseline-shift,
  block-progression-dimension,
  color,
  dominant-baseline,
  height,
  id,
  index-class,
  index-key,
  inline-progression-dimension,
  keep-together,
  keep-with-next,
  keep-with-previous,
  line-height,
  max-height,
  max-width,
  min-height,
  min-width,
  text-decoration,
  vertical-align,
  visibility,
  width,
  wrap-option
fo_inline-container =
  
  ## fo:inline-containerフローオブジェクトは、 一般的には、異なるwriting-modeのテキストブロックを持って、行内 reference-areaを生成するために使用されます。 
  element inline-container {
    fo_inline-container.attlist, fo_inline-container.model
  }
fo_inline-container.model =
  fo_marker*,
  ((block.fo.list | neutral.fo.list.block)+ & point.fo.list*)
fo_inline-container.attlist =
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-margin-properties-inline,
  alignment-adjust,
  alignment-baseline,
  baseline-shift,
  block-progression-dimension,
  clip,
  display-align,
  dominant-baseline,
  height,
  id,
  index-class,
  index-key,
  inline-progression-dimension,
  keep-together,
  keep-with-next,
  keep-with-previous,
  line-height,
  max-height,
  max-width,
  min-height,
  min-width,
  overflow,
  reference-orientation,
  vertical-align,
  width,
  writing-mode
fo_leader =
  
  ## fo:leaderはよく使用されている。
  element leader { fo_leader.attlist, fo_leader.model }
fo_leader.model =
  ((text | inline.fo.list | neutral.fo.list.inline)*
   & inline.out-of-line.fo.list*)
  & point.fo.list*
fo_leader.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-font-properties,
  common-margin-properties-inline,
  alignment-adjust,
  alignment-baseline,
  baseline-shift,
  color,
  dominant-baseline,
  id,
  index-class,
  index-key,
  keep-with-next,
  keep-with-previous,
  leader-alignment,
  leader-length,
  leader-pattern,
  leader-pattern-width,
  letter-spacing,
  line-height,
  rule-style,
  rule-thickness,
  text-altitude,
  text-depth,
  text-shadow,
  vertical-align,
  visibility,
  word-spacing
fo_page-number =
  
  ## fo:page-numberフォーマッティングオブジェクトは、その内容の行内領域が配置されている page-numberのページである 行内領域を得るために使用されます。
  element page-number { fo_page-number.attlist, fo_page-number.model }
fo_page-number.model = empty
fo_page-number.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-font-properties,
  common-margin-properties-inline,
  alignment-adjust,
  alignment-baseline,
  baseline-shift,
  dominant-baseline,
  id,
  index-class,
  index-key,
  keep-with-next,
  keep-with-previous,
  letter-spacing,
  line-height,
  score-spaces,
  text-altitude,
  text-decoration,
  text-depth,
  text-shadow,
  text-transform,
  vertical-align,
  visibility,
  word-spacing,
  wrap-option
fo_page-number-citation =
  
  ## fo:page-number-citationは、引用されたフォーマッティングオブジェクトによって返される最初の正規領域を含むページのpage-numberを参照するために使用されます。
  element page-number-citation {
    fo_page-number-citation.attlist, fo_page-number-citation.model
  }
fo_page-number-citation.model = empty
fo_page-number-citation.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-font-properties,
  common-margin-properties-inline,
  alignment-adjust,
  alignment-baseline,
  baseline-shift,
  dominant-baseline,
  id,
  index-class,
  index-key,
  keep-with-next,
  keep-with-previous,
  letter-spacing,
  line-height,
  ref-id,
  score-spaces,
  text-altitude,
  text-decoration,
  text-depth,
  text-shadow,
  text-transform,
  vertical-align,
  visibility,
  word-spacing,
  wrap-option
fo_page-number-citation-last =
  
  ## fo:page-number-citation-lastの（a）は、引用されたフォーマッティングオブジェクトによって返される最後の正ページのpage-numberを参照するために使用される、  （b）に指定されたpage-citation-strategyと一致している area-class があります。
  element page-number-citation-last {
    fo_page-number-citation-last.attlist,
    fo_page-number-citation-last.model
  }
fo_page-number-citation-last.model = empty
fo_page-number-citation-last.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-font-properties,
  common-margin-properties-inline,
  alignment-adjust,
  alignment-baseline,
  baseline-shift,
  dominant-baseline,
  id,
  index-class,
  index-key,
  keep-with-next,
  keep-with-previous,
  letter-spacing,
  line-height,
  page-citation-strategy,
  ref-id,
  score-spaces,
  text-altitude,
  text-decoration,
  text-depth,
  text-shadow,
  text-transform,
  vertical-align,
  visibility,
  word-spacing,
  wrap-option
fo_folio-prefix =
  
  ## fo:folio-prefix フォーマッティングオブジェクトは、page-sequence内のフォリオ番号の静的な接頭を指定します。
  element folio-prefix { fo_folio-prefix.model }
fo_folio-prefix.model =
  (text | inline.fo.list | neutral.fo.list.inline)*
  & inline.out-of-line.fo.list*
fo_folio-suffix =
  
  ## fo:folio-suffix フォーマッティングオブジェクトは、page-sequence内のフォリオ番号の静的な接尾を指定します。
  element folio-suffix { fo_folio-suffix.model }
fo_folio-suffix.model =
  (text | inline.fo.list | neutral.fo.list.inline)*
  & inline.out-of-line.fo.list*
fo_scaling-value-citation =
  
  ## fo:scaling-value-citationは、引用された fo:external-graphicに適用される
  ## scale-factorを得るために使用されます。
  element scaling-value-citation {
    fo_scaling-value-citation.attlist, fo_scaling-value-citation.model
  }
fo_scaling-value-citation.model = empty
fo_scaling-value-citation.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-font-properties,
  common-margin-properties-inline,
  alignment-adjust,
  alignment-baseline,
  baseline-shift,
  country,
  dominant-baseline,
  format,
  grouping-separator,
  grouping-size,
  id,
  index-class,
  index-key,
  intrinsic-scale-value,
  keep-with-next,
  keep-with-previous,
  language,
  letter-spacing,
  letter-value,
  line-height,
  ref-id,
  scale-option,
  score-spaces,
  text-altitude,
  text-decoration,
  text-depth,
  text-shadow,
  text-transform,
  vertical-align,
  visibility,
  word-spacing,
  wrap-option
fo_table-and-caption =
  
  ## fo:table-and-caption フローオブジェクトは、キャプションと一緒に表を組版するために使用されます。
  element table-and-caption {
    fo_table-and-caption.attlist, fo_table-and-caption.model
  }
fo_table-and-caption.model =
  fo_marker*,
  ((fo_table-caption?, fo_table) & point.fo.list*)
fo_table-and-caption.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-margin-properties-block,
  break-after,
  break-before,
  caption-side,
  clear,
  id,
  index-class,
  index-key,
  intrusion-displace,
  keep-together,
  keep-with-next,
  keep-with-previous,
  page-break-after,
  page-break-before,
  text-align
fo_table =
  
  ## fo:table フローオブジェクトは、 表の表形式の資料を組版すれために使用されます。
  element table { fo_table.attlist, fo_table.model }
fo_table.model =
  fo_marker*,
  ((fo_table-column*,
    fo_table-header?,
    fo_table-footer?,
    fo_table-body+)
   & point.fo.list*)
fo_table.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-margin-properties-block,
  block-progression-dimension,
  border-after-precedence,
  border-before-precedence,
  border-collapse,
  border-end-precedence,
  border-separation,
  border-start-precedence,
  break-after,
  break-before,
  clear,
  height,
  id,
  index-class,
  index-key,
  inline-progression-dimension,
  intrusion-displace,
  keep-together,
  keep-with-next,
  keep-with-previous,
  max-height,
  max-width,
  min-height,
  min-width,
  page-break-after,
  page-break-before,
  table-layout,
  table-omit-footer-at-break,
  table-omit-header-at-break,
  width,
  writing-mode
fo_table-column =
  
  ## fo:table-column 補助フォーマッティングオブジェクトは、同様段と全長のあるテーブルセルに適用可能な特性を指定します。最も重要なプロパティは、「column-width」 プロパティです。
  element table-column {
    fo_table-column.attlist, fo_table-column.model
  }
fo_table-column.model = empty
fo_table-column.attlist =
  common-border-padding-and-background-properties,
  border-after-precedence,
  border-before-precedence,
  border-end-precedence,
  border-start-precedence,
  column-number,
  column-width,
  number-columns-repeated,
  number-columns-spanned,
  visibility
fo_table-caption =
  
  ## fo:table-caption フォーマッティングオブジェクトは、fo:table-and-captionを使用しているだけにテーブルキャプションを含む block-level フォーマッティングオブジェクトを格納するために使用されます
  element table-caption {
    fo_table-caption.attlist, fo_table-caption.model
  }
fo_table-caption.model =
  fo_marker*,
  ((block.fo.list | neutral.fo.list.block)+ & point.fo.list*)
fo_table-caption.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  block-progression-dimension,
  height,
  id,
  index-class,
  index-key,
  inline-progression-dimension,
  intrusion-displace,
  keep-together,
  max-height,
  max-width,
  min-height,
  min-width,
  width
fo_table-header =
  
  ## fo:table-header フォーマッティングオブジェクトは、 テーブルヘッダの内容を含むために使用されます。
  element table-header {
    fo_table-header.attlist, fo_table-header.model
  }
fo_table-header.model =
  fo_marker*,
  (((fo_retrieve-table-marker | fo_table-row)+
    | (fo_retrieve-table-marker | fo_table-cell)+)
   & point.fo.list*)
fo_table-header.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  border-after-precedence,
  border-before-precedence,
  border-end-precedence,
  border-start-precedence,
  id,
  index-class,
  index-key,
  visibility
fo_table-footer =
  
  ## fo:table-footer フォーマッティングオブジェクトは、 テーブルフッタの内容を含むために使用されます。
  element table-footer {
    fo_table-footer.attlist, fo_table-footer.model
  }
fo_table-footer.model =
  fo_marker*,
  (((fo_retrieve-table-marker | fo_table-row)+
    | (fo_retrieve-table-marker | fo_table-cell)+)
   & point.fo.list*)
fo_table-footer.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  border-after-precedence,
  border-before-precedence,
  border-end-precedence,
  border-start-precedence,
  id,
  index-class,
  index-key,
  visibility
fo_table-body =
  
  ## fo:table-body フォーマッティングオブジェクトは、 テーブル本体の内容を含むために使用されます。
  element table-body { fo_table-body.attlist, fo_table-body.model }
fo_table-body.model =
  fo_marker*,
  ((fo_table-row+ | fo_table-cell+) & point.fo.list*)
fo_table-body.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  border-after-precedence,
  border-before-precedence,
  border-end-precedence,
  border-start-precedence,
  id,
  index-class,
  index-key,
  visibility
fo_table-row =
  
  ## fo:table-row フォーマッティングオブジェクトは、 行に グループのtable-cellsに使用されます。  table-rowの全てのtable-cellsは、テーブルグリッド上の同様な幾何学 行で開始します。
  element table-row { fo_table-row.attlist, fo_table-row.model }
fo_table-row.model = fo_marker*, (fo_table-cell+ & point.fo.list*)
fo_table-row.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  block-progression-dimension,
  border-after-precedence,
  border-before-precedence,
  border-end-precedence,
  border-start-precedence,
  break-after,
  break-before,
  height,
  id,
  index-class,
  index-key,
  keep-together,
  keep-with-next,
  keep-with-previous,
  page-break-after,
  page-break-before,
  visibility
fo_table-cell =
  
  ## fo:table-cell フォーマッティングオブジェクトは、内容を集めて、テーブルセル内に配置されるために使用されます。 
  element table-cell { fo_table-cell.attlist, fo_table-cell.model }
fo_table-cell.model =
  fo_marker*,
  ((block.fo.list | neutral.fo.list.block)+ & point.fo.list*)
fo_table-cell.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  block-progression-dimension,
  border-after-precedence,
  border-before-precedence,
  border-end-precedence,
  border-start-precedence,
  column-number,
  display-align,
  empty-cells,
  ends-row,
  height,
  id,
  index-class,
  index-key,
  inline-progression-dimension,
  max-height,
  max-width,
  min-height,
  min-width,
  number-columns-spanned,
  number-rows-spanned,
  relative-align,
  starts-row,
  width
fo_list-block =
  
  ## fo:list-blockフローはリストを組版するために使用される。 .
  element list-block { fo_list-block.attlist, fo_list-block.model }
fo_list-block.model = fo_marker*, (fo_list-item+ & point.fo.list*)
fo_list-block.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-margin-properties-block,
  break-after,
  break-before,
  clear,
  id,
  index-class,
  index-key,
  intrusion-displace,
  keep-together,
  keep-with-next,
  keep-with-previous,
  page-break-after,
  page-break-before,
  provisional-distance-between-starts,
  provisional-label-separation
fo_list-item =
  
  ## fo:list-item フォーマッティングオブジェクトは、 リスト内に項目のラベルと本体が含まれています。
  element list-item { fo_list-item.attlist, fo_list-item.model }
fo_list-item.model =
  fo_marker*,
  ((fo_list-item-label, fo_list-item-body) & point.fo.list*)
fo_list-item.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-margin-properties-block,
  break-after,
  break-before,
  id,
  index-class,
  index-key,
  intrusion-displace,
  keep-together,
  keep-with-next,
  keep-with-previous,
  page-break-after,
  page-break-before,
  relative-align
fo_list-item-body =
  
  ## fo:list-item-bodyフォーマッティングオブジェクトは、 list-itemの本体の内容が含まれています。 
  element list-item-body {
    fo_list-item-body.attlist, fo_list-item-body.model
  }
fo_list-item-body.model =
  fo_marker*,
  ((block.fo.list | neutral.fo.list.block)+ & point.fo.list*)
fo_list-item-body.attlist =
  common-accessibility-properties,
  id,
  index-class,
  index-key,
  keep-together
fo_list-item-label =
  
  ## fo:list-item-label フォーマッティングオブジェクトは、 list-itemの本体の内容が含まれて、一般的に、列挙、識別、又は list-itemの本体を飾り付けるためにも使用されます。
  element list-item-label {
    fo_list-item-label.attlist, fo_list-item-label.model
  }
fo_list-item-label.model =
  fo_marker*,
  ((block.fo.list | neutral.fo.list.block)+ & point.fo.list*)
fo_list-item-label.attlist =
  common-accessibility-properties,
  id,
  index-class,
  index-key,
  keep-together
fo_basic-link =
  
  ## fo:basic-linkは、単純なone-directional single-target リンクのスタートリソースを表すために使用されます。オブジェクトは、一般的に含む領域のいずれかをクリックすることで、先のリソースの走査を許します。
  element basic-link { fo_basic-link.attlist, fo_basic-link.model }
fo_basic-link.model =
  fo_marker*,
  (((text | inline.fo.list | block.fo.list | neutral.fo.list)*
    & inline.out-of-line.fo.list*)
   & point.fo.list*)
fo_basic-link.attlist =
  common-accessibility-properties,
  common-border-padding-and-background-properties,
  common-relative-position-properties,
  common-margin-properties-inline,
  alignment-adjust,
  alignment-baseline,
  baseline-shift,
  destination-placement-offset,
  dominant-baseline,
  external-destination,
  id,
  index-class,
  index-key,
  indicate-destination,
  internal-destination,
  keep-together,
  keep-with-next,
  keep-with-previous,
  line-height,
  show-destination,
  target-presentation-context,
  target-processing-context,
  target-stylesheet,
  vertical-align
fo_multi-switch =
  
  ## fo:multi-switchは、 フォーマッティングオブジェクトの代替 sub-trees（fo:multi-case内にある各sub-tree）の仕様をラップし、別の代替（ fo:multi-toggleを通じて活性化）からの切り替えを制御します。 
  element multi-switch {
    fo_multi-switch.attlist, fo_multi-switch.model
  }
fo_multi-switch.model = fo_multi-case+ & point.fo.list*
fo_multi-switch.attlist =
  common-accessibility-properties,
  auto-restore,
  id,
  index-class,
  index-key
fo_multi-case =
  
  ## fo:multi-caseは、（fo:multi-switch内にある）、親のfo:multi-switchが表示するものを選択し、残りの部分を隠して、その中でフォーマッティングオブジェクトの各代替 sub-treeを格納するために使用されます。 
  element multi-case { fo_multi-case.attlist, fo_multi-case.model }
fo_multi-case.model =
  ((text | inline.fo.list | block.fo.list | neutral.fo.list)*
   & inline.out-of-line.fo.list*)
  & point.fo.list*
fo_multi-case.attlist =
  common-accessibility-properties,
  case-name,
  case-title,
  id,
  index-class,
  index-key,
  starting-state
fo_multi-toggle =
  
  ## fo:multi-toggleは、一般的に、動かす（例えば、「clicked」として実装されている）ときに別のfo:multi-caseの切り替えの効果を有すること領域を定めるために使用されます。 fo:multi-toggleの「switch-to」プロパティの値は一般的に切り替えるfo:multi-caseの「case-name」プロパティのと一致します。
  element multi-toggle {
    fo_multi-toggle.attlist, fo_multi-toggle.model
  }
fo_multi-toggle.model =
  ((text | inline.fo.list | block.fo.list | neutral.fo.list)*
   & inline.out-of-line.fo.list*)
  & point.fo.list*
fo_multi-toggle.attlist =
  common-accessibility-properties, id, index-class, index-key, switch-to
fo_multi-properties =
  
  ## fo:multi-properties は、内容の振り当たった部分に関連された二つ以上のプロパティセットの間で切り替えるために使用されます。
  element multi-properties {
    fo_multi-properties.attlist, fo_multi-properties.model
  }
fo_multi-properties.model =
  (fo_multi-property-set+, fo_wrapper) & point.fo.list*
fo_multi-properties.attlist = common-accessibility-properties
fo_multi-property-set =
  
  ## fo:multi-property-set 補助フォーマッティングオブジェクトは、このfo:multi-property-setの親のfo:wrapper子のフローオブジェクトの子の代替表示を備えるために、使用できる組版プロパティの別のセットを指定するために使用されます。
  element multi-property-set {
    fo_multi-property-set.attlist, fo_multi-property-set.model
  }
fo_multi-property-set.model = empty
fo_multi-property-set.attlist = active-state, id, index-class, index-key
fo_index-page-number-prefix =
  
  ## fo:index-page-number-prefix フォーマッティングオブジェクトは、 fo:index-key-referenceによって作成された引用されたページ項目の静的な接頭を指定します。
  element index-page-number-prefix { fo_index-page-number-prefix.model }
fo_index-page-number-prefix.model =
  ((text | inline.fo.list | neutral.fo.list.inline)*
   & inline.out-of-line.fo.list*)
  & point.fo.list*
fo_index-page-number-suffix =
  
  ## fo:index-page-number-suffixフォーマッティングオブジェクトは、 fo:index-key-referenceによって作成された引用されたページ項目の静的な接尾を指定します。
  element index-page-number-suffix { fo_index-page-number-suffix.model }
fo_index-page-number-suffix.model =
  ((text | inline.fo.list | neutral.fo.list.inline)*
   & inline.out-of-line.fo.list*)
  & point.fo.list*
fo_index-range-begin =
  
  ## fo:index-range-begin フォーマッティングオブジェクトは、索引きーに関連付けられた「indexed range」の開始を示すために使用されます。The index range is ended by a corresponding fo:index-range-end.
  element index-range-begin {
    fo_index-range-begin.attlist, fo_index-range-begin.model
  }
fo_index-range-begin.model = empty
fo_index-range-begin.attlist = id, index-class, index-key
fo_index-range-end =
  
  ## The fo:index-range-end is used to indicate the end of an "indexed range" that is started by its matching fo:index-range-begin. 詳細については、参照して下さい。
  element index-range-end {
    fo_index-range-end.attlist, fo_index-range-end.model
  }
fo_index-range-end.model = empty
fo_index-range-end.attlist = ref-id
fo_index-key-reference =
  
  ## The fo:index-key-reference formatting object is used to generate a set of cited page items for all the occurrences of the specified index-key.
  element index-key-reference {
    fo_index-key-reference.attlist, fo_index-key-reference.model
  }
fo_index-key-reference.model =
  (fo_index-page-number-prefix?, fo_index-page-number-suffix?)
  & point.fo.list*
fo_index-key-reference.attlist = page-number-treatment, ref-index-key
fo_index-page-citation-list =
  
  ## The fo:index-page-citation-list formatting object is used to group together the sets of cited page items generated by its fo:index-key-reference children. Each fo:index-key-reference child provides formatting properties for the corresponding cited page items. The resulting cited page items are sorted and collated together. The ultimate effect of the fo:index-page-citation-list is to generate a formatted list of page numbers and ranges.
  element index-page-citation-list {
    fo_index-page-citation-list.attlist,
    fo_index-page-citation-list.model
  }
fo_index-page-citation-list.model =
  (fo_index-page-citation-list-separator?,
   fo_index-page-citation-range-separator?,
   fo_index-key-reference+)
  & point.fo.list*
fo_index-page-citation-list.attlist =
  merge-pages-across-index-key-references,
  merge-ranges-across-index-key-references,
  merge-sequential-page-numbers
fo_index-page-citation-list-separator =
  
  ## The fo:index-page-citation-list-separator formatting object specifies the formatting objects used to separate singleton page numbers or page number ranges in the generated list of page numbers.
  element index-page-citation-list-separator {
    fo_index-page-citation-list-separator.model
  }
fo_index-page-citation-list-separator.model =
  ((text | inline.fo.list | neutral.fo.list.inline)*
   & inline.out-of-line.fo.list*)
  & point.fo.list*
fo_index-page-citation-range-separator =
  
  ## The fo:index-page-citation-range-separator formatting object specifies the formatting objects used to separate two page numbers forming a range in the generated list of page numbers.
  element index-page-citation-range-separator {
    fo_index-page-citation-range-separator.model
  }
fo_index-page-citation-range-separator.model =
  ((text | inline.fo.list | neutral.fo.list.inline)*
   & inline.out-of-line.fo.list*)
  & point.fo.list*
fo_bookmark-tree =
  
  ## The fo:bookmark-tree formatting object is used to hold a list of access points within the document such as a table of contents, a list of figures or tables, etc. Each access point is called a bookmark.
  element bookmark-tree { fo_bookmark-tree.model }
fo_bookmark-tree.model = fo_bookmark+
fo_bookmark =
  
  ## The fo:bookmark formatting object is used to identify an access point, by name, and to specify where that access point is within the current document or another external document. A given bookmark may be further subdivided into a sequence of (sub-)bookmarks to as many levels as the authors desire.
  element bookmark { fo_bookmark.attlist, fo_bookmark.model }
fo_bookmark.model = (fo_bookmark-title, fo_bookmark*) & point.fo.list*
fo_bookmark.attlist =
  common-accessibility-properties,
  external-destination,
  internal-destination,
  starting-state
fo_bookmark-title =
  
  ## The fo:bookmark-title formatting object is used to identify, in human readable form, an access point.
  element bookmark-title {
    fo_bookmark-title.attlist, fo_bookmark-title.model
  }
fo_bookmark-title.model = text & point.fo.list*
fo_bookmark-title.attlist =
  common-accessibility-properties, color, font-style, font-weight
fo_float =
  
  ## The fo:float formatting object is typically used either to cause an image to be positioned in a separate area at the beginning of a page, or to cause an image to be positioned to one side, with normal content flowing around and along-side the image.
  element float { fo_float.attlist, fo_float.model }
fo_float.model =
  (block.fo.list | neutral.fo.list.block)+ & point.fo.list*
fo_float.attlist = clear, float, id, index-class, index-key
fo_footnote =
  
  ## The fo:footnote is typically used to produce footnote-citations within the region-body of a page and the corresponding footnote in a separate area nearer the after-edge of the page.
  element footnote { fo_footnote.attlist, fo_footnote.model }
fo_footnote.model = (fo_inline, fo_footnote-body) & point.fo.list*
fo_footnote.attlist =
  common-accessibility-properties, id, index-class, index-key
fo_footnote-body =
  
  ## The fo:footnote-body is used to generate the footnote content.
  element footnote-body {
    fo_footnote-body.attlist, fo_footnote-body.model
  }
fo_footnote-body.model =
  (block.fo.list | neutral.fo.list.block)+ & point.fo.list*
fo_footnote-body.attlist =
  common-accessibility-properties, id, index-class, index-key
fo_change-bar-begin =
  
  ## The fo:change-bar-begin is used to indicate the beginning of a "change region" that is ended by the subsequent fo:change-bar-end whose change-bar-class property value matches that of the change-bar-class property on this fo:change-bar-begin and is at the same nesting level (relative to other fo:change-bar-begin/fo:change-bar-end pairs with the same change-bar-class property value) of this fo:change-bar-begin.
  element change-bar-begin {
    fo_change-bar-begin.attlist, fo_change-bar-begin.model
  }
fo_change-bar-begin.model = empty
fo_change-bar-begin.attlist =
  common-accessibility-properties,
  change-bar-class,
  change-bar-color,
  change-bar-offset,
  change-bar-placement,
  change-bar-style,
  change-bar-width,
  z-index
fo_change-bar-end =
  
  ## The fo:change-bar-end is used to indicate the end of a "change region" that is started by its matching fo:change-bar-begin. 詳細については、参照して下さい。
  element change-bar-end {
    fo_change-bar-end.attlist, fo_change-bar-end.model
  }
fo_change-bar-end.model = empty
fo_change-bar-end.attlist =
  common-accessibility-properties, change-bar-class
fo_wrapper =
  
  ## 仕様項目グループの継承されたプロパティを指定するとfo:wrapperを使用しています。
  element wrapper { fo_wrapper.attlist, fo_wrapper.model }
fo_wrapper.model =
  fo_marker*,
  (((text | inline.fo.list | block.fo.list | neutral.fo.list)*
    & inline.out-of-line.fo.list*)
   & point.fo.list*)
fo_wrapper.attlist = id, index-class, index-key
fo_marker =
  
  ## The fo:marker is used in conjunction with fo:retrieve-marker or fo:retrieve-table-marker to produce running headers or footers and dynamic table headers or footers. Typical examples include:
  element marker { fo_marker.attlist, fo_marker.model }
fo_marker.model =
  (((text | inline.fo.list | block.fo.list | neutral.fo.list)*
    | fo_table-row+
    | fo_table-cell+)
   & inline.out-of-line.fo.list*)
  & point.fo.list*
fo_marker.attlist = marker-class-name
fo_retrieve-marker =
  
  ## The fo:retrieve-marker is used in conjunction with fo:marker to produce running headers or footers. Typical examples include:
  element retrieve-marker {
    fo_retrieve-marker.attlist, fo_retrieve-marker.model
  }
fo_retrieve-marker.model = empty
fo_retrieve-marker.attlist =
  retrieve-boundary, retrieve-class-name, retrieve-position
fo_retrieve-table-marker =
  
  ## The fo:retrieve-table-marker is used in conjunction with fo:marker to produce table-headers and table-footers whose content can change over different pages, different regions or different columns.
  element retrieve-table-marker {
    fo_retrieve-table-marker.attlist, fo_retrieve-table-marker.model
  }
fo_retrieve-table-marker.model = empty
fo_retrieve-table-marker.attlist =
  retrieve-boundary-within-table,
  retrieve-class-name,
  retrieve-position-within-table
# 
# Property groups
#

# Property groups also include applicable shorthands that expand to
# properties defined in the property group in the XSL spec.
common-accessibility-properties = role, source-document
common-absolute-position-properties =
  absolute-position, bottom, left, position, right, top
common-border-padding-and-background-properties =
  background,
  background-attachment,
  background-color,
  background-image,
  background-position,
  background-position-horizontal,
  background-position-vertical,
  background-repeat,
  border,
  border-after-color,
  border-after-style,
  border-after-width,
  border-before-color,
  border-before-style,
  border-before-width,
  border-bottom,
  border-bottom-color,
  border-bottom-style,
  border-bottom-width,
  border-color,
  border-end-color,
  border-end-style,
  border-end-width,
  border-left,
  border-left-color,
  border-left-style,
  border-left-width,
  border-right,
  border-right-color,
  border-right-style,
  border-right-width,
  border-start-color,
  border-start-style,
  border-start-width,
  border-style,
  border-top,
  border-top-color,
  border-top-style,
  border-top-width,
  border-width,
  padding,
  padding-after,
  padding-before,
  padding-bottom,
  padding-end,
  padding-left,
  padding-right,
  padding-start,
  padding-top
common-font-properties =
  font-family,
  font-selection-strategy,
  font-size,
  font-size-adjust,
  font-stretch,
  font-style,
  font-variant,
  font-weight
common-hyphenation-properties =
  country,
  hyphenate,
  hyphenation-character,
  hyphenation-push-character-count,
  hyphenation-remain-character-count,
  language,
  script
common-margin-properties-block =
  end-indent,
  margin,
  margin-bottom,
  margin-left,
  margin-right,
  margin-top,
  space-after,
  space-before,
  start-indent
common-margin-properties-inline =
  margin,
  margin-bottom,
  margin-left,
  margin-right,
  margin-top,
  space-end,
  space-start
common-relative-position-properties =
  bottom, left, position, relative-position, right, top
area-alignment =
  alignment-adjust,
  alignment-baseline,
  baseline-shift,
  display-align,
  dominant-baseline,
  relative-align
writing-mode-related =
  direction,
  glyph-orientation-horizontal,
  glyph-orientation-vertical,
  text-altitude,
  text-depth,
  unicode-bidi,
  writing-mode
# Properties
absolute-position =
  
  ## auto | absolute | fixed | inherit
  attribute absolute-position { text }?
active-state =
  
  ## link | visited | active | hover | focus
  attribute active-state { text }
alignment-adjust =
  
  ## auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical | <percentage> | <length> | inherit
  attribute alignment-adjust { text }?
alignment-baseline =
  
  ## auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical | inherit
  attribute alignment-baseline { text }?
allowed-height-scale =
  
  ## [ any | <percentage> ]* | inherit
  attribute allowed-height-scale { text }?
allowed-width-scale =
  
  ## [ any | <percentage> ]* | inherit
  attribute allowed-width-scale { text }?
auto-restore =
  
  ## true | false
  attribute auto-restore { text }?
background =
  
  ## [<background-color> || <background-image> || <background-repeat> || <background-attachment> || <background-position> ]] | inherit
  attribute background { text }?
background-attachment =
  
  ## scroll | fixed | inherit
  attribute background-attachment { text }?
background-color =
  
  ## <color> | transparent | inherit
  attribute background-color { text }?
background-image =
  
  ## <uri-specification> | none | inherit
  attribute background-image { text }?
background-position =
  
  ## [ [<percentage> | <length> ]{1,2} | [ [top | center | bottom] || [left | center | right] ] ] | inherit
  attribute background-position { text }?
background-position-horizontal =
  
  ## <percentage> | <length> | left | center | right | inherit
  attribute background-position-horizontal { text }?
background-position-vertical =
  
  ## <percentage> | <length> | top | center | bottom | inherit
  attribute background-position-vertical { text }?
background-repeat =
  
  ## repeat | repeat-x | repeat-y | no-repeat | inherit
  attribute background-repeat { text }?
baseline-shift =
  
  ## baseline | sub | super | <percentage> | <length> | inherit
  attribute baseline-shift { text }?
blank-or-not-blank =
  
  ## blank | not-blank | any | inherit
  attribute blank-or-not-blank { text }?
block-progression-dimension =
  
  ## auto | <length> | <percentage> | <length-range> | inherit
  attribute block-progression-dimension { text }?,
  attribute block-progression-dimension.minimum { text }?,
  attribute block-progression-dimension.optimum { text }?,
  attribute block-progression-dimension.maximum { text }?
border =
  
  ## [ <border-width> || <border-style> || [ <color> | transparent ] ] | inherit
  attribute border { text }?
border-after-color =
  
  ## <color> | transparent | inherit
  attribute border-after-color { text }?
border-after-precedence =
  
  ## force | <integer> | inherit
  attribute border-after-precedence { text }?
border-after-style =
  
  ## <border-style> | inherit
  attribute border-after-style { text }?
border-after-width =
  
  ## <border-width> | <length-conditional> | inherit
  attribute border-after-width { text }?,
  attribute border-after-width.length { text }?,
  attribute border-after-width.conditionality { text }?
border-before-color =
  
  ## <color> | transparent | inherit
  attribute border-before-color { text }?
border-before-precedence =
  
  ## force | <integer> | inherit
  attribute border-before-precedence { text }?
border-before-style =
  
  ## <border-style> | inherit
  attribute border-before-style { text }?
border-before-width =
  
  ## <border-width> | <length-conditional> | inherit
  attribute border-before-width { text }?,
  attribute border-before-width.length { text }?,
  attribute border-before-width.conditionality { text }?
border-bottom =
  
  ## [ <border-width> || <border-style> || [ <color> | transparent ] ] | inherit
  attribute border-bottom { text }?
border-bottom-color =
  
  ## <color> | transparent | inherit
  attribute border-bottom-color { text }?
border-bottom-style =
  
  ## <border-style> | inherit
  attribute border-bottom-style { text }?
border-bottom-width =
  
  ## <border-width> | inherit
  attribute border-bottom-width { text }?
border-collapse =
  
  ## collapse | collapse-with-precedence | separate | inherit
  attribute border-collapse { text }?
border-color =
  
  ## [ <color> | transparent ]{1,4} | inherit
  attribute border-color { text }?
border-end-color =
  
  ## <color> | transparent | inherit
  attribute border-end-color { text }?
border-end-precedence =
  
  ## force | <integer> | inherit
  attribute border-end-precedence { text }?
border-end-style =
  
  ## <border-style> | inherit
  attribute border-end-style { text }?
border-end-width =
  
  ## <border-width> | <length-conditional> | inherit
  attribute border-end-width { text }?,
  attribute border-end-width.length { text }?,
  attribute border-end-width.conditionality { text }?
border-left =
  
  ## [ <border-width> || <border-style> || [ <color> | transparent ] ] | inherit
  attribute border-left { text }?
border-left-color =
  
  ## <color> | transparent | inherit
  attribute border-left-color { text }?
border-left-style =
  
  ## <border-style> | inherit
  attribute border-left-style { text }?
border-left-width =
  
  ## <border-width> | inherit
  attribute border-left-width { text }?
border-right =
  
  ## [ <border-width> || <border-style> || [ <color> | transparent ] ] | inherit
  attribute border-right { text }?
border-right-color =
  
  ## <color> | transparent | inherit
  attribute border-right-color { text }?
border-right-style =
  
  ## <border-style> | inherit
  attribute border-right-style { text }?
border-right-width =
  
  ## <border-width> | inherit
  attribute border-right-width { text }?
border-separation =
  
  ## <length-bp-ip-direction> | inherit
  attribute border-separation { text }?
border-spacing =
  
  ## <length> <length>? | inherit
  attribute border-spacing { text }?
border-start-color =
  
  ## <color> | transparent | inherit
  attribute border-start-color { text }?
border-start-precedence =
  
  ## force | <integer> | inherit
  attribute border-start-precedence { text }?
border-start-style =
  
  ## <border-style> | inherit
  attribute border-start-style { text }?
border-start-width =
  
  ## <border-width> | <length-conditional> | inherit
  attribute border-start-width { text }?,
  attribute border-start-width.length { text }?,
  attribute border-start-width.conditionality { text }?
border-style =
  
  ## <border-style>{1,4} | inherit
  attribute border-style { text }?
border-top =
  
  ## [ <border-width> || <border-style> || [ <color> | transparent ] ] | inherit
  attribute border-top { text }?
border-top-color =
  
  ## <color> | transparent | inherit
  attribute border-top-color { text }?
border-top-style =
  
  ## <border-style> | inherit
  attribute border-top-style { text }?
border-top-width =
  
  ## <border-width> | inherit
  attribute border-top-width { text }?
border-width =
  
  ## <border-width>{1,4} | inherit
  attribute border-width { text }?
bottom =
  
  ## <length> | <percentage> | auto | inherit
  attribute bottom { text }?
break-after =
  
  ## auto | column | page | even-page | odd-page | inherit
  attribute break-after { text }?
break-before =
  
  ## auto | column | page | even-page | odd-page | inherit
  attribute break-before { text }?
caption-side =
  
  ## before | after | start | end | top | bottom | left | right | inherit
  attribute caption-side { text }?
case-name =
  
  ## <name>
  attribute case-name { xsd:NCName }
case-title =
  
  ## <string>
  attribute case-title { text }
change-bar-class =
  
  ## <name>
  attribute change-bar-class { xsd:NCName }
change-bar-color =
  
  ## <color>
  attribute change-bar-color { text }?
change-bar-offset =
  
  ## <length>
  attribute change-bar-offset { text }?
change-bar-placement =
  
  ## start | end | left | right | inside | outside | alternate
  attribute change-bar-placement { text }?
change-bar-style =
  
  ## <border-style>
  attribute change-bar-style { text }?
change-bar-width =
  
  ## <border-width>
  attribute change-bar-width { text }?
character =
  
  ## <character>
  attribute character { text }
clear =
  
  ## start | end | left | right | inside | outside | both | none | inherit
  attribute clear { text }?
clip =
  
  ## <shape> | auto | inherit
  attribute clip { text }?
color =
  
  ## <color> | inherit
  attribute color { text }?
color-profile-name =
  
  ## <name> | inherit
  attribute color-profile-name { text }
column-count =
  
  ## <number> | inherit
  attribute column-count { text }?
column-gap =
  
  ## <length> | <percentage> | inherit
  attribute column-gap { text }?
column-number =
  
  ## <number>
  attribute column-number { text }?
column-width =
  
  ## <length> | <percentage>
  attribute column-width { text }?
content-height =
  
  ## auto | scale-to-fit | scale-down-to-fit | scale-up-to-fit | <length> | <percentage> | inherit
  attribute content-height { text }?
content-type =
  
  ## <string> | auto
  attribute content-type { text }?
content-width =
  
  ## auto | scale-to-fit | scale-down-to-fit | scale-up-to-fit | <length> | <percentage> | inherit
  attribute content-width { text }?
country =
  
  ## none | <country> | inherit
  attribute country { text }?
cue =
  
  ## <cue-before> || <cue-after> | inherit
  attribute cue { text }?
destination-placement-offset =
  
  ## <length>
  attribute destination-placement-offset { text }?
direction =
  
  ## ltr | rtl | inherit
  attribute direction { text }?
display-align =
  
  ## auto | before | center | after | inherit
  attribute display-align { text }?
dominant-baseline =
  
  ## auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge | inherit
  attribute dominant-baseline { text }?
empty-cells =
  
  ## show | hide | inherit
  attribute empty-cells { text }?
end-indent =
  
  ## <length> | <percentage> | inherit
  attribute end-indent { text }?
ends-row =
  
  ## true | false
  attribute ends-row { text }?
extent =
  
  ## <length> | <percentage> | inherit
  attribute extent { text }?
external-destination =
  
  ## empty string | <uri-specification>
  attribute external-destination { text }?
float =
  
  ## before | start | end | left | right | inside | outside | none | inherit
  attribute float { text }?
flow-map-name =
  
  ## <name>
  attribute flow-map-name { xsd:NCName }
flow-map-reference =
  
  ## <name>
  attribute flow-map-reference { xsd:NCName }?
flow-name =
  
  ## <name>
  attribute flow-name { xsd:NCName }
flow-name-reference =
  
  ## <name>
  attribute flow-name-reference { xsd:NCName }
font =
  
  ## [ [ <font-style> || <font-variant> || <font-weight> ]?<font-size> [ / <line-height>]?<font-family> ] | caption | icon | menu | message-box | small-caption | status-bar | inherit
  attribute font { text }?
font-family =
  
  ## [[ <family-name> | <generic-family> ],]* [<family-name> | <generic-family>] | inherit
  attribute font-family { text }?
font-selection-strategy =
  
  ## auto | character-by-character | inherit
  attribute font-selection-strategy { text }?
font-size =
  
  ## <absolute-size> | <relative-size> | <length> | <percentage> | inherit
  attribute font-size { text }?
font-size-adjust =
  
  ## <number> | none | inherit
  attribute font-size-adjust { text }?
font-stretch =
  
  ## normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | inherit
  attribute font-stretch { text }?
font-style =
  
  ## normal | italic | oblique | backslant | inherit
  attribute font-style { text }?
font-variant =
  
  ## normal | small-caps | inherit
  attribute font-variant { text }?
font-weight =
  
  ## normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900 | inherit
  attribute font-weight { text }?
force-page-count =
  
  ## auto | even | odd | end-on-even | end-on-odd | no-force | inherit
  attribute force-page-count { text }?
format =
  
  ## <string>
  attribute format { text }?
glyph-orientation-horizontal =
  
  ## <angle> | inherit
  attribute glyph-orientation-horizontal { text }?
glyph-orientation-vertical =
  
  ## auto | <angle> | inherit
  attribute glyph-orientation-vertical { text }?
grouping-separator =
  
  ## <character>
  attribute grouping-separator { text }?
grouping-size =
  
  ## <number>
  attribute grouping-size { text }?
height =
  
  ## <length> | <percentage> | auto | inherit
  attribute height { text }?
hyphenate =
  
  ## false | true | inherit
  attribute hyphenate { text }?
hyphenation-character =
  
  ## <character> | inherit
  attribute hyphenation-character { text }?
hyphenation-keep =
  
  ## auto | column | page | inherit
  attribute hyphenation-keep { text }?
hyphenation-ladder-count =
  
  ## no-limit | <number> | inherit
  attribute hyphenation-ladder-count { text }?
hyphenation-push-character-count =
  
  ## <number> | inherit
  attribute hyphenation-push-character-count { text }?
hyphenation-remain-character-count =
  
  ## <number> | inherit
  attribute hyphenation-remain-character-count { text }?
id =
  
  ## <id>
  attribute id { xsd:ID }?
index-class =
  
  ## <string>
  attribute index-class { text }?
index-key =
  
  ## <string>
  attribute index-key { text }?
indicate-destination =
  
  ## true | false
  attribute indicate-destination { text }?
initial-page-number =
  
  ## auto | auto-odd | auto-even | <number> | inherit
  attribute initial-page-number { text }?
inline-progression-dimension =
  
  ## auto | <length> | <percentage> | <length-range> | inherit
  attribute inline-progression-dimension { text }?,
  attribute inline-progression-dimension.minimum { text }?,
  attribute inline-progression-dimension.optimum { text }?,
  attribute inline-progression-dimension.maximum { text }?
internal-destination =
  
  ## empty string | <idref>
  attribute internal-destination { xsd:IDREF }?
intrinsic-scale-value =
  
  ## <percentage> | inherit
  attribute intrinsic-scale-value { text }?
intrusion-displace =
  
  ## auto | none | line | indent | block | inherit
  attribute intrusion-displace { text }?
keep-together =
  
  ## <keep> | inherit
  attribute keep-together { text }?,
  attribute keep-together.within-line { text }?,
  attribute keep-together.within-column { text }?,
  attribute keep-together.within-page { text }?
keep-with-next =
  
  ## <keep> | inherit
  attribute keep-with-next { text }?,
  attribute keep-with-next.within-line { text }?,
  attribute keep-with-next.within-column { text }?,
  attribute keep-with-next.within-page { text }?
keep-with-previous =
  
  ## <keep> | inherit
  attribute keep-with-previous { text }?,
  attribute keep-with-previous.within-line { text }?,
  attribute keep-with-previous.within-column { text }?,
  attribute keep-with-previous.within-page { text }?
language =
  
  ## none | <language> | inherit
  attribute language { text }?
last-line-end-indent =
  
  ## <length> | <percentage> | inherit
  attribute last-line-end-indent { text }?
leader-alignment =
  
  ## none | reference-area | page | inherit
  attribute leader-alignment { text }?
leader-length =
  
  ## <length-range> | <percentage> | inherit
  attribute leader-length { text }?,
  attribute leader-length.minimum { text }?,
  attribute leader-length.optimum { text }?,
  attribute leader-length.maximum { text }?
leader-pattern =
  
  ## space | rule | dots | use-content | inherit
  attribute leader-pattern { text }?
leader-pattern-width =
  
  ## use-font-metrics | <length> | <percentage> | inherit
  attribute leader-pattern-width { text }?
left =
  
  ## <length> | <percentage> | auto | inherit
  attribute left { text }?
letter-spacing =
  
  ## normal | <length> | <space> | inherit
  attribute letter-spacing { text }?,
  attribute letter-spacing.minimum { text }?,
  attribute letter-spacing.optimum { text }?,
  attribute letter-spacing.maximum { text }?,
  attribute letter-spacing.precedence { text }?,
  attribute letter-spacing.conditionality { text }?
letter-value =
  
  ## auto | alphabetic | traditional
  attribute letter-value { text }?
linefeed-treatment =
  
  ## ignore | preserve | treat-as-space | treat-as-zero-width-space | inherit
  attribute linefeed-treatment { text }?
line-height =
  
  ## normal | <length> | <number> | <percentage> | <space> | inherit
  attribute line-height { text }?,
  attribute line-height.minimum { text }?,
  attribute line-height.optimum { text }?,
  attribute line-height.maximum { text }?,
  attribute line-height.precedence { text }?,
  attribute line-height.conditionality { text }?
line-height-shift-adjustment =
  
  ## consider-shifts | disregard-shifts | inherit
  attribute line-height-shift-adjustment { text }?
line-stacking-strategy =
  
  ## line-height | font-height | max-height | inherit
  attribute line-stacking-strategy { text }?
margin =
  
  ## <margin-width>{1,4} | inherit
  attribute margin { text }?
margin-bottom =
  
  ## <margin-width> | inherit
  attribute margin-bottom { text }?
margin-left =
  
  ## <margin-width> | inherit
  attribute margin-left { text }?
margin-right =
  
  ## <margin-width> | inherit
  attribute margin-right { text }?
margin-top =
  
  ## <margin-width> | inherit
  attribute margin-top { text }?
marker-class-name =
  
  ## <name>
  attribute marker-class-name { xsd:NCName }
master-name =
  
  ## <name>
  attribute master-name { xsd:NCName }
master-reference =
  
  ## <name>
  attribute master-reference { xsd:NCName }
max-height =
  
  ## <length> | <percentage> | none | inherit
  attribute max-height { text }?
maximum-repeats =
  
  ## <number> | no-limit | inherit
  attribute maximum-repeats { text }?
max-width =
  
  ## <length> | <percentage> | none | inherit
  attribute max-width { text }?
media-usage =
  
  ## auto | paginate | bounded-in-one-dimension | unbounded
  attribute media-usage { text }?
merge-pages-across-index-key-references =
  
  ## merge | leave-separate
  attribute merge-pages-across-index-key-references { text }?
merge-ranges-across-index-key-references =
  
  ## merge | leave-separate
  attribute merge-ranges-across-index-key-references { text }?
merge-sequential-page-numbers =
  
  ## merge | leave-separate
  attribute merge-sequential-page-numbers { text }?
min-height =
  
  ## <length> | <percentage> | inherit
  attribute min-height { text }?
min-width =
  
  ## <length> | <percentage> | inherit
  attribute min-width { text }?
number-columns-repeated =
  
  ## <number>
  attribute number-columns-repeated { text }?
number-columns-spanned =
  
  ## <number>
  attribute number-columns-spanned { text }?
number-rows-spanned =
  
  ## <number>
  attribute number-rows-spanned { text }?
odd-or-even =
  
  ## odd | even | any | inherit
  attribute odd-or-even { text }?
orphans =
  
  ## <integer> | inherit
  attribute orphans { text }?
overflow =
  
  ## visible | hidden | scroll | error-if-overflow | repeat | auto | inherit
  attribute overflow { text }?
padding =
  
  ## <padding-width>{1,4} | inherit
  attribute padding { text }?
padding-after =
  
  ## <padding-width> | <length-conditional> | inherit
  attribute padding-after { text }?,
  attribute padding-after.length { text }?,
  attribute padding-after.conditionality { text }?
padding-before =
  
  ## <padding-width> | <length-conditional> | inherit
  attribute padding-before { text }?,
  attribute padding-before.length { text }?,
  attribute padding-before.conditionality { text }?
padding-bottom =
  
  ## <padding-width> | inherit
  attribute padding-bottom { text }?
padding-end =
  
  ## <padding-width> | <length-conditional> | inherit
  attribute padding-end { text }?,
  attribute padding-end.length { text }?,
  attribute padding-end.conditionality { text }?
padding-left =
  
  ## <padding-width> | inherit
  attribute padding-left { text }?
padding-right =
  
  ## <padding-width> | inherit
  attribute padding-right { text }?
padding-start =
  
  ## <padding-width> | <length-conditional> | inherit
  attribute padding-start { text }?,
  attribute padding-start.length { text }?,
  attribute padding-start.conditionality { text }?
padding-top =
  
  ## <padding-width> | inherit
  attribute padding-top { text }?
page-break-after =
  
  ## auto | always | avoid | left | right | inherit
  attribute page-break-after { text }?
page-break-before =
  
  ## auto | always | avoid | left | right | inherit
  attribute page-break-before { text }?
page-break-inside =
  
  ## avoid | auto | inherit
  attribute page-break-inside { text }?
page-citation-strategy =
  
  ## [ all | normal | non-blank | inherit
  attribute page-citation-strategy { text }?
page-height =
  
  ## auto | indefinite | <length> | inherit
  attribute page-height { text }?
page-number-treatment =
  
  ## link | no-link
  attribute page-number-treatment { text }?
page-position =
  
  ## only | first | last | rest | any | inherit
  attribute page-position { text }?
page-width =
  
  ## auto | indefinite | <length> | inherit
  attribute page-width { text }?
pause =
  
  ## [<time> | <percentage>]{1,2} | inherit
  attribute pause { text }?
position =
  
  ## static | relative | absolute | fixed | inherit
  attribute position { text }?
precedence =
  
  ## true | false | inherit
  attribute precedence { text }?
provisional-distance-between-starts =
  
  ## <length> | <percentage> | inherit
  attribute provisional-distance-between-starts { text }?
provisional-label-separation =
  
  ## <length> | <percentage> | inherit
  attribute provisional-label-separation { text }?
reference-orientation =
  
  ## 0 | 90 | 180 | 270 | -90 | -180 | -270 | inherit
  attribute reference-orientation { text }?
ref-id =
  
  ## <idref> | inherit
  attribute ref-id { xsd:IDREF }
ref-index-key =
  
  ## <string>
  attribute ref-index-key { text }
region-name =
  
  ## xsl-region-body | xsl-region-start | xsl-region-end | xsl-region-before | xsl-region-after | <name>
  attribute region-name { text }?
region-name-reference =
  
  ## <name>
  attribute region-name-reference { xsd:NCName }
relative-align =
  
  ## before | baseline | inherit
  attribute relative-align { text }?
relative-position =
  
  ## static | relative | inherit
  attribute relative-position { text }?
rendering-intent =
  
  ## auto | perceptual | relative-colorimetric | saturation | absolute-colorimetric | inherit
  attribute rendering-intent { text }?
retrieve-boundary =
  
  ## page | page-sequence | document
  attribute retrieve-boundary { text }?
retrieve-boundary-within-table =
  
  ## table | table-fragment | page
  attribute retrieve-boundary-within-table { text }?
retrieve-class-name =
  
  ## <name>
  attribute retrieve-class-name { xsd:NCName }
retrieve-position =
  
  ## first-starting-within-page | first-including-carryover | last-starting-within-page | last-ending-within-page
  attribute retrieve-position { text }?
retrieve-position-within-table =
  
  ## first-starting | first-including-carryover | last-starting | last-ending
  attribute retrieve-position-within-table { text }?
right =
  
  ## <length> | <percentage> | auto | inherit
  attribute right { text }?
role =
  
  ## <string> | <uri-specification> | none | inherit
  attribute role { text }?
rule-style =
  
  ## none | dotted | dashed | solid | double | groove | ridge | inherit
  attribute rule-style { text }?
rule-thickness =
  
  ## <length>
  attribute rule-thickness { text }?
scale-option =
  
  ## width | height | inherit
  attribute scale-option { text }?
scaling =
  
  ## uniform | non-uniform | inherit
  attribute scaling { text }?
scaling-method =
  
  ## auto | integer-pixels | resample-any-method | inherit
  attribute scaling-method { text }?
score-spaces =
  
  ## true | false | inherit
  attribute score-spaces { text }?
script =
  
  ## none | auto | <script> | inherit
  attribute script { text }?
show-destination =
  
  ## replace | new
  attribute show-destination { text }?
size =
  
  ## <length>{1,2} | auto | landscape | portrait | inherit
  attribute size { text }?
source-document =
  
  ## <uri-specification> [<uri-specification>]* | none | inherit
  attribute source-document { text }?
space-after =
  
  ## <space> | inherit
  attribute space-after { text }?,
  attribute space-after.minimum { text }?,
  attribute space-after.optimum { text }?,
  attribute space-after.maximum { text }?,
  attribute space-after.precedence { text }?,
  attribute space-after.conditionality { text }?
space-before =
  
  ## <space> | inherit
  attribute space-before { text }?,
  attribute space-before.minimum { text }?,
  attribute space-before.optimum { text }?,
  attribute space-before.maximum { text }?,
  attribute space-before.precedence { text }?,
  attribute space-before.conditionality { text }?
space-end =
  
  ## <space> | <percentage> | inherit
  attribute space-end { text }?,
  attribute space-end.minimum { text }?,
  attribute space-end.optimum { text }?,
  attribute space-end.maximum { text }?,
  attribute space-end.precedence { text }?,
  attribute space-end.conditionality { text }?
space-start =
  
  ## <space> | <percentage> | inherit
  attribute space-start { text }?,
  attribute space-start.minimum { text }?,
  attribute space-start.optimum { text }?,
  attribute space-start.maximum { text }?,
  attribute space-start.precedence { text }?,
  attribute space-start.conditionality { text }?
span =
  
  ## none | all | inherit
  attribute span { text }?
src =
  
  ## <uri-specification> | inherit
  attribute src { text }
start-indent =
  
  ## <length> | <percentage> | inherit
  attribute start-indent { text }?
starting-state =
  
  ## show | hide
  attribute starting-state { text }?
starts-row =
  
  ## true | false
  attribute starts-row { text }?
suppress-at-line-break =
  
  ## auto | suppress | retain | inherit
  attribute suppress-at-line-break { text }?
switch-to =
  
  ## xsl-preceding | xsl-following | xsl-any | <name>[ <name>]*
  attribute switch-to { text }?
table-layout =
  
  ## auto | fixed | inherit
  attribute table-layout { text }?
table-omit-footer-at-break =
  
  ## true | false
  attribute table-omit-footer-at-break { text }?
table-omit-header-at-break =
  
  ## true | false
  attribute table-omit-header-at-break { text }?
target-presentation-context =
  
  ## use-target-processing-context | <uri-specification>
  attribute target-presentation-context { text }?
target-processing-context =
  
  ## document-root | <uri-specification>
  attribute target-processing-context { text }?
target-stylesheet =
  
  ## use-normal-stylesheet | <uri-specification>
  attribute target-stylesheet { text }?
text-align =
  
  ## start | center | end | justify | inside | outside | left | right | <string> | inherit
  attribute text-align { text }?
text-align-last =
  
  ## relative | start | center | end | justify | inside | outside | left | right | inherit
  attribute text-align-last { text }?
text-altitude =
  
  ## use-font-metrics | <length> | <percentage> | inherit
  attribute text-altitude { text }?
text-decoration =
  
  ## none | [ [ underline | no-underline] || [ overline | no-overline ] || [ line-through | no-line-through ] || [ blink | no-blink ] ] | inherit
  attribute text-decoration { text }?
text-depth =
  
  ## use-font-metrics | <length> | <percentage> | inherit
  attribute text-depth { text }?
text-indent =
  
  ## <length> | <percentage> | inherit
  attribute text-indent { text }?
text-shadow =
  
  ## none | [<color> || <length> <length> <length>? ,]* [<color> || <length> <length> <length>?] | inherit
  attribute text-shadow { text }?
text-transform =
  
  ## capitalize | uppercase | lowercase | none | inherit
  attribute text-transform { text }?
top =
  
  ## <length> | <percentage> | auto | inherit
  attribute top { text }?
treat-as-word-space =
  
  ## auto | true | false | inherit
  attribute treat-as-word-space { text }?
unicode-bidi =
  
  ## normal | embed | bidi-override | inherit
  attribute unicode-bidi { text }?
vertical-align =
  
  ## baseline | middle | sub | super | text-top | text-bottom | <percentage> | <length> | top | bottom | inherit
  attribute vertical-align { text }?
visibility =
  
  ## visible | hidden | collapse | inherit
  attribute visibility { text }?
white-space =
  
  ## normal | pre | nowrap | inherit
  attribute white-space { text }?
white-space-collapse =
  
  ## false | true | inherit
  attribute white-space-collapse { text }?
white-space-treatment =
  
  ## ignore | preserve | ignore-if-before-linefeed | ignore-if-after-linefeed | ignore-if-surrounding-linefeed | inherit
  attribute white-space-treatment { text }?
widows =
  
  ## <integer> | inherit
  attribute widows { text }?
width =
  
  ## <length> | <percentage> | auto | inherit
  attribute width { text }?
word-spacing =
  
  ## normal | <length> | <space> | inherit
  attribute word-spacing { text }?,
  attribute word-spacing.minimum { text }?,
  attribute word-spacing.optimum { text }?,
  attribute word-spacing.maximum { text }?,
  attribute word-spacing.precedence { text }?,
  attribute word-spacing.conditionality { text }?
wrap-option =
  
  ## no-wrap | wrap | inherit
  attribute wrap-option { text }?
writing-mode =
  
  ## lr-tb | rl-tb | tb-rl | tb-lr | bt-lr | bt-rl | lr-bt | rl-bt | lr-alternating-rl-bt | lr-alternating-rl-tb | lr-inverting-rl-bt | lr-inverting-rl-tb | tb-lr-in-lr-pairs | lr | rl | tb | inherit
  attribute writing-mode { text }?
xml.lang =
  
  ## <language-country> | inherit
  attribute xml:lang { xsd:language }?
z-index =
  
  ## auto | <integer> | inherit
  attribute z-index { text }?
# 
# Additional patterns
#

# For fo:instream-foreign-object
anything =
  (element * {
     attribute * - (id | ref-id | internal-destination) { text }*,
     anything
   }
   | text)*
non-xsl =
  attribute * - (local:* | xml:*) { text }*,
  element * - (local:* | fo:*) {
    attribute * { text }*,
    anything
  }*
# For fo:declarations
non-xsl-element =
  element * - (local:* | fo:*) {
    attribute * - id { text }*,
    anything
  }*
# From http://www.w3.org/TR/xsl/#fo_wrapper:
# 
#    An fo:wrapper is only permitted to have children that would be
#    permitted to be children of the parent of the fo:wrapper
#
fo_wrapper.block =
  
  ## 仕様項目グループの継承されたプロパティを指定するとfo:wrapperを使用しています。
  element wrapper { fo_wrapper.attlist, fo_wrapper.model.block }
fo_wrapper.model.block =
  fo_marker*,
  (((text | block.fo.list)* | neutral.fo.list.block)*
   & point.fo.list*)
fo_wrapper.inline =
  
  ## 仕様項目グループの継承されたプロパティを指定するとfo:wrapperを使用しています。
  element wrapper { fo_wrapper.attlist, fo_wrapper.model.inline }
fo_wrapper.model.inline =
  fo_marker*,
  ((((text | inline.fo.list)* | neutral.fo.list.inline)*
    & inline.out-of-line.fo.list*)
   & point.fo.list*)
# 
# FO groups
#
block.fo.list =
  fo_block
  | fo_block-container
  | fo_table-and-caption
  | fo_table
  | fo_list-block
inline.fo.list =
  fo_bidi-override
  | fo_character
  | fo_external-graphic
  | fo_instream-foreign-object
  | fo_inline
  | fo_inline-container
  | fo_leader
  | fo_page-number
  | fo_page-number-citation
  | fo_page-number-citation-last
  | fo_scaling-value-citation
  | fo_basic-link
  | fo_multi-toggle
  | fo_index-page-citation-list
neutral.fo.list =
  fo_multi-switch
  | fo_multi-properties
  | fo_index-range-begin
  | fo_index-range-end
  | fo_wrapper
  | fo_retrieve-marker
  | fo_retrieve-table-marker
  | # Rely on Schematron to indicate where invalid
    fo_float
# Rely on Schematron to indicate where invalid
neutral.fo.list.block =
  fo_multi-switch
  | fo_multi-properties
  | fo_index-range-begin
  | fo_index-range-end
  | fo_wrapper.block
  | fo_retrieve-marker
  | fo_retrieve-table-marker
  | # Rely on Schematron to indicate where invalid
    fo_float
# Rely on Schematron to indicate where invalid
neutral.fo.list.inline =
  fo_multi-switch
  | fo_multi-properties
  | fo_index-range-begin
  | fo_index-range-end
  | fo_wrapper.inline
  | fo_retrieve-marker
  | fo_retrieve-table-marker
  | # Rely on Schematron to indicate where invalid
    fo_float
# Rely on Schematron to indicate where invalid
inline.out-of-line.fo.list = fo_footnote
point.fo.list = fo_change-bar-begin | fo_change-bar-end
# End.
